{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/BaseComponent.ts","webpack:///./src/index.ts","webpack:///./src/RS.ts","webpack:///./src/DependencyInjector.ts","webpack:///./src/BalloonWindowTransformComponent.ts","webpack:///./src/Component.ts","webpack:///./src/EventEmitter.ts","webpack:///./src/NameWindowPositionComponent.ts","webpack:///./src/ComponentExecutor.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","BaseComponent","Component","props","super","this","_messageWindow","messageWindow","console","error","contents","_nameBoxWindow","_choiceListWindow","windowWidth","windowHeight","save","restore","updatePadding","padding","itemPadding","newLineX","numLines","fittingHeight","text","textSizeEx","width","lineHeight","drawMessageFace","x","y","height","ComponentExecutor","getInstance","add","alias_Bitmap_initialize","Bitmap","initialize","fontBold","fontGradient","highlightTextColor","setGradient","color1","color2","color3","tx","ty","context","_context","tWidth","measureTextWidth","gradient","createLinearGradient","addColorStop","_baseTexture","update","setGradientStyle","grd","RS","MessageSystem","Params","style","gradientStyle","contains","ws","hs","createRadialGradient","_makeFontNameText","fontItalic","fontSize","fontFace","_drawTextBody","maxWidth","imageSmoothingEnabled","fontSmoothingEnabled","gradientColor1","gradientColor2","gradientColor3","fillStyle","textColor","fillText","alias_Game_Message_clear","Game_Message","clear","_waitTime","_gradientText","_balloon","_align","_balloonPatternHeight","_lastAlign","setWaitTime","time","setGradientText","getWaitTime","getGradientText","getMaxLine","_maxLine","setMaxLine","maxLine","numVisibleRows","setBalloon","getBalloon","setAlign","push","getAlign","last","shift","undefined","clearAlignLast","setBalloonPatternHeight","getBalloonPatternHeight","Sprite_Battler","screenX","screenY","MessageDesc","outlineColor","outlineWidth","textSpeed","_isSaved","$gameMessage","Window_Base","obtainEscapeCode","textState","arr","Reg","defaultEscapeCode","exec","slice","index","length","toUpperCase","obtainNameColor","Color","gmColor","ColorManager","changeTextColor","color","parseInt","_isUsedTextWidthEx","alias_Window_Base_processEscapeCharacter","processEscapeCharacter","code","tcGroup","TextCodes","ENUM","textCode","Main","obtainEscapeParam","COLOR","ICON","processDrawIcon","INCREASE","makeFontBigger","DECREASE","makeFontSmaller","alias_loadWindowskin","loadWindowskin","windowskin","addLoadListener","baseColor","getFontFace","langCode","navigator","language","fonts","default","drawTextEx","resetFontSettings","createTextState","processAllText","outputWidth","drawing","processCharacter","flushTextState","minFontSize","defaultOutlineWidth","defaultOutlineColor","resetTextColor","maxFontSize","_messageDesc","alias_Window_Base_convertEscapeCharacters","convertEscapeCharacters","regGroup","Group","replace","VAR","args","$gameVariables","toString","PLAYER","actorName","PARTY_MEMBER","partyMemberName","NUM","toComma","GOLD","TextManager","currencyUnit","CLASSES","$dataClasses","ITEM","$dataItems","WEAPON","$dataWeapons","ARMOR","$dataArmors","ENEMY","$dataEnemies","STATE","$dataStates","SKILL","$dataSkills","ALIGN_LEFT","ALIGN","ALIGN_CENTER","ALIGN_RIGHT","Number","ALIGN_CLEAR","source","textPadding","processAlign","_textState","rtl","setAlignLeft","setAlignCenter","setAlignRight","alias_Window_Base_processNewLine_align","processNewLine","startX","contentsWidth","Window_Message","obtainTextSpeed","obtainGradientText","String","obtainSoundName","alias_Window_Message_processEscapeCharacter","TEXT_SPEED","TEXT_SIZE","setTextSize","OUTLINE_COLOR","setStrokeColor","INDENT","setTextIndent","OUTLINE_WIDTH","setStrokeWidth","BOLD","setTextBold","BOLD_START","BOLD_END","ITALIC","setTextItalic","ITALIC_START","ITALIC_END","GRADIENT","setTextGradient","HIGHLIGHT_TEXT_COLOR","setHighlightTextColor","TAB","textWidth","TabSize","CARRIAGE_RETURN","startWait","PLAY_SE","playSe","SHOW_PICTURE","showPicture","HIDE_PICTURE","erasePicture","FACE","split","clamp","seName","data","trim","pan","pitch","volume","ConfigManager","seVolume","AudioManager","param","raw","map","e","params","ret","forEach","a","$gameScreen","apply","picId","_pauseSignSprite","move","_width","_height","scale","resetGradient","alias_Window_Message_createTextState","px","py","assign","processWordWrap","w","isValid","Math","floor","needsNewPage","startPause","alias_Window_Message_processNewLinePW","charCodeAt","processControlCharacter","buffer","alias_Window_Message_processCharacter","isDirty","preLen","substr","processNormalCharacterProxy","isParagraphMinifier","faceName","ImageManager","faceWidth","faceDirection","contentW","contentH","_backBuffer","fillAll","alias_Window_Message_flushTextState","_showFast","isEndOfText","bitmap","h","blt","updateBigFaceOpacity","_faceContents","faceOpacity","opacity","fadeInOutFaceContents","isOpening","isClosing","openness","alias_Window_Message_checkToNotClose","checkToNotClose","updatePlacement","goldWindow","_goldWindow","_positionType","positionType","Graphics","boxWidth","windowOffset","boxHeight","SceneManager","_scene","Scene_Map","DependencyInjector","getComponent","updateBalloonPosition","minGoldY","updateDefaultOpacity","updateContentsOpacity","isBigFace","backIndex","faceSide","setFaceZIndex","alias_Window_Message_convertEscapeCharacters","BOLD_START_CV","BOLD_END_CV","ITALIC_START_CV","ITALIC_END_CV","NAME","retName","endsWith","namePositionTypeAtX","_nameWindow","drawName","BALLOON","arguments","$gameParty","inBattle","abs","FRIENDLY_TROOPS","ENEMY_TROOPS","FACE_DIRECTION","setHeight","createContents","alias_Window_Message_initialize","rect","$gameTemp","setMSHeightFunc","createFaceContents","on","removeEventHandler","onLoadWindowskin","COMPONENTS","BalloonWindowTransformComponent","NameWindowPositionComponent","inject","alias_Window_Message_startMessage","startMessage","ready","off","isReady","getPixel","loadSystem","_isDirtyWindowskin","setTimeout","_Window_Message_updateLoading","updateLoading","contentsHeight","Sprite","addChildAt","removeFaceContents","removeChild","faceIndex","faceStartX","textStartX","faceStartOriginX","isValidBigFace","updateNameWindow","standardBackOpacity","backOpacity","translucentOpacity","defaultOpacity","contentsOpacity","getSpriteActors","sign","members","max","type","id","getSpriteEnemies","$gameTroop","setupOwner","$gameMap","setMsgOwner","$gamePlayer","getMsgEvent","Scene_Battle","test","RegExp","$1","event","alias_Window_Message_shouldBreakHere","shouldBreakHere","isBreakCharacter","isPlayTextSound","interval","textSoundInterval","_textSoundInterval","playStaticSe","popParameter","Game_Interpreter","processMessageParams","eventId","meta","getEventComments","windowskinForNameWindow","faceOX","faceOY","Boolean","isValidMultiLine","codes","prevCode","lineCount","currentCommand","_list","_index","choiceWindowStyle","multiLineAddMessage","initLineHeight","_texts","nextEventCode","parameters","addLineHeight","_lineHeight","isMultiLine","Window_NameBox","isRTL","Game_Temp","func","_callMSHeightFunc","alias_Game_Map_initialize","Game_Map","_msgOwner","_msgEvent","getMsgOwner","tileHeight","setMsgEvent","ev","initSystem","executeAll","pluginParams","$plugins","filter","description","pluginName","MessageParams","jsonParse","str","JSON","parse","k","v","keys","lastUsed","pop","Default","Korean","Chinese","English","Japanese","FACE_START_ORIGIN_X","nameWindowWidth","NAME_WINDOW_WIDTH","nameWindowRows","NAME_WINDOW_ROWS","FONT_SIZE","STD_PADDING","isValidShakingChoice","nameWindowX","nameWindowY","nameWindowStdPadding","WIDTH","HEIGHT","systemFonts","settings","languageCode","fontName","isTempSpriteContainerVisibility","Point","customFont","customFontName","customFontSrc","defaultChoicePostion","exTextColors","pathTextSound","textSoundEval1","textSoundEval2","textSoundPoolSize","preloadWindowskins","alias_Game_Temp_initialize","eval","KoreanEscapeCode","ChineseEscapeCode","EnglishEscapeCode","JapaneseEscapeCode","rowData","retData","concat","WAIT_SEC_15","WAIT_SEC_60","START_PAUSE","LINE_SHOW_FAST_LT","LINE_SHOW_FAST_GT","PAUSE_SKIP","getTextCode","idx","match","note","list","commonEvent","reservedCommonEvent","re","join","getColor","getBaseColor","getUserCustomColor","obj","g","b","parseFloat","KOREAN_COLORS","청록","청록색","c_aqua","검은색","검정","c_black","파란색","파랑","c_blue","짙은회색","c_dkgray","자홍색","자홍","c_fuchsia","회색","c_gray","녹색","c_green","밝은녹색","라임","c_lime","밝은회색","c_ltgray","밤색","마룬","c_maroon","감청색","네이비","c_navy","황록색","올리브","c_olive","주황색","주황","오렌지","c_orange","보라색","보라","c_purple","빨간색","빨강","c_red","은색","은","c_silver","민트색","c_teal","흰색","흰","c_white","노란색","노랑","c_yellow","CHINESE_COLOR","水色","黑色","蓝色","深灰色","紫红色","灰色","绿色","浅绿色","浅灰色","栗色","绀青色","黄绿色","橙黄色","紫色","红色","银白色","水鸭色","白色","黄色","ENGLISH_COLOR","AQUA","BLACK","BLUE","DKGRAY","FUCHSIA","GRAY","GREEN","LIME","LTGRAY","MAROON","NAVY","OLIVE","ORANGE","PURPLE","RED","SILVER","TEAL","WHITE","YELLOW","JAPANESE_COLOR","アクア色","靑色","ふか灰色","紫紅色","綠色","黃綠","鼠色","群青色","ネイビー","黃綠色","オリーブ色","橙色","オレンジ色","赤色","レッド","銀色","ミント色","薄荷色","黃色","getKoreanColor","getChineseColor","getEnglishColor","getJapaneseColor","getBrowser","tem","ua","userAgent","M","version","appName","appVersion","splice","_isDirty","log","component","_components","emit","_bWidth","_bHeight","onReady","temp","baseWidth","tempText","min","pad","numOfLines","standardPadding","calcBalloonRectHeight","pw","isChoice","maxChoices","choices","_choiceWindow","ox","oy","dx","dy","mx","canvasToLocalX","my","scaleY","ny","isActiveInBalloon","owner","setBalloonPlacement","setBalloonRect","updateSubBalloonElements","warn","$gameSystem","isSideView","parent","scene","_spriteset","_actorSprites","_enemySprites","tempBattlers","target","_actor","isAlive","_enemy","padY","_mainSprite","transform","updateTransform","tempFontSize","calcTextHeight","EventEmitter","init","mounted","onDestroy","_listeners","eventName","Function","isNaN","nw","position","nx","newX","setOpacity","ballonOwnerType","updatePositionX","topY","isOpen","INSTANCE","startChar","endChar","len","fromCharCode","random","callbackFunction","active","currentCallback"],"mappings":"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","file":"RS_MessageSystem.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","import { Component } from \"./Component\";\n\n/**\n * @class BaseComponent\n * @description\n * 샌드박스 환경에서 MV 메소드를 호출하여 이전 버전에 대한 안전성을 제공합니다.\n */\nexport class BaseComponent extends Component {\n  private _messageWindow!: Window_Message;\n\n  constructor(props: { [key: string]: any }) {\n    super(props);\n  }\n\n  onReady(props: { [key: string]: any }) {\n    // if the message window is valid from passed props.\n    if (!(\"messageWindow\" in props)) {\n      console.error(\"messageWindow is not defined\");\n      return;\n    }\n\n    /**\n     * @type {Window_Message}\n     */\n    this._messageWindow = props.messageWindow;\n  }\n\n  // Getters\n  get messageWindow() {\n    return this._messageWindow;\n  }\n\n  get contents() {\n    return this._messageWindow.contents;\n  }\n\n  /**\n   * @returns {Window_NameBox}\n   */\n  get _nameWindow() {\n    return this._messageWindow._nameBoxWindow;\n  }\n\n  get _choiceWindow() {\n    return this._messageWindow._choiceListWindow\n      ? this._messageWindow._choiceListWindow\n      : {\n          windowWidth: () => 0,\n          windowHeight: () => 0,\n        };\n  }\n\n  save() {\n    // 'this._messageWindow?.save()'의 구현입니다.\n    // 하지만 save는 함수가 아닐 수도 있습니다.\n    // 타입의 안전성은 체크하지 않습니다.\n    this._messageWindow.save ? this._messageWindow.save() : null;\n  }\n\n  restore() {\n    // 'this._messageWindow?.restore()'의 구현입니다.\n    // 하지만 save는 함수가 아닐 수도 있습니다.\n    // 타입의 안전성은 체크하지 않습니다.\n    this._messageWindow.restore ? this._messageWindow.restore() : null;\n  }\n\n  standardPadding() {\n    // 패딩을 업데이트해야 합니다 (MZ에서 달라진 부분입니다)\n    // 꼭 체크할 필요는 없지만...\n    this._messageWindow.updatePadding();\n    const padding = this._messageWindow.padding || 12;\n\n    return padding;\n  }\n\n  textPadding() {\n    // textPadding()의 구현입니다.\n    return this._messageWindow.itemPadding() || 6;\n  }\n\n  newLineX() {\n    return this._messageWindow.newLineX();\n  }\n\n  fittingHeight(numLines: number) {\n    return this._messageWindow.fittingHeight(numLines);\n  }\n\n  drawTextEx(text: string) {\n    const box = this._messageWindow.textSizeEx(text);\n    return box.width;\n  }\n\n  lineHeight() {\n    return this._messageWindow.lineHeight();\n  }\n\n  /**\n   * TODO: 상속 시, 이 메소드를 오버라이드 하세요.\n   */\n  updatePlacement() {}\n\n  drawMessageFace() {\n    this._messageWindow.drawMessageFace();\n  }\n\n  set x(value: number) {\n    this._messageWindow.x = value;\n  }\n\n  set y(value: number) {\n    this._messageWindow.y = value;\n  }\n\n  set width(value: number) {\n    this._messageWindow.width = value;\n  }\n\n  set height(value: number) {\n    this._messageWindow.height = value;\n  }\n\n  get width() {\n    return this._messageWindow.width;\n  }\n\n  get _width() {\n    return this._messageWindow.width;\n  }\n\n  get height() {\n    return this._messageWindow.height;\n  }\n\n  get _height() {\n    return this._messageWindow.height;\n  }\n\n  canvasToLocalX(x: number) {\n    return x;\n  }\n\n  canvasToLocalY(y: number) {\n    return y;\n  }\n}\n","/// <reference types=\"../types/my-types\" />\n/// <reference types=\"../types/lunalite-pixi-mz\" />\nimport { RS, Color } from \"./RS\";\nimport { DependencyInjector } from \"./DependencyInjector\";\nimport { BalloonWindowTransformComponent } from \"./BalloonWindowTransformComponent\";\nimport { NameWindowPositionComponent } from \"./NameWindowPositionComponent\";\nimport { ComponentExecutor } from \"./ComponentExecutor\";\n\nconst executor = ComponentExecutor.getInstance();\n\nexecutor\n    .add(\"bitmap\", () => {\n        //============================================================================\n        // Bitmap\n        //============================================================================\n\n        var alias_Bitmap_initialize = Bitmap.prototype.initialize;\n        Bitmap.prototype.initialize = function (width: number, height: number) {\n            alias_Bitmap_initialize.call(this, width, height);\n            this.fontBold = false;\n            this.fontGradient = false;\n            this.highlightTextColor = null;\n        };\n\n        Bitmap.prototype.setGradient = function (\n            text,\n            color1,\n            color2,\n            color3,\n            tx,\n            ty\n        ) {\n            var context = this._context;\n            var tWidth = this.measureTextWidth(text);\n            context.save();\n            var gradient = context.createLinearGradient(tx, 0, tx + tWidth, 0);\n            gradient.addColorStop(0, color1);\n            gradient.addColorStop(0.6, color2);\n            gradient.addColorStop(1, color3);\n            context.restore();\n\n            this._baseTexture.update();\n\n            return gradient;\n        };\n\n        Bitmap.prototype.setGradientStyle = function (\n            text,\n            color1,\n            color2,\n            color3,\n            tx,\n            ty\n        ) {\n            var context = this._context;\n            var width = this.measureTextWidth(text);\n            var height = RS.MessageSystem.Params.lineHeight;\n            var grd;\n\n            context.save();\n\n            var style = RS.MessageSystem.Params.gradientStyle;\n\n            if (style !== \"radial\") {\n                if (style.contains(\"horizontal\")) {\n                    grd = context.createLinearGradient(tx, 0, tx + width, 0);\n                } else {\n                    grd = context.createLinearGradient(tx, 0, 0, ty + height);\n                }\n            } else {\n                var ws = width * 0.5;\n                var hs = height * 0.5;\n                grd = context.createRadialGradient(ws, hs, 0.0, ws, hs, ws);\n            }\n\n            if (style === \"radial\") {\n                grd.addColorStop(0.0, color1);\n                grd.addColorStop(1.0, color2);\n            } else if (style.contains(\"axial\")) {\n                grd.addColorStop(0.0, color1);\n                grd.addColorStop(0.5, color2);\n                grd.addColorStop(1.0, color3);\n            } else {\n                grd.addColorStop(0.0, color1);\n                grd.addColorStop(1.0, color2);\n            }\n\n            context.restore();\n\n            this._baseTexture.update();\n\n            return grd;\n        };\n\n        Bitmap.prototype._makeFontNameText = function () {\n            return (\n                (this.fontItalic ? \"Italic \" : \"\") +\n                (this.fontBold ? \"bold \" : \"\") +\n                this.fontSize +\n                \"px \" +\n                this.fontFace\n            );\n        };\n\n        Bitmap.prototype._drawTextBody = function (text, tx, ty, maxWidth) {\n            const context = this._context;\n            context.save(); // 드로잉 상태 저장\n            context.imageSmoothingEnabled =\n                RS.MessageSystem.Params.fontSmoothingEnabled;\n\n            if (this.fontGradient) {\n                var gradient = this.setGradientStyle(\n                    text,\n                    RS.MessageSystem.Params.gradientColor1,\n                    RS.MessageSystem.Params.gradientColor2,\n                    RS.MessageSystem.Params.gradientColor3,\n                    tx,\n                    ty\n                );\n                context.fillStyle = gradient;\n            } else {\n                context.fillStyle = this.textColor;\n            }\n            context.fillText(text, tx, ty, maxWidth);\n            context.fillStyle = this.textColor;\n            context.restore();\n        };\n    })\n    .add(\"main\", () => {\n        //============================================================================\n        // Game_Message\n        //============================================================================\n\n        var alias_Game_Message_clear = Game_Message.prototype.clear;\n        Game_Message.prototype.clear = function () {\n            alias_Game_Message_clear.call(this);\n            this._waitTime = 0;\n            this._gradientText = \"\";\n            this._balloon = -2;\n            this._align = [];\n            this._balloonPatternHeight = 0;\n            this._lastAlign = -1;\n        };\n\n        Game_Message.prototype.setWaitTime = function (time) {\n            this._waitTime = time;\n        };\n\n        Game_Message.prototype.setGradientText = function (text) {\n            this._gradientText = text;\n        };\n\n        Game_Message.prototype.getWaitTime = function () {\n            return this._waitTime || 0;\n        };\n\n        Game_Message.prototype.getGradientText = function () {\n            return this._gradientText;\n        };\n\n        Game_Message.prototype.getMaxLine = function () {\n            return this._maxLine;\n        };\n\n        Game_Message.prototype.setMaxLine = function (maxLine) {\n            this._maxLine = maxLine;\n            RS.MessageSystem.Params.numVisibleRows = maxLine;\n        };\n\n        Game_Message.prototype.setBalloon = function (n) {\n            this._balloon = n;\n        };\n\n        Game_Message.prototype.getBalloon = function (n) {\n            return this._balloon;\n        };\n\n        Game_Message.prototype.setAlign = function (n) {\n            this._align = this._align || [];\n            this._lastAlign = n; // 마지막 정렬 위치 기억\n            this._align.push(n);\n        };\n\n        Game_Message.prototype.getAlign = function (n) {\n            const last = this._align.shift();\n            if (last === undefined) {\n                return this._lastAlign;\n            }\n            return last;\n        };\n\n        Game_Message.prototype.clearAlignLast = function (n) {\n            this._lastAlign = -1;\n        };\n\n        Game_Message.prototype.setBalloonPatternHeight = function (\n            value: number\n        ) {\n            this._balloonPatternHeight = value;\n        };\n\n        Game_Message.prototype.getBalloonPatternHeight = function () {\n            return this._balloonPatternHeight;\n        };\n\n        //============================================================================\n        // Sprite_Battler\n        //============================================================================\n\n        Sprite_Battler.prototype.screenX = function () {\n            return this.x || 0;\n        };\n\n        Sprite_Battler.prototype.screenY = function () {\n            return this.y || 0;\n        };\n\n        //============================================================================\n        // MessageDesc\n        //============================================================================\n\n        class MessageDesc {\n            public fontFace: string;\n            public fontSize: number;\n            public fontBold: boolean;\n            public fontItalic: boolean;\n            public textColor: string;\n            public outlineColor: string;\n            public outlineWidth: number;\n            public fontGradient: boolean;\n            public highlightTextColor: string | null;\n            public textSpeed: number;\n\n            private _isSaved: boolean;\n\n            constructor() {\n                this.fontFace = \"Nanum Gothic\";\n                this.fontSize = 12;\n                this.fontBold = false;\n                this.fontItalic = false;\n                this.textColor = \"#000\";\n                this.outlineColor = \"#fff\";\n                this.outlineWidth = 1;\n                this.fontGradient = false;\n                this.highlightTextColor = null;\n                this.textSpeed = 1;\n\n                this._isSaved = false;\n            }\n\n            /**\n             *\n             * @param {Bitmap} contents\n             */\n            save(contents: Bitmap) {\n                this.fontFace = contents.fontFace;\n                this.fontSize = contents.fontSize;\n                this.fontBold = contents.fontBold;\n                this.fontItalic = contents.fontItalic;\n                this.textColor = contents.textColor;\n                this.outlineColor = contents.outlineColor;\n                this.outlineWidth = contents.outlineWidth;\n                this.fontGradient = contents.fontGradient;\n                this.highlightTextColor = contents.highlightTextColor;\n\n                if ($gameMessage) {\n                    this.textSpeed = $gameMessage.getWaitTime();\n                }\n\n                this._isSaved = true;\n            }\n\n            restore(contents: Bitmap) {\n                if (!this._isSaved) return;\n                if (!(contents instanceof Bitmap)) return;\n                contents.fontFace = this.fontFace;\n                contents.fontSize = this.fontSize;\n                contents.fontBold = this.fontBold;\n                contents.fontItalic = this.fontItalic;\n                contents.textColor = this.textColor;\n                contents.outlineColor = this.outlineColor;\n                contents.outlineWidth = this.outlineWidth;\n                contents.fontGradient = this.fontGradient;\n                contents.highlightTextColor = this.highlightTextColor;\n                if ($gameMessage) {\n                    $gameMessage.setWaitTime(this.textSpeed);\n                }\n                this._isSaved = false;\n            }\n        }\n\n        //============================================================================\n        // Window_Base\n        //============================================================================\n\n        Window_Base.prototype.obtainEscapeCode = function (textState) {\n            var regExp = RS.MessageSystem.Reg.defaultEscapeCode;\n            var arr = regExp.exec(textState.text.slice(textState.index));\n            if (arr) {\n                textState.index += arr[0].length;\n                return arr[0].toUpperCase();\n            } else {\n                return \"\";\n            }\n        };\n\n        /**\n         * 확장된 색상 변경 텍스트 코드 처리\n         * \\색[빨강]과 웹색상 처리를 위한 정규 표현식 처리\n         * @param {}} textState\n         */\n        Window_Base.prototype.obtainNameColor = function (textState) {\n            var arr = /\\[(.+?)\\]/gi.exec(textState.text.slice(textState.index));\n            if (arr) {\n                textState.index += arr[0].length;\n                return Color.gmColor(arr[1]);\n            } else {\n                return ColorManager.textColor(0);\n            }\n        };\n\n        Window_Base.prototype.changeTextColor = function (color) {\n            var c = parseInt(color);\n            // 색상 코드가 숫자인 경우\n            if (c > 0 && c < 32) {\n                color = ColorManager.textColor(color);\n            }\n            if (!this._isUsedTextWidthEx) {\n                this.contents.textColor = color;\n            }\n        };\n\n        var alias_Window_Base_processEscapeCharacter =\n            Window_Base.prototype.processEscapeCharacter;\n        Window_Base.prototype.processEscapeCharacter = function (\n            code,\n            textState\n        ) {\n            var tcGroup = RS.MessageSystem.TextCodes.ENUM;\n            var textCode = RS.MessageSystem.TextCodes.Main;\n            switch (code) {\n                case \"C\":\n                    this.changeTextColor(\n                        this.textColor(\n                            <number>this.obtainEscapeParam(textState)\n                        )\n                    );\n                    break;\n                case textCode[tcGroup.COLOR]:\n                    this.changeTextColor(\n                        this.obtainNameColor(<TextState>textState)\n                    );\n                    break;\n                case \"I\":\n                case textCode[tcGroup.ICON]:\n                    this.processDrawIcon(\n                        <number>this.obtainEscapeParam(textState),\n                        textState\n                    );\n                    break;\n                case \"{\":\n                case textCode[tcGroup.INCREASE]:\n                    this.makeFontBigger();\n                    break;\n                case \"}\":\n                case textCode[tcGroup.DECREASE]:\n                    this.makeFontSmaller();\n                    break;\n                case \"AEND\":\n                    $gameMessage.clearAlignLast();\n                    break;\n                default:\n                    alias_Window_Base_processEscapeCharacter.call(\n                        this,\n                        code,\n                        textState\n                    );\n                    break;\n            }\n        };\n\n        var alias_loadWindowskin = Window_Base.prototype.loadWindowskin;\n        Window_Base.prototype.loadWindowskin = function () {\n            alias_loadWindowskin.call(this);\n            this.windowskin.addLoadListener(() => {\n                Color.baseColor = ColorManager.textColor(0);\n            });\n        };\n\n        Window_Base.prototype.getFontFace = function () {\n            var langCode =\n                RS.MessageSystem.Params.langCode ||\n                navigator.language.slice(0, 2);\n            var fonts = RS.MessageSystem.Params.fonts[langCode];\n            if (fonts) {\n                return fonts;\n            } else {\n                return RS.MessageSystem.Params.fonts.default;\n            }\n        };\n\n        Window_Base.prototype.drawTextEx = function (text, x, y, width) {\n            this.save();\n            this.resetFontSettings();\n            const textState = this.createTextState(text, x, y, width);\n            this.processAllText(textState);\n            this.restore();\n            return textState.outputWidth;\n        };\n\n        Window_Base.prototype.processAllText = function (textState) {\n            this._isUsedTextWidthEx = !textState.drawing;\n            while (textState.index < textState.text.length) {\n                this.processCharacter(textState);\n            }\n            this.flushTextState(textState);\n        };\n\n        Window_Base.prototype.makeFontSmaller = function () {\n            if (this.contents.fontSize >= RS.MessageSystem.Params.minFontSize) {\n                this.contents.fontSize -= 12;\n            }\n        };\n\n        Window_Base.prototype.resetFontSettings = function () {\n            this.contents.fontFace = this.getFontFace();\n            this.contents.fontSize = RS.MessageSystem.Params.fontSize;\n            this.contents.fontBold = false;\n            this.contents.fontItalic = false;\n            this.contents.outlineWidth =\n                RS.MessageSystem.Params.defaultOutlineWidth;\n            this.contents.outlineColor =\n                RS.MessageSystem.Params.defaultOutlineColor;\n            this.contents.fontGradient = false;\n            this.contents.highlightTextColor = null;\n            this.resetTextColor();\n        };\n\n        Window_Base.prototype.makeFontBigger = function () {\n            if (this.contents.fontSize <= RS.MessageSystem.Params.maxFontSize) {\n                this.contents.fontSize += 12;\n            }\n        };\n\n        Window_Base.prototype.save = function () {\n            this._messageDesc = new MessageDesc();\n            this._messageDesc.save(this.contents);\n        };\n\n        Window_Base.prototype.restore = function () {\n            if (!this._messageDesc) return;\n            this._messageDesc.restore(this.contents);\n            this._messageDesc = undefined;\n        };\n\n        var alias_Window_Base_convertEscapeCharacters =\n            Window_Base.prototype.convertEscapeCharacters;\n        Window_Base.prototype.convertEscapeCharacters = function (text) {\n            const regGroup = RS.MessageSystem.Reg.Group;\n            const tcGroup = RS.MessageSystem.TextCodes.ENUM;\n            const textCode = RS.MessageSystem.TextCodes.Main;\n\n            text = alias_Window_Base_convertEscapeCharacters.call(this, text);\n            text = text.replace(\n                regGroup[tcGroup.VAR],\n                function (...args: any[]): string {\n                    return $gameVariables\n                        .value(parseInt(<string>args[1]))\n                        .toString();\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.VAR],\n                function (...args: any[]) {\n                    return $gameVariables.value(parseInt(args[1])).toString();\n                }.bind(this)\n            );\n            text = text.replace(regGroup[tcGroup.PLAYER], (...args: any[]) => {\n                return this.actorName(parseInt(args[1]));\n            });\n            text = text.replace(\n                regGroup[tcGroup.PARTY_MEMBER],\n                (...args: any[]) => {\n                    return this.partyMemberName(parseInt(args[1]));\n                }\n            );\n            text = text.replace(\n                regGroup[tcGroup.NUM],\n                function (...args: any[]) {\n                    return args[1].toComma();\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.GOLD],\n                TextManager.currencyUnit\n            );\n            text = text.replace(\n                regGroup[tcGroup.CLASSES],\n                function (...args: any[]) {\n                    return $dataClasses[parseInt(args[1])].name || \"\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.ITEM],\n                function (...args: any[]) {\n                    return $dataItems[parseInt(args[1])].name || \"\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.WEAPON],\n                function (...args: any[]) {\n                    return $dataWeapons[parseInt(args[1])].name || \"\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.ARMOR],\n                function (...args: any[]) {\n                    return $dataArmors[parseInt(args[1])].name || \"\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.ENEMY],\n                function (...args: any[]) {\n                    return $dataEnemies[parseInt(args[1])].name || \"\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.STATE],\n                function (...args: any[]) {\n                    return $dataStates[parseInt(args[1])].name || \"\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.SKILL],\n                function (...args: any[]) {\n                    return $dataSkills[parseInt(args[1])].name || \"\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.ALIGN_LEFT],\n                function () {\n                    return \"\\x1b\" + textCode[tcGroup.ALIGN] + \"[0]\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.ALIGN_CENTER],\n                function () {\n                    return \"\\x1b\" + textCode[tcGroup.ALIGN] + \"[1]\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.ALIGN_RIGHT],\n                function () {\n                    return \"\\x1b\" + textCode[tcGroup.ALIGN] + \"[2]\";\n                }.bind(this)\n            );\n            text = text.replace(regGroup[tcGroup.ALIGN], (...args: any[]) => {\n                if (!this._isUsedTextWidthEx) {\n                    $gameMessage.setAlign(Number(args[1] || 0));\n                }\n                return \"\";\n            });\n            text = text.replace(\n                /<\\/LEFT>|<\\/CENTER>|<\\/RIGHT>/gi,\n                function () {\n                    return regGroup[tcGroup.ALIGN_CLEAR].source;\n                }.bind(this)\n            );\n            return text;\n        };\n\n        /**\n         * @deprecated\n         */\n        Window_Base.prototype.textPadding = function () {\n            return this.itemPadding();\n        };\n\n        Window_Base.prototype.newLineX = function (textState) {\n            return this.textPadding();\n        };\n\n        Window_Base.prototype.processAlign = function (textState) {\n            textState = textState || this._textState;\n\n            // 아랍어 인가?\n            if (textState.rtl) {\n                return;\n            }\n\n            switch ($gameMessage.getAlign()) {\n                case 0:\n                    this.setAlignLeft(textState);\n                    break;\n                case 1:\n                    this.setAlignCenter(textState);\n                    break;\n                case 2:\n                    this.setAlignRight(textState);\n                    break;\n            }\n        };\n\n        var alias_Window_Base_processNewLine_align =\n            Window_Base.prototype.processNewLine;\n        Window_Base.prototype.processNewLine = function (textState) {\n            alias_Window_Base_processNewLine_align.call(this, textState);\n            this.processAlign(<TextState>textState);\n        };\n\n        Window_Base.prototype.setAlignLeft = function (textState) {\n            textState.x = this.newLineX(textState);\n            textState.startX = textState.x;\n        };\n\n        Window_Base.prototype.setAlignCenter = function (textState) {\n            var padding = this.textPadding();\n            textState.x =\n                (this.newLineX(textState) + this.contentsWidth() + padding) /\n                    2 -\n                textState.outputWidth / 2;\n            textState.startX = textState.x;\n        };\n\n        Window_Base.prototype.setAlignRight = function (textState) {\n            var padding = this.textPadding();\n            textState.x =\n                this.contentsWidth() - padding - textState.outputWidth;\n            textState.startX = textState.x;\n        };\n\n        //============================================================================\n        // Window_Message\n        //============================================================================\n\n        Window_Message.prototype.obtainTextSpeed = function (textState) {\n            var arr = /\\[(\\d+)\\]/.exec(textState.text.slice(textState.index));\n            if (arr) {\n                textState.index += arr[0].length;\n                return parseInt(arr[1]);\n            } else {\n                return 0;\n            }\n        };\n\n        Window_Message.prototype.obtainGradientText = function (textState) {\n            var arr = /^<(.+?)>/.exec(textState.text.slice(textState.index));\n            if (arr) {\n                textState.index += arr[0].length;\n                return String(arr[1]);\n            } else {\n                return \"Empty Text\";\n            }\n        };\n\n        Window_Message.prototype.obtainSoundName = function (textState) {\n            var arr = /\\<(.+?)\\>/.exec(textState.text.slice(textState.index));\n            if (arr) {\n                textState.index += arr[0].length;\n                return String(arr[1]);\n            } else {\n                return \"\";\n            }\n        };\n\n        var alias_Window_Message_processEscapeCharacter =\n            Window_Message.prototype.processEscapeCharacter;\n        Window_Message.prototype.processEscapeCharacter = function (\n            code,\n            textState: TextState | string\n        ) {\n            var tcGroup = RS.MessageSystem.TextCodes.ENUM;\n            var textCode = RS.MessageSystem.TextCodes.Main;\n            switch (code) {\n                case textCode[tcGroup.TEXT_SPEED]:\n                    $gameMessage.setWaitTime(\n                        <number>this.obtainEscapeParam(textState)\n                    );\n                    break;\n                case textCode[tcGroup.TEXT_SIZE]:\n                    this.setTextSize(<number>this.obtainEscapeParam(textState));\n                    break;\n                case textCode[tcGroup.OUTLINE_COLOR]:\n                    this.setStrokeColor(\n                        this.obtainNameColor(<TextState>textState)\n                    );\n                    break;\n                case textCode[tcGroup.INDENT]:\n                    this.setTextIndent(<TextState>textState);\n                    break;\n                case textCode[tcGroup.OUTLINE_WIDTH]:\n                    this.setStrokeWidth(\n                        <number>this.obtainEscapeParam(<TextState>textState)\n                    );\n                    break;\n                case textCode[tcGroup.BOLD]:\n                    this.setTextBold(!this.contents.fontBold);\n                    break;\n                case textCode[tcGroup.BOLD_START]:\n                    this.setTextBold(true);\n                    break;\n                case textCode[tcGroup.BOLD_END]:\n                    this.setTextBold(false);\n                    break;\n                case textCode[tcGroup.ITALIC]:\n                    this.setTextItalic(!this.contents.fontItalic);\n                    break;\n                case textCode[tcGroup.ITALIC_START]:\n                    this.setTextItalic(true);\n                    break;\n                case textCode[tcGroup.ITALIC_END]:\n                    this.setTextItalic(false);\n                    break;\n                case textCode[tcGroup.GRADIENT]:\n                    this.setTextGradient(<TextState>textState);\n                    break;\n                case textCode[tcGroup.HIGHLIGHT_TEXT_COLOR]:\n                    this.setHighlightTextColor(\n                        this.obtainNameColor(<TextState>textState)\n                    );\n                    break;\n                case textCode[tcGroup.TAB]:\n                    (<TextState>textState).x += Number(\n                        this.textWidth(\"A\") * RS.MessageSystem.Params.TabSize\n                    );\n                    break;\n                case textCode[tcGroup.CARRIAGE_RETURN]:\n                    (<TextState>textState).x = Number(\n                        (textState as TextState).startX || 0\n                    );\n                    if (!this._isUsedTextWidthEx) this.startWait(1);\n                    break;\n                case textCode[tcGroup.PLAY_SE]:\n                    if (!this._isUsedTextWidthEx)\n                        this.playSe(this.obtainSoundName(<TextState>textState));\n                    break;\n                case textCode[tcGroup.SHOW_PICTURE]:\n                    if (this._isUsedTextWidthEx) break;\n                    this.showPicture(\n                        this.obtainSoundName(<TextState>textState)\n                    );\n                    this.startWait(15);\n                case textCode[tcGroup.HIDE_PICTURE]:\n                    if (this._isUsedTextWidthEx) break;\n                    this.erasePicture(\n                        <number>this.obtainEscapeParam(textState)\n                    );\n                    this.startWait(15);\n                case textCode[tcGroup.FACE]:\n                    if (this._isUsedTextWidthEx) break;\n                    var params = this.obtainSoundName(\n                        <TextState>textState\n                    ).split(\",\");\n                    // this.redrawFaceImage(textState, params[0], params[1], 0, 0);\n                    this.startWait(1);\n                    break;\n                default:\n                    alias_Window_Message_processEscapeCharacter.call(\n                        this,\n                        code,\n                        textState\n                    );\n                    break;\n            }\n        };\n\n        Window_Message.prototype.setTextItalic = function (...args) {\n            this.contents.fontItalic = args[0];\n        };\n\n        Window_Message.prototype.setTextBold = function (...args) {\n            this.contents.fontBold = args[0];\n        };\n\n        Window_Message.prototype.setTextSize = function (...args) {\n            this.contents.fontSize = args[0].clamp(\n                RS.MessageSystem.Params.minFontSize,\n                RS.MessageSystem.Params.maxFontSize\n            );\n        };\n\n        Window_Message.prototype.setStrokeWidth = function (...args) {\n            this.contents.outlineWidth = args[0];\n        };\n\n        Window_Message.prototype.setStrokeColor = function (...args) {\n            this.contents.outlineColor = args[0];\n        };\n\n        Window_Message.prototype.setTextIndent = function (textState) {\n            textState.x += <number>this.obtainEscapeParam(textState);\n        };\n\n        Window_Message.prototype.setHighlightTextColor = function (\n            ...args: any[]\n        ) {\n            let color: any = args[0];\n            if (color === \"null\" || color === \"없음\") {\n                color = null;\n            }\n            this.contents.highlightTextColor = color;\n        };\n\n        Window_Message.prototype.setTextGradient = function (textState) {\n            // TODO: 여기에서는 텍스트를 그리지 않는다.\n            // TODO: 그레디언트 모드임을 명시하고 flush 단계에서 한 번에 그려야 한다 (배경색도 마찬가지이다)\n            this.contents.fontGradient = true;\n        };\n\n        Window_Message.prototype.playSe = function (seName) {\n            var realName = seName.trim();\n            var data = <rm.types.AudioParameters>{\n                name: realName,\n                pan: 0,\n                pitch: 100,\n                volume: (<any>ConfigManager).seVolume,\n            };\n            AudioManager.playSe(data);\n        };\n\n        Window_Message.prototype.showPicture = function (param: string) {\n            const raw = param.split(\",\").map((e) => {\n                return e.trim();\n            });\n\n            let params = [\n                Number(raw[0]),\n                raw[1],\n                Number(raw[2]),\n                Number(raw[3]),\n                Number(raw[4]),\n                100,\n                100,\n                255,\n                0,\n            ];\n            let ret = true;\n\n            // 모든 요소 검증\n            if (params) {\n                params.forEach(function (e, i, a) {\n                    if (e === undefined || e === null) {\n                        ret = false;\n                    }\n                });\n            }\n            // 검증 결과가 참이라면 그림 표시\n            if (ret) {\n                $gameScreen.showPicture.apply($gameScreen, <any>params);\n                return true;\n            }\n            return false;\n        };\n\n        Window_Message.prototype.erasePicture = function (picId) {\n            if (typeof picId !== \"number\") return;\n            $gameScreen.erasePicture(picId);\n        };\n\n        // 구조가 변경된 메서드\n        Window_Message.prototype.resetFontSettings = function () {\n            Window_Base.prototype.resetFontSettings.call(this);\n\n            // pause 아이콘 표시 위치 초기화\n            if (this._pauseSignSprite) {\n                this._pauseSignSprite.move(this._width / 2, this._height);\n                this._pauseSignSprite.scale.y = 1;\n            }\n\n            $gameMessage.setWaitTime(RS.MessageSystem.Params.textSpeed);\n        };\n\n        // 새로 추가된 메서드\n        Window_Message.prototype.resetGradient = function (textState) {\n            this.contents.fontGradient = false;\n        };\n\n        // 폰트 사이즈 설정 메서드는 MZ에서 없다\n        Window_Message.prototype.numVisibleRows = function () {\n            return RS.MessageSystem.Params.numVisibleRows;\n        };\n\n        /**\n         * Create text state included px and py values for text word wrapping.\n         */\n        const alias_Window_Message_createTextState =\n            Window_Message.prototype.createTextState;\n        Window_Message.prototype.createTextState = function (\n            text,\n            x,\n            y,\n            width\n        ) {\n            let textState = alias_Window_Message_createTextState.call(\n                this,\n                text,\n                x,\n                y,\n                width\n            );\n\n            const px = textState.x;\n            const py = textState.y;\n\n            // mixin\n            Object.assign(textState, {\n                px,\n                py,\n            });\n\n            return textState;\n        };\n\n        Window_Message.prototype.processWordWrap = function (\n            textState,\n            w,\n            width,\n            isValid\n        ) {\n            const px = <Required<number>>textState.px;\n\n            if (Math.floor(px + w * 2) > width) {\n                if (isValid) {\n                    this.processNewLine(textState);\n                    if (this.needsNewPage(textState)) {\n                        this.startPause();\n                    }\n                }\n            }\n        };\n\n        const alias_Window_Message_processNewLinePW =\n            Window_Message.prototype.processNewLine;\n        Window_Message.prototype.processNewLine = function (textState) {\n            alias_Window_Message_processNewLinePW.call(this, textState);\n            // 내부 버퍼의 위치를 시작 지점으로 초기화한다.\n            (<TextState>textState).px =\n                textState.startX || (<TextState>textState).x;\n        };\n\n        /**\n         * ! Override\n         * @param {Object} textState\n         */\n        Window_Message.prototype.processCharacter = function (textState) {\n            const c = textState.text[textState.index++];\n            if (c.charCodeAt(0) < 0x20) {\n                this.flushTextState(textState);\n                this.processControlCharacter(textState, c);\n            } else {\n                textState.buffer += c;\n\n                // 내부 버퍼의 위치를 누적 계산한다.\n                textState.px += this.textWidth(c);\n            }\n        };\n\n        const alias_Window_Message_processCharacter =\n            Window_Message.prototype.processCharacter;\n        Window_Message.prototype.processCharacter = function (textState) {\n            // 이전 텍스트의 길이를 계산한다.\n            let isDirty = false;\n            const preBuffer = textState.buffer || \"\";\n            let preLen = preBuffer.length;\n\n            alias_Window_Message_processCharacter.call(this, textState);\n\n            // 새로운 텍스트가 이후에 있는가?\n            // 그게 문자인지 제어 문자인지는 이 로직에선 알 수 없다.\n            const postBuffer = textState.buffer || \"\";\n            const postLen = postBuffer.length;\n            if (preLen !== postLen) {\n                isDirty = true;\n            }\n\n            if (isDirty) {\n                // 끝에 있는 글자를 가지고 온다.\n                // 하지만 제어 문자인지는 확인하지 않는다.\n                // 제어 문자 여부는 메인 로직에서 판단하게 둔다.\n                const c = textState.buffer.substr(\n                    textState.buffer.length - 1,\n                    1\n                );\n                this.processNormalCharacterProxy(textState, c);\n            }\n        };\n\n        /**\n         * MZ에서는 processNormalCharacter의 구현이 없다.\n         * 하지만, 자동 개행이나 사운드 재생 그리고 배경색 묘화를 위해 위치 계산이 필요하다.\n         * 이 때문에 추가한 메서드이며, 텍스트의 묘화를 하진 않는다.\n         * @param {*} textState\n         * @param {*} c\n         */\n        Window_Message.prototype.processNormalCharacterProxy = function (\n            textState,\n            c\n        ) {\n            // MZ에서는 텍스트 상태(textState)가 다음 제어 문자가 등장해야 flush 처리된다.\n            // 따라서 이곳에서는 텍스트가 그려질 수 없다.\n            const w = this.textWidth(c);\n            let width = this.contentsWidth();\n\n            // 일반 메시지 모드에서만 동작 한다.\n            let isValid =\n                $gameMessage.getBalloon() === -2 &&\n                !this._isUsedTextWidthEx &&\n                RS.MessageSystem.Params.isParagraphMinifier;\n\n            // 소수점 자리를 버려야 정확히 계산된다.\n            this.processWordWrap(textState, w, width, isValid);\n\n            const contents = this.contents;\n            const faceName = $gameMessage.faceName();\n\n            // if the faceName is not empty and the face direction is to right?\n            if (faceName !== \"\") {\n                width = contents.width - ImageManager.faceWidth;\n                isValid = RS.MessageSystem.Params.faceDirection === 2;\n                this.processWordWrap(textState, w, width, isValid);\n            }\n\n            // 배경색의 위치를 계산하고 비트맵 인스턴스를 생성한다.\n            if (contents.highlightTextColor !== null) {\n                const contentW = Math.floor(w * 2) + 1.0;\n                const contentH = this.lineHeight();\n\n                // 배경 버퍼의 생성\n                this._backBuffer = {\n                    buffer: new Bitmap(contentW, contentH),\n                    textState: null,\n                    isDirty: false,\n                };\n\n                const { px, py } = <TextState>textState;\n\n                // 배경 버퍼는 내부 버퍼의 초기 위치로부터 계산된다.\n                this._backBuffer.buffer.fillAll(contents.highlightTextColor);\n                // 이 플래그가 활성화되어있다면 flushTextState에서 그리기 처리를 해야 한다.\n                this._backBuffer.isDirty = true;\n                this._backBuffer.textState = textState;\n            }\n        };\n\n        const alias_Window_Message_flushTextState =\n            Window_Message.prototype.flushTextState;\n        Window_Message.prototype.flushTextState = function (textState) {\n            // 기본 지연 시간 설정\n            if (\n                !this._showFast &&\n                !this.isEndOfText(textState) &&\n                !this._isUsedTextWidthEx\n            ) {\n                this.startWait($gameMessage.getWaitTime() || 0);\n            }\n\n            // 배경색의 처리\n            if (\n                !this._isUsedTextWidthEx &&\n                this._backBuffer &&\n                this._backBuffer.isDirty\n            ) {\n                if (textState.drawing) {\n                    /**\n                     * @type {Bitmap}\n                     */\n                    const bitmap = this._backBuffer.buffer;\n                    const tx = (<TextState>textState).px;\n                    const ty = (<TextState>textState).py;\n                    const x = (<TextState>textState).x;\n                    const y = (<TextState>textState).y;\n                    const w = bitmap.width;\n                    const h = bitmap.height;\n\n                    this.contents.blt(bitmap, 0, 0, w, h, x, y);\n                    this._backBuffer.isDirty = false;\n                }\n            }\n            alias_Window_Message_flushTextState.call(this, textState);\n        };\n\n        // [X] Window_Message.prototype.createSubWindows\n        // [X] RS.MessageSystem.Params.extraSubWindows = [];\n        // [X] Window_Message.prototype.subWindows\n\n        Window_Message.prototype.updateBigFaceOpacity = function () {\n            if (!this._faceContents) {\n                return;\n            }\n            let { faceOpacity } = RS.MessageSystem.Params;\n            if (!faceOpacity) faceOpacity = 255;\n            const value = faceOpacity.clamp(0, 255);\n            this._faceContents.opacity = value;\n        };\n\n        Window_Message.prototype.fadeInOutFaceContents = function () {\n            if (!this._faceContents) {\n                return;\n            }\n\n            const isValid = this.isOpening() || this.isClosing();\n            if (isValid) {\n                const openness = (this.openness || 0).clamp(0, 255);\n                this._faceContents.scale.y = openness / 255;\n                this._faceContents.y =\n                    (this._faceContents.height / 2) * (1 - this.openness / 255);\n            }\n        };\n\n        const alias_Window_Message_checkToNotClose =\n            Window_Message.prototype.checkToNotClose;\n        Window_Message.prototype.checkToNotClose = function () {\n            this.fadeInOutFaceContents();\n            alias_Window_Message_checkToNotClose.call(this);\n        };\n\n        Window_Message.prototype.updatePlacement = function () {\n            // TODO: try-catch statement will be deleted later.\n            try {\n                const goldWindow = this._goldWindow;\n                this._positionType = $gameMessage.positionType();\n\n                // 말풍선 모드가 아니라면 X좌표를 화면 중앙에 맞춘다.\n                if ($gameMessage.getBalloon() === -2) {\n                    this.x =\n                        Graphics.boxWidth / 2 -\n                        this.width / 2 +\n                        RS.MessageSystem.Params.windowOffset.x;\n                    this.y =\n                        (this._positionType *\n                            (Graphics.boxHeight - this.height)) /\n                            2 +\n                        RS.MessageSystem.Params.windowOffset.y;\n                } else {\n                    if (SceneManager._scene instanceof Scene_Map) {\n                        (<BalloonWindowTransformComponent>(\n                            DependencyInjector.getComponent(\n                                \"BalloonWindowTransformComponent\"\n                            )\n                        )).updateBalloonPosition();\n                        // this.updateBalloonPosition();\n                    }\n                }\n\n                // 골드 윈도우의 위치 설정\n                if (goldWindow) {\n                    const minGoldY = goldWindow.height;\n                    this._goldWindow.y =\n                        this.y > minGoldY\n                            ? 0\n                            : Graphics.boxHeight - goldWindow.height;\n                }\n\n                // 투명도 업데이트\n                this.updateDefaultOpacity();\n                this.updateContentsOpacity();\n                this.updateBigFaceOpacity();\n\n                // 이름 윈도우 업데이트\n\n                // 얼굴 이미지의 Z-Index 업데이트\n                if ($gameMessage.faceName() !== \"\") {\n                    const isBigFace = /^Big_/.exec($gameMessage.faceName());\n                    const backIndex = 2;\n\n                    if (RS.MessageSystem.Params.faceSide) {\n                        this.setFaceZIndex(isBigFace ? 0 : backIndex);\n                    } else {\n                        this.setFaceZIndex(backIndex);\n                    }\n                }\n            } catch (e) {\n                console.error(e);\n            }\n        };\n\n        const alias_Window_Message_convertEscapeCharacters =\n            Window_Message.prototype.convertEscapeCharacters;\n        Window_Message.prototype.convertEscapeCharacters = function (text) {\n            const tcGroup = RS.MessageSystem.TextCodes.ENUM;\n            const textCode = RS.MessageSystem.TextCodes.Main;\n            const regGroup = RS.MessageSystem.Reg.Group;\n            text = alias_Window_Message_convertEscapeCharacters.call(\n                this,\n                text\n            );\n            text = text.replace(\n                regGroup[tcGroup.BOLD_START_CV],\n                function () {\n                    return regGroup[tcGroup.BOLD_START].source;\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.BOLD_END_CV],\n                function () {\n                    return regGroup[tcGroup.BOLD_END].source;\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.ITALIC_START_CV],\n                function () {\n                    return regGroup[tcGroup.ITALIC_START].source;\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.ITALIC_END_CV],\n                function () {\n                    return regGroup[tcGroup.ITALIC_END].source;\n                }.bind(this)\n            );\n            text = text.replace(regGroup[tcGroup.NAME], (...args) => {\n                let retName = args[1];\n\n                if (retName.endsWith(\":left\")) {\n                    retName = retName.replace(\":left\", \"\");\n                    RS.MessageSystem.Params.namePositionTypeAtX = \"left\";\n                }\n                if (retName.endsWith(\":auto\")) {\n                    retName = retName.replace(\":auto\", \"\");\n                    RS.MessageSystem.Params.namePositionTypeAtX = \"auto\";\n                }\n                if (retName.endsWith(\":center\")) {\n                    retName = retName.replace(\":center\", \"\");\n                    RS.MessageSystem.Params.namePositionTypeAtX = \"center\";\n                }\n                if (retName.endsWith(\":opacity0\")) {\n                    retName = retName.replace(\":opacity0\", \"\");\n                    RS.MessageSystem.Params.namePositionTypeAtX = \"opacity0\";\n                }\n                if (retName.endsWith(\":defaultOpacity\")) {\n                    retName = retName.replace(\":defaultOpacity\", \"\");\n                    RS.MessageSystem.Params.namePositionTypeAtX =\n                        \"defaultOpacity\";\n                }\n                if (retName.endsWith(\":right\")) {\n                    retName = retName.replace(\":right\", \"\");\n                    RS.MessageSystem.Params.namePositionTypeAtX = \"right\";\n                }\n                (this._nameWindow as any).drawName(retName);\n                return \"\";\n            });\n            text = text.replace(\n                regGroup[tcGroup.BALLOON],\n                function () {\n                    const value = Number(arguments[1] || -2);\n                    if ($gameParty.inBattle()) {\n                        $gameMessage.setBalloon(\n                            // @ts-ignore\n                            value < 0\n                                ? \"ENEMIES : \" + Math.abs(value)\n                                : \"ACTORS : \" + value\n                        );\n                    } else {\n                        $gameMessage.setBalloon(value);\n                    }\n                    return \"\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.FRIENDLY_TROOPS],\n                function () {\n                    var value = Number(arguments[1] || 0);\n                    $gameMessage.setBalloon(\n                        // @ts-ignore\n                        \"ACTORS : \" + value\n                    );\n                    return \"\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.ENEMY_TROOPS],\n                function () {\n                    var value = Number(arguments[1] || 0);\n                    $gameMessage.setBalloon(\n                        // @ts-ignore\n                        \"ENEMIES : \" + value\n                    );\n                    return \"\";\n                }.bind(this)\n            );\n            text = text.replace(regGroup[tcGroup.FACE_DIRECTION], () => {\n                var value = Number(arguments[1] || 0);\n                if (!this._isUsedTextWidthEx) {\n                    RS.MessageSystem.Params.faceDirection = value;\n                }\n                return \"\";\n            });\n            return text;\n        };\n\n        // Window_Message.prototype.terminateMessage\n\n        Window_Message.prototype.setHeight = function (n) {\n            this.contents.clear();\n            $gameMessage.setMaxLine(n);\n            this.height = this.fittingHeight(n);\n            this.createContents();\n            this.updatePlacement();\n        };\n\n        const alias_Window_Message_initialize =\n            Window_Message.prototype.initialize;\n        Window_Message.prototype.initialize = function (rect) {\n            alias_Window_Message_initialize.call(this, rect);\n            $gameTemp.setMSHeightFunc(this.setHeight.bind(this));\n            this.setHeight(RS.MessageSystem.Params.numVisibleRows);\n            this.createFaceContents();\n            this.on(\"removed\", this.removeEventHandler, this);\n            this.on(\"onLoadWindowskin\", this.onLoadWindowskin, this);\n            DependencyInjector.COMPONENTS = [];\n            DependencyInjector.COMPONENTS.push(BalloonWindowTransformComponent);\n            DependencyInjector.COMPONENTS.push(NameWindowPositionComponent);\n            DependencyInjector.inject(this);\n        };\n\n        const alias_Window_Message_startMessage =\n            Window_Message.prototype.startMessage;\n        Window_Message.prototype.startMessage = function () {\n            DependencyInjector.ready();\n            alias_Window_Message_startMessage.call(this);\n        };\n\n        Window_Message.prototype.removeEventHandler = function () {\n            this.off(\"onLoadWindowskin\", this.onLoadWindowskin, this);\n        };\n\n        /**\n         * TODO: ColorManager.textColor의 대체 구현.\n         *\n         * @param {Number} n\n         * @returns\n         */\n        Window_Message.prototype.textColor = function (n) {\n            const windowskin = this.windowskin;\n            if (!windowskin.isReady()) {\n                // Set the default text color if the windowskin is not ready.\n                return Color.baseColor;\n            }\n            const px = 96 + (n % 8) * 12 + 6;\n            const py = 144 + Math.floor(n / 8) * 12 + 6;\n            return windowskin.getPixel(px, py);\n        };\n\n        Window_Message.prototype.onLoadWindowskin = function () {\n            Color.baseColor = this.textColor(0);\n            this.changeTextColor(Color.baseColor);\n        };\n\n        Window_Message.prototype.loadWindowskin = function () {\n            const bitmap = ImageManager.loadSystem(\n                RS.MessageSystem.Params.windowskin\n            );\n\n            // if the windowskin is changed?\n            if (bitmap !== this.windowskin) {\n                this.windowskin = bitmap;\n                this._isDirtyWindowskin = false;\n                this.windowskin.addLoadListener(() => {\n                    this._isDirtyWindowskin = true;\n                });\n                if (!this.contents) {\n                    this.createContents();\n                }\n                // Set the default text color if the windowskin didn't load yet.\n                this.changeTextColor(Color.baseColor);\n\n                if (!this.windowskin.isReady()) {\n                    return setTimeout(() => this.loadWindowskin(), 10);\n                }\n            }\n        };\n\n        var _Window_Message_updateLoading =\n            Window_Message.prototype.updateLoading;\n        Window_Message.prototype.updateLoading = function () {\n            let ret = true;\n\n            if (this._isDirtyWindowskin) {\n                Color.baseColor = ColorManager.textColor(0);\n                this.changeTextColor(Color.baseColor);\n                this._isDirtyWindowskin = false;\n                ret = true;\n            }\n            return _Window_Message_updateLoading.call(this) && ret;\n        };\n\n        Window_Message.prototype.needsNewPage = function (textState) {\n            return (\n                !this.isEndOfText(textState) &&\n                textState.y + textState.height > this.contentsHeight()\n            );\n        };\n\n        Window_Message.prototype.createFaceContents = function () {\n            this._faceContents = new Sprite();\n            this._faceContents.x = 0;\n            this._faceContents.y = 0;\n\n            this.addChildAt(this._faceContents, 2);\n            return this._faceContents;\n        };\n\n        Window_Message.prototype.removeFaceContents = function () {\n            if (this._faceContents) this.removeChild(this._faceContents);\n        };\n\n        /**\n         * 큰 얼굴 이미지가 설정되었을 때 텍스트 시작 위치\n         */\n        Window_Message.prototype.newLineX = function () {\n            const reg = /^Big_/i;\n            const faceName = $gameMessage.faceName();\n            const faceIndex = $gameMessage.faceIndex();\n            if (reg.exec(faceName)) {\n                var faceStartX = RS.MessageSystem.Params.faceSide\n                    ? 0\n                    : RS.MessageSystem.Params.textStartX;\n                return faceIndex > 0 ? 0 : faceStartX;\n            } else {\n                if (RS.MessageSystem.Params.faceDirection === 2) return 0;\n                return faceName ? RS.MessageSystem.Params.faceStartOriginX : 0;\n            }\n        };\n\n        // TODO: 큰 얼굴 이미지 구현 필요\n\n        /**\n         * @param {String} faceName\n         */\n        Window_Message.prototype.isValidBigFace = function (faceName) {\n            var reg = /^Big_/i;\n            return reg.exec(faceName);\n        };\n\n        /**\n         * TODO: deprecated\n         */\n        Window_Message.prototype.updateNameWindow = function () {};\n\n        /**\n         * Window 구성 스프라이트 _windowBackSprite의 투명도를 조절합니다.\n         * TODO: deprecated\n         * @method standardBackOpacity\n         */\n        Window_Message.prototype.standardBackOpacity = function () {\n            return RS.MessageSystem.Params.backOpacity;\n        };\n\n        /**\n         * Bitmap의 context.globalAlpha 값을 변경합니다.\n         * @method translucentOpacity\n         */\n        Window_Message.prototype.translucentOpacity = function () {\n            return RS.MessageSystem.Params.translucentOpacity;\n        };\n\n        /**\n         * 윈도우를 구성하는 모든 객체의 투명도를 변경합니다.\n         * @method updateDefaultOpacity\n         */\n        Window_Message.prototype.updateDefaultOpacity = function () {\n            this.opacity = RS.MessageSystem.Params.defaultOpacity;\n        };\n\n        /**\n         * Window 구성 스프라이트 _windowContentsSprite의 투명도를 변경합니다.\n         * @method updateContentsOpacity\n         */\n        Window_Message.prototype.updateContentsOpacity = function () {\n            this.contentsOpacity = RS.MessageSystem.Params.contentsOpacity;\n        };\n\n        Window_Message.prototype.getSpriteActors = function (\n            sign: number\n        ): IBalloonSpriteTarget | null {\n            if (!$gameParty.members()) return null;\n            const max = $gameParty.members().length;\n            sign = sign.clamp(0, max);\n\n            return {\n                type: \"actor\",\n                id: sign - 1,\n            };\n        };\n\n        Window_Message.prototype.getSpriteEnemies = function (\n            sign: number\n        ): IBalloonSpriteTarget | null {\n            if (!$gameTroop.members()) return null;\n            const max = $gameTroop.members().length;\n            sign = sign.clamp(0, max);\n\n            return {\n                type: \"enemy\",\n                id: sign - 1,\n            };\n        };\n\n        Window_Message.prototype.setupOwner = function (sign) {\n            switch (sign) {\n                case -1: // 플레이어\n                    $gameMap.setMsgOwner($gamePlayer);\n                    break;\n                case 0: // 이 이벤트\n                    $gameMap.setMsgOwner(<Game_Event>$gameMap.getMsgEvent());\n                    break;\n                default:\n                    if (SceneManager._scene instanceof Scene_Battle) {\n                        // 전투 중인가?\n                        if (/(?:ENEMIES)[ ]*:(.*)/.test(sign.toString())) {\n                            // 적\n                            $gameMap.setMsgOwner(\n                                this.getSpriteEnemies(parseInt(RegExp.$1))\n                            );\n                        }\n                        if (/(?:ACTORS)[ ]*:(.*)/.test(sign.toString())) {\n                            // 아군\n                            $gameMap.setMsgOwner(\n                                this.getSpriteActors(parseInt(RegExp.$1))\n                            );\n                        }\n                    } else {\n                        // 맵 이벤트\n                        $gameMap.setMsgOwner($gameMap.event(sign));\n                    }\n                    break;\n            }\n        };\n\n        const alias_Window_Message_shouldBreakHere =\n            Window_Message.prototype.shouldBreakHere;\n        Window_Message.prototype.shouldBreakHere = function (text) {\n            const isBreakCharacter = alias_Window_Message_shouldBreakHere.call(\n                this,\n                text\n            );\n\n            if (isBreakCharacter) {\n                if (RS.MessageSystem.Params.isPlayTextSound) {\n                    const interval = RS.MessageSystem.Params.textSoundInterval;\n\n                    // prettier-ignore\n                    if ((this._textSoundInterval--) <= 0) {\n              AudioManager.playStaticSe(< rm.types.AudioParameters >{\n                  name: RS.MessageSystem.popParameter(\n                      \"Text Sound\",\n                      \"텍스트 효과음\"\n                  ),\n                  pan: 0,\n                  pitch: 100,\n                  volume: 90,\n              });\n              this._textSoundInterval = interval;\n          }\n                }\n            }\n\n            return isBreakCharacter;\n        };\n\n        //============================================================================\n        // Game_Interpreter\n        //============================================================================\n\n        Game_Interpreter.prototype.processMessageParams = function (\n            eventId: number,\n            index: number\n        ) {\n            const meta = <EventCommand.CommentMeta>(\n                RS.MessageSystem.getEventComments(eventId, index - 1)\n            );\n            if (meta[\"윈도우 스킨\"]) {\n                RS.MessageSystem.Params.windowskin =\n                    meta[\"윈도우 스킨\"].trim() || \"Window\";\n                ImageManager.loadSystem(RS.MessageSystem.Params.windowskin);\n            }\n            if (meta[\"이름 윈도우 스킨\"]) {\n                RS.MessageSystem.Params.windowskinForNameWindow =\n                    meta[\"이름 윈도우 스킨\"].trim() || \"Window\";\n                ImageManager.loadSystem(\n                    RS.MessageSystem.Params.windowskinForNameWindow\n                );\n            }\n            if (meta[\"라인 높이\"]) {\n                RS.MessageSystem.Params.lineHeight = parseInt(\n                    meta[\"라인 높이\"]\n                );\n            }\n            if (meta[\"폰트 크기\"]) {\n                RS.MessageSystem.Params.fontSize = parseInt(meta[\"폰트 크기\"]);\n            }\n            if (meta[\"라인\"]) {\n                RS.MessageSystem.Params.numVisibleRows = parseInt(meta[\"라인\"]);\n            }\n            if (meta[\"텍스트 시작 X\"]) {\n                RS.MessageSystem.Params.textStartX = parseInt(\n                    meta[\"텍스트 시작 X\"]\n                );\n            }\n            if (meta[\"큰 페이스칩 OX\"]) {\n                RS.MessageSystem.Params.faceOX = Number(meta[\"큰 페이스칩 OX\"]);\n            }\n            if (meta[\"큰 페이스칩 OY\"]) {\n                RS.MessageSystem.Params.faceOY = Number(meta[\"큰 페이스칩 OY\"]);\n            }\n            if (meta[\"대화창 뒤에 얼굴 표시\"]) {\n                RS.MessageSystem.Params.faceSide = Boolean(\n                    meta[\"대화창 뒤에 얼굴 표시\"] === \"true\"\n                );\n            }\n            if (meta[\"대화창 투명도\"]) {\n                RS.MessageSystem.Params.defaultOpacity = parseInt(\n                    meta[\"대화창 투명도\"]\n                );\n            }\n            if (meta[\"텍스트 효과음 재생 여부\"]) {\n                RS.MessageSystem.Params.isPlayTextSound = Boolean(\n                    meta[\"텍스트 효과음 재생 여부\"] === \"true\"\n                );\n            }\n            if (meta[\"기본 텍스트 출력 속도\"]) {\n                RS.MessageSystem.Params.textSpeed = Number(\n                    meta[\"기본 텍스트 출력 속도\"]\n                );\n            }\n        };\n\n        Game_Interpreter.prototype.isValidMultiLine = function () {\n            const codes = [];\n            let prevCode = 401;\n            let lineCount = 0;\n            for (let i = 1; i < 8; i++) {\n                const currentCommand = this._list[this._index + i];\n                if (currentCommand) {\n                    const code = currentCommand.code;\n                    codes.push(code);\n                    prevCode = code;\n                    if ([101, 401].contains(code)) {\n                        lineCount++;\n                    }\n                }\n            }\n            if (codes.contains(102)) {\n                return false;\n            } else if (codes.contains(103)) {\n                return false;\n            } else if ($gameMessage.getMaxLine() <= 4) {\n                return false;\n            } else if (lineCount <= 4) {\n                return false;\n            } else if (RS.MessageSystem.Params.choiceWindowStyle == \"RMXP\") {\n                return false;\n            } else {\n                return true;\n            }\n        };\n\n        // Game_Interpreter.prototype.command101 = function () {\n        //     if (!$gameMessage.isBusy()) {\n        //         $gameMap.setMsgEvent(this.character(this._eventId > 0 ? 0 : -1));\n        //         $gameMessage.setFaceImage(this._params[0], this._params[1]);\n        //         $gameMessage.setBackground(this._params[2]);\n        //         $gameMessage.setPositionType(this._params[3]);\n\n        //         this.processMessageParams(this._eventId, this._index);\n\n        //         if (this.isMultiLine()) {\n        //             this.multiLineAddMessage();\n        //         } else {\n        //             while (this.nextEventCode() === 401) {\n        //                 // Text data\n        //                 this._index++;\n        //                 $gameMessage.add(this.currentCommand().parameters[0]);\n        //             }\n        //         }\n\n        //         switch (this.nextEventCode()) {\n        //             case 102: // Show Choices\n        //                 this._index++;\n        //                 this.setupChoices(this.currentCommand().parameters);\n        //                 break;\n        //             case 103: // Input Number\n        //                 this._index++;\n        //                 this.setupNumInput(this.currentCommand().parameters);\n        //                 break;\n        //             case 104: // Select Item\n        //                 this._index++;\n        //                 this.setupItemChoice(this.currentCommand().parameters);\n        //                 break;\n        //         }\n        //         this._index++;\n        //         this.setWaitMode(\"message\");\n        //     }\n        //     return false;\n        // };\n\n        Game_Interpreter.prototype.multiLineAddMessage = function () {\n            this.initLineHeight();\n\n            while ($gameMessage._texts.length < $gameMessage.getMaxLine()) {\n                while (this.nextEventCode() === 401) {\n                    this._index++;\n                    $gameMessage.add(this.currentCommand().parameters[0]);\n                    this.addLineHeight();\n                    if (this._lineHeight >= $gameMessage.getMaxLine()) {\n                        break;\n                    }\n                }\n                if (this.nextEventCode() !== 101) {\n                    break;\n                }\n            }\n\n            // 커맨드 코드 401번이 아직 남아있는 상황이라면,\n            // 다음 인덱스로 넘겨야 선택지가 제대로 동작한다.\n            while (this.nextEventCode() === 401) {\n                this._index++;\n            }\n        };\n\n        Game_Interpreter.prototype.initLineHeight = function () {\n            this._lineHeight = 0;\n        };\n\n        Game_Interpreter.prototype.isMultiLine = function () {\n            return this.isValidMultiLine();\n        };\n\n        Game_Interpreter.prototype.addLineHeight = function () {\n            this._lineHeight++;\n            if (this.nextEventCode() === 101) {\n                this._index++;\n            }\n        };\n\n        //============================================================================\n        // Window_NameBox\n        //============================================================================\n\n        Window_NameBox.prototype.updatePlacement = function () {\n            this.width = this.windowWidth();\n            this.height = this.windowHeight();\n            const messageWindow = this._messageWindow;\n            if ($gameMessage.isRTL()) {\n                this.x = messageWindow.x + messageWindow.width - this.width;\n            } else {\n                this.x = messageWindow.x;\n            }\n            if (messageWindow.y > 0) {\n                this.y = messageWindow.y - this.height;\n            } else {\n                this.y = messageWindow.y + messageWindow.height;\n            }\n        };\n\n        //============================================================================\n        // Game_Temp\n        //============================================================================\n\n        Game_Temp.prototype.setMSHeightFunc = function (func) {\n            this._callMSHeightFunc = func;\n        };\n\n        Game_Temp.prototype.setMaxLine = function (n) {\n            if (this._callMSHeightFunc) this._callMSHeightFunc(n);\n        };\n\n        //============================================================================\n        // Game_Map\n        //============================================================================\n\n        var alias_Game_Map_initialize = Game_Map.prototype.initialize;\n        Game_Map.prototype.initialize = function () {\n            alias_Game_Map_initialize.call(this);\n            this._msgOwner = $gamePlayer;\n            this._msgEvent = 0;\n        };\n\n        Game_Map.prototype.getMsgOwner = function () {\n            return this._msgOwner;\n        };\n\n        /**\n         * @method setMsgOwner\n         * @param o {Game_Event | Game_Player}\n         */\n        Game_Map.prototype.setMsgOwner = function (o) {\n            this._msgOwner = o;\n            $gameMessage.setBalloonPatternHeight(this.tileHeight());\n        };\n\n        Game_Map.prototype.getMsgEvent = function () {\n            return this._msgEvent;\n        };\n\n        Game_Map.prototype.setMsgEvent = function (ev) {\n            this._msgEvent = ev;\n        };\n\n        RS.MessageSystem.initSystem();\n    })\n    .ready(\"bitmap\")\n    .ready(\"main\")\n    .executeAll();\n","/***\n * 이것은 RPG Maker MV 호환성을 위해 존재하며 타입스크립트로 재작성되어야 합니다.\n */\nimport { Types } from \"../types/parameters\";\n\ntype TextCodeKey =\n    | \"COLOR\"\n    | \"TEXT_SPEED\"\n    | \"OUTLINE_COLOR\"\n    | \"OUTLINE_WIDTH\"\n    | \"INDENT\"\n    | \"BOLD\"\n    | \"ITALIC\"\n    | \"NAME\"\n    | \"GRADIENT\"\n    | \"PARTY_MEMBER\"\n    | \"PLAYER\"\n    | \"VAR\"\n    | \"ICON\"\n    | \"INCREASE\"\n    | \"DECREASE\"\n    | \"GOLD\"\n    | \"BALLOON\"\n    | \"ALIGN\"\n    | \"NUM\"\n    | \"TEXT_SIZE\"\n    | \"TAB\"\n    | \"CARRIAGE_RETURN\"\n    | \"PLAY_SE\"\n    | \"SHOW_PICTURE\"\n    | \"HIDE_PICTURE\"\n    | \"ITEM\"\n    | \"WEAPON\"\n    | \"ARMOR\"\n    | \"CLASSES\"\n    | \"ENEMY\"\n    | \"STATE\"\n    | \"SKILL\"\n    | \"FACE\"\n    | \"FRIENDLY_TROOPS\"\n    | \"ENEMY_TROOPS\"\n    | \"WAIT_SEC_15\"\n    | \"WAIT_SEC_60\"\n    | \"START_PAUSE\"\n    | \"LINE_SHOW_FAST_LT\"\n    | \"LINE_SHOW_FAST_GT\"\n    | \"PAUSE_SKIP\"\n    | \"BOLD_START\"\n    | \"BOLD_END\"\n    | \"ITALIC_START\"\n    | \"ITALIC_END\"\n    | \"ALIGN_LEFT\"\n    | \"ALIGN_CENTER\"\n    | \"ALIGN_RIGHT\"\n    | \"BOLD_START_CV\"\n    | \"BOLD_END_CV\"\n    | \"ITALIC_START_CV\"\n    | \"ITALIC_END_CV\"\n    | \"ALIGN_CLEAR\"\n    | \"HIGHLIGHT_TEXT_COLOR\"\n    | \"FACE_DIRECTION\";\n\ninterface TextCodeEnum {\n    ENUM: Record<TextCodeKey, number>;\n}\n\ntype TextCode = Record<string, any> & TextCodeEnum;\n\nconst pluginParams = $plugins.filter((i) => {\n    return i.description.contains(\"<RS_MessageSystem>\");\n});\n\nconst pluginName = <Types.PluginName>(\n    (pluginParams.length > 0 && pluginParams[0].name)\n);\nconst parameters = <Types.PluginParameters>(\n    (pluginParams.length > 0 && pluginParams[0].parameters)\n);\n\nexport const RS = <RS>{};\nRS.MessageSystem = RS.MessageSystem || {};\n\nRS.MessageSystem.jsonParse = function (str: string) {\n    const retData = JSON.parse(str, (k, v) => {\n        try {\n            return RS.MessageSystem.jsonParse(v);\n        } catch (e) {\n            return v;\n        }\n    });\n\n    return retData;\n};\n\n/**\n * @method popParameter\n */\nRS.MessageSystem.popParameter = function (...args: any[]) {\n    const k = Object.keys(args);\n    let lastUsed = \"\";\n\n    while (k.length > 0) {\n        lastUsed = args[parseInt(<string>k.pop())];\n\n        // @ts-ignore\n        if (parameters[lastUsed]) return parameters[lastUsed];\n    }\n\n    return \"\";\n};\n\nRS.MessageSystem.Reg = {\n    Default: [],\n    Group: [],\n    Korean: [],\n    Chinese: [],\n    English: [],\n    Japanese: [],\n};\n\nenum MessageParams {\n    FACE_START_ORIGIN_X = 168,\n    NAME_WINDOW_WIDTH = 140,\n    NAME_WINDOW_ROWS = 1,\n    FONT_SIZE = 28,\n    STD_PADDING = 18,\n}\n\nRS.MessageSystem.Params = {\n    faceStartOriginX: MessageParams.FACE_START_ORIGIN_X,\n    nameWindowWidth: MessageParams.NAME_WINDOW_WIDTH,\n    nameWindowRows: MessageParams.NAME_WINDOW_ROWS,\n    FONT_SIZE: MessageParams.FONT_SIZE,\n    STD_PADDING: MessageParams.STD_PADDING,\n    isValidShakingChoice: false,\n    fontSize: Number(\n        RS.MessageSystem.popParameter(\"Font Size\", \"글꼴 크기\") || 28\n    ),\n    textSpeed: Number(\n        RS.MessageSystem.popParameter(\"Text Speed\", \"기본 텍스트 출력 속도\") ||\n            0\n    ),\n    minFontSize: Number(\n        RS.MessageSystem.popParameter(\"Text Min Size\", \"폰트 최소 크기\") || 24\n    ),\n    maxFontSize: Number(\n        RS.MessageSystem.popParameter(\"Text Max Size\", \"폰트 최대 크기\") || 96\n    ),\n    textStartX: Number(\n        RS.MessageSystem.popParameter(\"Text Start X\", \"텍스트 시작 X\")\n    ),\n    numVisibleRows: Number(\n        RS.MessageSystem.popParameter(\"numVisibleRows\", \"라인 갯수\") || 4\n    ),\n    gradientColor1: String(\n        RS.MessageSystem.popParameter(\n            \"gradientColor1\",\n            \"그레디언트 시작 색상\"\n        ) || \"#FFFFFF\"\n    ),\n    gradientColor2: String(\n        RS.MessageSystem.popParameter(\n            \"gradientColor2\",\n            \"그레디언트 중간 색상\"\n        ) || \"#F29661\"\n    ),\n    gradientColor3: String(\n        RS.MessageSystem.popParameter(\"gradientColor3\", \"그레디언트 끝 색상\") ||\n            \"#CC3D3D\"\n    ),\n    nameWindowX: Number(\n        RS.MessageSystem.popParameter(\"Name Window X\", \"이름 윈도우 X\") || 0\n    ),\n    nameWindowY: Number(\n        RS.MessageSystem.popParameter(\"Name Window Y\", \"이름 윈도우 Y\") || 0\n    ),\n    nameWindowStdPadding: Number(\n        RS.MessageSystem.popParameter(\n            \"Name Window Inner Padding\",\n            \"이름 윈도우 안쪽 여백\"\n        ) || 18\n    ),\n    namePositionTypeAtX:\n        RS.MessageSystem.popParameter(\n            \"Name Window Position\",\n            \"이름 윈도우 위치\"\n        ) || \"left\",\n    faceOX: Number(\n        RS.MessageSystem.popParameter(\"Big Face OX\", \"큰 페이스칩 OX\") || 0\n    ),\n    faceOY: Number(\n        RS.MessageSystem.popParameter(\"Big Face OY\", \"큰 페이스칩 OY\") || 0\n    ),\n    faceSide: Boolean(\n        RS.MessageSystem.popParameter(\n            \"Show Big Face Back\",\n            \"대화창 뒤에 얼굴 표시\"\n        ) === \"true\" || false\n    ),\n    WIDTH: MessageParams.FONT_SIZE * 6 + MessageParams.STD_PADDING,\n    HEIGHT: MessageParams.FONT_SIZE + MessageParams.STD_PADDING / 2,\n    TabSize: Number(RS.MessageSystem.popParameter(\"Tab Size\", \"탭 크기\")),\n    backOpacity: Number(\n        RS.MessageSystem.popParameter(\"back Opacity\", \"배경 그림의 투명도\")\n    ),\n    translucentOpacity: Number(\n        RS.MessageSystem.popParameter(\"translucent Opacity\", \"반투명도\")\n    ),\n    defaultOpacity: Number(\n        RS.MessageSystem.popParameter(\"default Opacity\", \"기본 투명도\")\n    ),\n    contentsOpacity: Number(\n        RS.MessageSystem.popParameter(\"contents Opacity\", \"내용의 투명도\")\n    ),\n    defaultOutlineWidth: Number(\n        RS.MessageSystem.popParameter(\"default outline width\", \"테두리 크기\")\n    ),\n    defaultOutlineColor:\n        RS.MessageSystem.popParameter(\"default outline Color\", \"테두리 색상\") ||\n        \"white\",\n    fonts: {\n        default: \"rmmz-mainfont\",\n    },\n};\n\n(() => {\n    const systemFonts: Types.SystemFonts = RS.MessageSystem.jsonParse(\n        parameters[\"systemFont\"]\n    );\n    if (!RS.MessageSystem.Params.fonts) return;\n\n    // ! 여기서부터 변환 시작해야함\n    systemFonts.settings.forEach((i) => {\n        const params = <{ [key: string]: any } | any>{};\n        params[i.languageCode] = i.fontName;\n        Object.assign(RS.MessageSystem.Params.fonts as {}, params);\n    });\n})();\n\nObject.assign(RS.MessageSystem.Params, {\n    isTempSpriteContainerVisibility: false,\n    lineHeight: 36,\n    windowOffset: new Point(0, 0),\n    fontSmoothingEnabled: true,\n    customFont: Boolean(\n        RS.MessageSystem.popParameter(\n            \"Using Custom Font\",\n            \"사용자 지정 폰트 사용 여부\"\n        ) === \"true\"\n    ),\n    customFontName: String(\n        RS.MessageSystem.popParameter(\n            \"Custom Font Name\",\n            \"사용자 지정 폰트명\"\n        ) || \"GameFont\"\n    ),\n    customFontSrc: String(\n        RS.MessageSystem.popParameter(\n            \"Custom Font Src\",\n            \"사용자 지정 폰트 경로\"\n        ) || \"fonts/mplus-1m-regular.ttf\"\n    ),\n    windowskin:\n        RS.MessageSystem.popParameter(\n            \"Default Windowskin\",\n            \"기본 윈도우스킨\"\n        ) || \"Window\",\n    windowskinForNameWindow:\n        RS.MessageSystem.popParameter(\"Name Windowskin\", \"이름 윈도우스킨\") ||\n        \"Window\",\n    choiceWindowStyle: String(\n        RS.MessageSystem.popParameter(\"Choice Style\", \"선택지 스타일\") ||\n            \"default\"\n    ),\n    defaultChoicePostion: parameters[\"Default Choice Position\"] || \"right\",\n    exTextColors: RS.MessageSystem.jsonParse(\n        RS.MessageSystem.popParameter(\"Text Color\", \"텍스트 색상\")\n    ),\n    isPlayTextSound: Boolean(\n        RS.MessageSystem.popParameter(\n            \"Text Sound ON/OFF\",\n            \"텍스트 효과음 재생 여부\"\n        ) === \"true\"\n    ),\n    pathTextSound: String(\n        RS.MessageSystem.popParameter(\"Text Sound\", \"텍스트 효과음\") ||\n            \"Cursor1.ogg\"\n    ),\n    textSoundEval1: RS.MessageSystem.jsonParse(\n        RS.MessageSystem.popParameter(\n            \"Text Sound Execution Condition\",\n            \"텍스트 효과음 실행 조건\"\n        ) || \"Math.randomInt(100) < 45\"\n    ),\n    textSoundEval2: RS.MessageSystem.jsonParse(\n        RS.MessageSystem.popParameter(\n            \"Text Sound Volume\",\n            \"텍스트 효과음 볼륨\"\n        ) || \"(0.4 + (RS.MessageSystem.randomNormal(0.8)[0])).clamp(0.0, 0.8)\"\n    ),\n    textSoundInterval: parseInt(\n        RS.MessageSystem.popParameter(\n            \"Text Sound Interval\",\n            \"텍스트 사운드 재생 간격\"\n        )\n    ),\n    textSoundPoolSize: parseInt(\n        RS.MessageSystem.popParameter(\n            \"텍스트 사운드 풀 크기\",\n            \"Text Sound Pool Size\"\n        ) || 6\n    ),\n    langCode:\n        RS.MessageSystem.popParameter(\"언어 코드\", \"Language Code\") || \"ko\",\n    preloadWindowskins: JSON.parse(parameters[\"preload windowskin\"] || \"[]\"),\n    isParagraphMinifier: Boolean(parameters[\"Paragraph Minifier\"] === \"true\"),\n    gradientStyle: parameters[\"Gradient Style\"],\n    faceOpacity: parseInt(parameters[\"face Opacity\"] || 21),\n    faceDirection: parseInt(parameters[\"face Direction\"] || 0),\n});\n\n//============================================================================\n// Lazy Initialize Parameters (느린 초기화)\n//============================================================================\n\nvar alias_Game_Temp_initialize = Game_Temp.prototype.initialize;\nGame_Temp.prototype.initialize = function () {\n    alias_Game_Temp_initialize.call(this);\n    RS.MessageSystem.Params.windowWidth =\n        eval(parameters[\"Window Width\"]) || Graphics.boxWidth;\n};\n\n//============================================================================\n// Multiple Language supports\n//============================================================================\n\nRS.MessageSystem.Reg.KoreanEscapeCode =\n    /^[\\$\\.\\|\\^!><\\{\\}\\\\]|^[a-zA-Z가-힣]+[!]*/i;\nRS.MessageSystem.Reg.ChineseEscapeCode =\n    /^[\\$\\.\\|\\^!><\\{\\}\\\\]|^[a-zA-Z一-鼣]+[!]*/i;\nRS.MessageSystem.Reg.EnglishEscapeCode = /^[\\$\\.\\|\\^!><\\{\\}\\\\]|^[A-Z]+[!]*/i;\nRS.MessageSystem.Reg.JapaneseEscapeCode =\n    /^[\\$\\.\\|\\^!><\\{\\}\\\\]|^[A-Z\\u3040-\\u309F\\u30A0-\\u30FF\\u3300-\\u33FF\\u4E00-\\u9FFF\\uFF00-\\uFFEF]+[!]*/i;\nRS.MessageSystem.Reg.defaultEscapeCode =\n    /^[\\$\\.\\|\\^!><\\{\\}\\\\]|^[A-Z가-힣]+[!]*/i;\n\nRS.MessageSystem.TextCodes = (function () {\n    const rowData = RS.MessageSystem.popParameter(\"Text Code\", \"텍스트 코드\");\n    const data = JSON.parse(rowData);\n    const retData = <TextCode>{};\n\n    retData.Korean = [undefined].concat(JSON.parse(data.Korean));\n    retData.Chinese = [undefined].concat(JSON.parse(data.Chinese));\n    retData.English = [undefined].concat(JSON.parse(data.English));\n    retData.Japanese = [undefined].concat(JSON.parse(data.Japanese));\n\n    return retData;\n})();\n\nRS.MessageSystem.TextCodes.Main = [];\n\nRS.MessageSystem.TextCodes.ENUM = {\n    COLOR: 1,\n    TEXT_SPEED: 2,\n    OUTLINE_COLOR: 3,\n    OUTLINE_WIDTH: 4,\n    INDENT: 5,\n    BOLD: 6,\n    ITALIC: 7,\n    NAME: 8,\n    GRADIENT: 9,\n    PARTY_MEMBER: 10,\n    PLAYER: 11,\n    VAR: 12,\n    ICON: 13,\n    INCREASE: 14,\n    DECREASE: 15,\n    GOLD: 16,\n    BALLOON: 17,\n    ALIGN: 18,\n    NUM: 19,\n    TEXT_SIZE: 20,\n    TAB: 21,\n    CARRIAGE_RETURN: 22,\n    PLAY_SE: 23,\n    SHOW_PICTURE: 24,\n    HIDE_PICTURE: 25,\n    ITEM: 26,\n    WEAPON: 27,\n    ARMOR: 28,\n    CLASSES: 29,\n    ENEMY: 30,\n    STATE: 31,\n    SKILL: 32,\n    FACE: 33,\n    FRIENDLY_TROOPS: 34, // 여긴 2018.01.14에 추가됨\n    ENEMY_TROOPS: 35,\n    WAIT_SEC_15: 36, // .\n    WAIT_SEC_60: 37, // |\n    START_PAUSE: 38, // !\n    LINE_SHOW_FAST_LT: 39, // <\n    LINE_SHOW_FAST_GT: 40, // >\n    PAUSE_SKIP: 41, // ^\n    BOLD_START: 42, // <B>\n    BOLD_END: 43, // </B>\n    ITALIC_START: 44,\n    ITALIC_END: 45,\n    ALIGN_LEFT: 46,\n    ALIGN_CENTER: 47,\n    ALIGN_RIGHT: 48,\n    BOLD_START_CV: 49,\n    BOLD_END_CV: 50,\n    ITALIC_START_CV: 51,\n    ITALIC_END_CV: 52,\n    ALIGN_CLEAR: 53, // AEND\n    HIGHLIGHT_TEXT_COLOR: 54,\n    FACE_DIRECTION: 55,\n};\n\n/**\n * 주어진 ID 값으로 텍스트 코드를 현지화하여 반환합니다.\n * @param {Number} idx\n */\nRS.MessageSystem.getTextCode = function (idx: number) {\n    const langCode = RS.MessageSystem.Params.langCode;\n\n    if (langCode.match(/ko/)) {\n        return RS.MessageSystem.TextCodes[\"Korean\"][idx];\n    }\n    if (langCode.match(/zh/)) {\n        return RS.MessageSystem.TextCodes[\"Chinese\"][idx];\n    }\n    if (langCode.match(/en/)) {\n        return RS.MessageSystem.TextCodes[\"English\"][idx];\n    }\n    if (langCode.match(/ja/)) {\n        return RS.MessageSystem.TextCodes[\"Japanese\"][idx];\n    }\n    return RS.MessageSystem.TextCodes[\"English\"][idx];\n};\n\n/**\n * 노트 태그를 읽습니다.\n * @memberof RS.MessageSystem\n * @param {Number} eventId\n * @return {Object} meta\n */\nRS.MessageSystem.getEventComments = function (eventId: number, index: number) {\n    let data = <Record<any, any>>{\n        note: \"\",\n        meta: {},\n    };\n    try {\n        // 리스트를 가져옵니다.\n        let list = $gameMap.event(eventId).list();\n\n        // 바로 이전 인덱스에 노트 태그가 있었는 지 확인합니다.\n        if (index < 0) index = 0;\n\n        // 부모 이벤트 없이 호출되는 공통 이벤트가 있는 지 확인합니다.\n        if (eventId <= 0) {\n            var commonEvent = $gameTemp.reservedCommonEvent();\n            if (commonEvent) {\n                list = commonEvent.list;\n                // 공통 이벤트는 한 번 설치된 후 클리어되므로 목록을 두 번 읽을 순 없으므로 예외 처리\n                if (!list) {\n                    return data;\n                }\n            }\n        }\n\n        let param = list[index];\n\n        // 코멘트를 읽어옵니다.\n        while (param && [108, 408].contains(param.code)) {\n            data.note += param.parameters[0] + \"\\r\\n\";\n            index--;\n            param = list[index];\n        }\n\n        if (param && param.code === 108) {\n            data.note += param.parameters[0] + \"\\r\\n\";\n\n            index--;\n            param = list[index];\n\n            while (param.code === 408) {\n                data.note += param.parameters[0] + \"\\r\\n\";\n                index--;\n                param = list[index];\n            }\n\n            if (param.code === 108) {\n                data.note += param.parameters[0] + \"\\r\\n\";\n            }\n        }\n\n        // 노트 태그를 추출합니다 (DataManager.extractMetadata의 변형입니다)\n        const re = /<([^<>:]+)(:?)([^>]*)>/g;\n        data.meta = {};\n        for (;;) {\n            const match = re.exec(data.note);\n            if (match) {\n                if (match[2] === \":\") {\n                    data.meta[match[1].trim()] = match[3];\n                } else {\n                    data.meta[match[1].trim()] = true;\n                }\n            } else {\n                break;\n            }\n        }\n    } catch (e) {\n        // 리스트를 읽지 못할 경우 try-catch 문에 의해 예외 처리가 됩니다.\n        return {\n            note: \"\",\n            meta: {},\n        };\n    }\n    return data.meta;\n};\n\n(() => {\n    \"use strict\";\n    var regData = [\"Korean\", \"English\", \"Chinese\", \"Japanese\"];\n    regData.forEach(function (e, i, a) {\n        var tcGroup = RS.MessageSystem.TextCodes[e];\n        tcGroup = tcGroup.map((e: any, i: number, a: any[]) => {\n            if (e === undefined) return;\n            var data = [];\n            var ret = \"\";\n            for (var str of e) {\n                if (/[a-zA-Z]/i) {\n                    data.push(str);\n                    continue;\n                }\n                var text = str.charCodeAt().toString(16);\n                data.push(\"\\\\u\" + \"{\" + text + \"}\");\n            }\n            ret = data.join(\"\");\n            return ret;\n        });\n        RS.MessageSystem.Reg[e][0] = undefined;\n        RS.MessageSystem.Reg[e][1] = new RegExp(\n            `(?:\\x1bC|\\x1b${tcGroup[1]})\\\\[(.+?)\\\\]`,\n            \"gi\"\n        ); // 색\n        RS.MessageSystem.Reg[e][2] = new RegExp(\n            `\\x1b${tcGroup[2]}\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 속도\n        RS.MessageSystem.Reg[e][3] = new RegExp(\n            `\\x1b${tcGroup[3]}\\\\[(.+?)\\\\]`,\n            \"gi\"\n        ); // 테두리색\n        RS.MessageSystem.Reg[e][4] = new RegExp(\n            `\\x1b${tcGroup[4]}\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 테두리크기\n        RS.MessageSystem.Reg[e][5] = new RegExp(\n            `\\x1b${tcGroup[5]}\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 들여쓰기\n        RS.MessageSystem.Reg[e][6] = new RegExp(`\\x1b${tcGroup[6]}`, \"gi\"); // 굵게!\n        RS.MessageSystem.Reg[e][7] = new RegExp(`\\x1b${tcGroup[7]}`, \"gi\"); // 이탤릭!\n        RS.MessageSystem.Reg[e][8] = new RegExp(\n            `\\x1b${tcGroup[8]}\\\\<(.+?)\\\\>`,\n            \"gi\"\n        ); // 이름\n        RS.MessageSystem.Reg[e][9] = new RegExp(\n            `\\x1b${tcGroup[9]}\\\\<(.+)\\\\>`,\n            \"gi\"\n        ); // 그레디언트\n        RS.MessageSystem.Reg[e][10] = new RegExp(\n            `(?:\\x1bP|\\x1b${tcGroup[10]})\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 파티원\n        RS.MessageSystem.Reg[e][11] = new RegExp(\n            `(?:\\x1bN|\\x1b${tcGroup[11]})\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 주인공\n        RS.MessageSystem.Reg[e][12] = new RegExp(\n            `(?:\\x1bV|\\x1b${tcGroup[12]})\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 변수\n        RS.MessageSystem.Reg[e][13] = new RegExp(\n            `(?:\\x1bI|\\x1b${tcGroup[13]})\\\\[(\\\\d+)\\\\]`,\n            \"g\"\n        ); // 아이콘\n        RS.MessageSystem.Reg[e][14] = new RegExp(\n            `(?:\\x1b{|\\x1b${tcGroup[14]})`,\n            \"gi\"\n        ); // 확대!\n        RS.MessageSystem.Reg[e][15] = new RegExp(\n            `(?:\\x1b}|\\x1b${tcGroup[15]})`,\n            \"gi\"\n        ); // 축소!\n        RS.MessageSystem.Reg[e][16] = new RegExp(\n            `(?:\\x1bG|\\x1b${tcGroup[16]})`,\n            \"gi\"\n        ); // 골드\n        RS.MessageSystem.Reg[e][17] = new RegExp(\n            `\\x1b${tcGroup[17]}\\\\[(.*?)\\\\]`,\n            \"gi\"\n        ); // 말풍선\n        RS.MessageSystem.Reg[e][18] = new RegExp(\n            `\\x1b${tcGroup[18]}\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 정렬자\n        RS.MessageSystem.Reg[e][19] = new RegExp(\n            `\\x1b${tcGroup[19]}\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 숫자\n        RS.MessageSystem.Reg[e][20] = new RegExp(\n            `\\x1b${tcGroup[20]}\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 크기\n        RS.MessageSystem.Reg[e][21] = new RegExp(`\\x1b${tcGroup[21]}`, \"gi\"); // r\n        RS.MessageSystem.Reg[e][22] = new RegExp(`\\x1b${tcGroup[22]}`, \"gi\"); // t\n        RS.MessageSystem.Reg[e][23] = new RegExp(\n            `\\x1b${tcGroup[23]}\\\\<(.+?)\\\\>`,\n            \"gi\"\n        ); // 효과음\n        RS.MessageSystem.Reg[e][24] = new RegExp(\n            `\\x1b${tcGroup[24]}\\\\<(.+?)\\\\>`,\n            \"gi\"\n        ); // 그림 표시\n        RS.MessageSystem.Reg[e][25] = new RegExp(\n            `\\x1b${tcGroup[25]}\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 그림 제거\n        RS.MessageSystem.Reg[e][26] = new RegExp(\n            `(?:\\x1b${tcGroup[26]})\\\\[(\\\\d+)\\\\]`,\n            \"g\"\n        ); // 아이템\n        RS.MessageSystem.Reg[e][27] = new RegExp(\n            `(?:\\x1b${tcGroup[27]})\\\\[(\\\\d+)\\\\]`,\n            \"g\"\n        ); // 무기구\n        RS.MessageSystem.Reg[e][28] = new RegExp(\n            `(?:\\x1b${tcGroup[28]})\\\\[(\\\\d+)\\\\]`,\n            \"g\"\n        ); // 방어구\n        RS.MessageSystem.Reg[e][29] = new RegExp(\n            `(?:\\x1b${tcGroup[29]})\\\\[(\\\\d+)\\\\]`,\n            \"g\"\n        ); // 직업\n        RS.MessageSystem.Reg[e][30] = new RegExp(\n            `(?:\\x1b${tcGroup[30]})\\\\[(\\\\d+)\\\\]`,\n            \"g\"\n        ); // 적군\n        RS.MessageSystem.Reg[e][31] = new RegExp(\n            `(?:\\x1b${tcGroup[31]})\\\\[(\\\\d+)\\\\]`,\n            \"g\"\n        ); // 상태\n        RS.MessageSystem.Reg[e][32] = new RegExp(\n            `(?:\\x1b${tcGroup[32]})\\\\[(\\\\d+)\\\\]`,\n            \"g\"\n        ); // 스킬\n        RS.MessageSystem.Reg[e][33] = new RegExp(\n            `\\x1b${tcGroup[33]}\\\\<(.*)\\\\>`,\n            \"gi\"\n        ); // 얼굴\n        RS.MessageSystem.Reg[e][34] = new RegExp(\n            `(?:\\x1b${tcGroup[34]})\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 아군\n        RS.MessageSystem.Reg[e][35] = new RegExp(\n            `(?:\\x1b${tcGroup[35]})\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 적군\n\n        RS.MessageSystem.Reg[e][36] = new RegExp(`\\x1b${tcGroup[36]}`, \"gi\"); // [.]\n        RS.MessageSystem.Reg[e][37] = new RegExp(`\\x1b${tcGroup[37]}`, \"gi\"); // [|]\n        RS.MessageSystem.Reg[e][38] = new RegExp(`\\x1b${tcGroup[38]}`, \"gi\"); // [!]\n        RS.MessageSystem.Reg[e][39] = new RegExp(`\\x1b${tcGroup[39]}`, \"gi\"); // [<]\n        RS.MessageSystem.Reg[e][40] = new RegExp(`\\x1b${tcGroup[40]}`, \"gi\"); // [>]\n        RS.MessageSystem.Reg[e][41] = new RegExp(`\\x1b${tcGroup[41]}`, \"gi\"); // [\\^]\n\n        RS.MessageSystem.Reg[e][42] = new RegExp(`\\x1b${tcGroup[42]}`, \"gi\"); // AS굵게!\n        RS.MessageSystem.Reg[e][43] = new RegExp(`\\x1b${tcGroup[43]}`, \"gi\"); // AE굵게!\n        RS.MessageSystem.Reg[e][44] = new RegExp(`\\x1b${tcGroup[44]}`, \"gi\"); // AS이탤릭!\n        RS.MessageSystem.Reg[e][45] = new RegExp(`\\x1b${tcGroup[45]}`, \"gi\"); // AE이탤릭!\n\n        RS.MessageSystem.Reg[e][46] = new RegExp(`(?:<${tcGroup[46]}>)`, \"gi\"); // LEFT\n        RS.MessageSystem.Reg[e][47] = new RegExp(`(?:<${tcGroup[47]}>)`, \"gi\"); // CENTER\n        RS.MessageSystem.Reg[e][48] = new RegExp(`(?:<${tcGroup[48]}>)`, \"gi\"); // RIGHT\n\n        RS.MessageSystem.Reg[e][49] = new RegExp(\n            `(?:<[${tcGroup[49]}]>)`,\n            \"gi\"\n        ); // B\n        RS.MessageSystem.Reg[e][50] = new RegExp(\n            `(?:<\\/[${tcGroup[50]}]>)`,\n            \"gi\"\n        ); // B\n        RS.MessageSystem.Reg[e][51] = new RegExp(\n            `(?:<[${tcGroup[51]}]>)`,\n            \"gi\"\n        ); // I\n        RS.MessageSystem.Reg[e][52] = new RegExp(\n            `(?:<\\/[${tcGroup[52]}]>)`,\n            \"gi\"\n        ); // I\n        RS.MessageSystem.Reg[e][53] = new RegExp(`\\x1b${tcGroup[53]}`, \"gi\"); // AEND : ALIGN_CLEAR\n        RS.MessageSystem.Reg[e][54] = new RegExp(\n            `\\x1b${tcGroup[54]}\\\\[(.*)\\\\]`,\n            \"gi\"\n        ); // \\배경색[색상] \\HC[색상]\n        RS.MessageSystem.Reg[e][55] = new RegExp(\n            `\\x1b${tcGroup[55]}\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // \\FD\n    });\n})();\n\nRS.MessageSystem.initSystem = function () {\n    var type = RS.MessageSystem.Params.langCode;\n    var ret = false;\n    if (type.match(/ko/)) {\n        RS.MessageSystem.Reg.Group = RS.MessageSystem.Reg.Korean;\n        RS.MessageSystem.Reg.defaultEscapeCode =\n            RS.MessageSystem.Reg.KoreanEscapeCode;\n        RS.MessageSystem.TextCodes.Main = RS.MessageSystem.TextCodes.Korean;\n        ret = true;\n    }\n    if (type.match(/zh/)) {\n        RS.MessageSystem.Reg.Group = RS.MessageSystem.Reg.Chinese;\n        RS.MessageSystem.Reg.defaultEscapeCode =\n            RS.MessageSystem.Reg.ChineseEscapeCode;\n        RS.MessageSystem.TextCodes.Main = RS.MessageSystem.TextCodes.Chinese;\n        ret = true;\n    }\n    if (type.match(/en/)) {\n        RS.MessageSystem.Reg.Group = RS.MessageSystem.Reg.English;\n        RS.MessageSystem.Reg.defaultEscapeCode =\n            RS.MessageSystem.Reg.EnglishEscapeCode;\n        RS.MessageSystem.TextCodes.Main = RS.MessageSystem.TextCodes.English;\n        ret = true;\n    }\n    if (type.match(/ja/)) {\n        RS.MessageSystem.Reg.Group = RS.MessageSystem.Reg.Japanese;\n        RS.MessageSystem.Reg.defaultEscapeCode =\n            RS.MessageSystem.Reg.JapaneseEscapeCode;\n        RS.MessageSystem.TextCodes.Main = RS.MessageSystem.TextCodes.Japanese;\n        ret = true;\n    }\n    if (ret === false) {\n        RS.MessageSystem.Reg.Group = RS.MessageSystem.Reg.English;\n        RS.MessageSystem.Reg.defaultEscapeCode =\n            RS.MessageSystem.Reg.EnglishEscapeCode;\n        RS.MessageSystem.TextCodes.Main = RS.MessageSystem.TextCodes.English;\n    }\n};\n\n//=============================================================================\n// Color\n//=============================================================================\n\ninterface IColor {\n    getColor(c: number): string;\n    baseColor: string;\n    getBaseColor(): string;\n    getUserCustomColor(str: string): string;\n    gmColor(str: string): string;\n}\n\nexport const Color = <IColor>{};\n\nColor.getColor = function (n: number) {\n    var r = n & 255;\n    var g = (n >> 8) & 255;\n    var b = (n >> 16) & 255;\n    var result = `rgba(${r},${g},${b},1)`;\n    return result;\n};\n\nColor.baseColor = Color.getColor(16777215);\n\nColor.getBaseColor = function () {\n    return Color.baseColor;\n};\n\nColor.getUserCustomColor = function (str) {\n    \"use strict\";\n\n    var obj: any[] = RS.MessageSystem.Params.exTextColors;\n    var ret = str;\n\n    if (!(typeof obj[0] === \"object\")) return ret;\n    if (!obj[0].hasOwnProperty(\"Color Name\")) return ret;\n\n    obj.forEach((e: any, i: number, arr: any[]) => {\n        if (e[\"Color Name\"] === str) {\n            var r = parseInt(e[\"Red\"]) || 0;\n            var g = parseInt(e[\"Green\"]) || 0;\n            var b = parseInt(e[\"Blue\"]) || 0;\n            var a = parseFloat(e[\"Alpha\"]) || 1.0;\n\n            ret = `rgba(${r},${g},${b},${a})`;\n        }\n    });\n\n    return ret;\n};\n\nconst KOREAN_COLORS: Record<string, string> = {\n    청록: \"rgba(0,255,255,1)\",\n    청록색: \"rgba(0,255,255,1)\",\n    c_aqua: \"rgba(0,255,255,1)\",\n    검은색: \"rgba(0,0,0,1)\",\n    검정: \"rgba(0,0,0,1)\",\n    c_black: \"rgba(0,0,0,1)\",\n    파란색: \"rgba(0,0,255,1)\",\n    파랑: \"rgba(0,0,255,1)\",\n    c_blue: \"rgba(0,0,255,1)\",\n    짙은회색: \"rgba(64,64,64,1)\",\n    c_dkgray: \"rgba(64,64,64,1)\",\n    자홍색: \"rgba(255,0,255,1)\",\n    자홍: \"rgba(255,0,255,1)\",\n    c_fuchsia: \"rgba(255,0,255,1)\",\n    회색: \"rgba(128,128,128,1)\",\n    c_gray: \"rgba(128,128,128,1)\",\n    녹색: \"rgba(0,128,0,1)\",\n    c_green: \"rgba(0,128,0,1)\",\n    밝은녹색: \"rgba(0,255,0,1)\",\n    라임: \"rgba(0,255,0,1)\",\n    c_lime: \"rgba(0,255,0,1)\",\n    밝은회색: \"rgba(192,192,192,1)\",\n    c_ltgray: \"rgba(192,192,192,1)\",\n    밤색: \"rgba(128,0,0,1)\",\n    마룬: \"rgba(128,0,0,1)\",\n    c_maroon: \"rgba(128,0,0,1)\",\n    감청색: \"rgba(0,0,128,1)\",\n    네이비: \"rgba(0,0,128,1)\",\n    c_navy: \"rgba(0,0,128,1)\",\n    황록색: \"rgba(128,128,0,1)\",\n    올리브: \"rgba(128,128,0,1)\",\n    c_olive: \"rgba(128,128,0,1)\",\n    주황색: \"rgba(255,160,64,1)\",\n    주황: \"rgba(255,160,64,1)\",\n    오렌지: \"rgba(255,160,64,1)\",\n    c_orange: \"rgba(255,160,64,1)\",\n    보라색: \"rgba(128,0,128,1)\",\n    보라: \"rgba(128,0,128,1)\",\n    c_purple: \"rgba(128,0,128,1)\",\n    빨간색: \"rgba(255,0,0,1)\",\n    빨강: \"rgba(255,0,0,1)\",\n    c_red: \"rgba(255,0,0,1)\",\n    은색: \"rgba(192,192,192,1)\",\n    은: \"rgba(192,192,192,1)\",\n    c_silver: \"rgba(192,192,192,1)\",\n    민트색: \"rgba(0,128,128,1)\",\n    c_teal: \"rgba(0,128,128,1)\",\n    흰색: \"rgba(255,255,255,1)\",\n    흰: \"rgba(255,255,255,1)\",\n    c_white: \"rgba(255,255,255,1)\",\n    노란색: \"rgba(255,255,0,1)\",\n    노랑: \"rgba(255,255,0,1)\",\n    c_yellow: \"rgba(255,255,0,1)\",\n};\n\nconst CHINESE_COLOR: Record<string, string> = {\n    水色: \"rgba(0,255,255,1)\",\n    c_aqua: \"rgba(0,255,255,1)\",\n    黑色: \"rgba(0,0,0,1)\",\n    c_black: \"rgba(0,0,0,1)\",\n    蓝色: \"rgba(0,0,255,1)\",\n    c_blue: \"rgba(0,0,255,1)\",\n    深灰色: \"rgba(64,64,64,1)\",\n    c_dkgray: \"rgba(64,64,64,1)\",\n    紫红色: \"rgba(255,0,255,1)\",\n    c_fuchsia: \"rgba(255,0,255,1)\",\n    灰色: \"rgba(128,128,128,1)\",\n    c_gray: \"rgba(128,128,128,1)\",\n    绿色: \"rgba(0,128,0,1)\",\n    c_green: \"rgba(0,128,0,1)\",\n    浅绿色: \"rgba(0,255,0,1)\",\n    c_lime: \"rgba(0,255,0,1)\",\n    浅灰色: \"rgba(192,192,192,1)\",\n    c_ltgray: \"rgba(192,192,192,1)\",\n    栗色: \"rgba(128,0,0,1)\",\n    c_maroon: \"rgba(128,0,0,1)\",\n    绀青色: \"rgba(0,0,128,1)\",\n    c_navy: \"rgba(0,0,128,1)\",\n    黄绿色: \"rgba(128,128,0,1)\",\n    c_olive: \"rgba(128,128,0,1)\",\n    橙黄色: \"rgba(255,160,64,1)\",\n    c_orange: \"rgba(255,160,64,1)\",\n    紫色: \"rgba(128,0,128,1)\",\n    c_purple: \"rgba(128,0,128,1)\",\n    红色: \"rgba(255,0,0,1)\",\n    c_red: \"rgba(255,0,0,1)\",\n    银白色: \"rgba(192,192,192,1)\",\n    c_silver: \"rgba(192,192,192,1)\",\n    水鸭色: \"rgba(0,128,128,1)\",\n    c_teal: \"rgba(0,128,128,1)\",\n    白色: \"rgba(255,255,255,1)\",\n    c_white: \"rgba(255,255,255,1)\",\n    黄色: \"rgba(255,255,0,1)\",\n    c_yellow: \"rgba(255,255,0,1)\",\n};\n\nconst ENGLISH_COLOR: Record<string, string> = {\n    AQUA: \"rgba(0,255,255,1)\",\n    c_aqua: \"rgba(0,255,255,1)\",\n    BLACK: \"rgba(0,0,0,1)\",\n    c_black: \"rgba(0,0,0,1)\",\n    BLUE: \"rgba(0,0,255,1)\",\n    c_blue: \"rgba(0,0,255,1)\",\n    DKGRAY: \"rgba(64,64,64,1)\",\n    c_dkgray: \"rgba(64,64,64,1)\",\n    FUCHSIA: \"rgba(255,0,255,1)\",\n    c_fuchsia: \"rgba(255,0,255,1)\",\n    GRAY: \"rgba(128,128,128,1)\",\n    c_gray: \"rgba(128,128,128,1)\",\n    GREEN: \"rgba(0,128,0,1)\",\n    c_green: \"rgba(0,128,0,1)\",\n    LIME: \"rgba(0,255,0,1)\",\n    c_lime: \"rgba(0,255,0,1)\",\n    LTGRAY: \"rgba(192,192,192,1)\",\n    c_ltgray: \"rgba(192,192,192,1)\",\n    MAROON: \"rgba(128,0,0,1)\",\n    c_maroon: \"rgba(128,0,0,1)\",\n    NAVY: \"rgba(0,0,128,1)\",\n    c_navy: \"rgba(0,0,128,1)\",\n    OLIVE: \"rgba(128,128,0,1)\",\n    c_olive: \"rgba(128,128,0,1)\",\n    ORANGE: \"rgba(255,160,64,1)\",\n    c_orange: \"rgba(255,160,64,1)\",\n    PURPLE: \"rgba(128,0,128,1)\",\n    c_purple: \"rgba(128,0,128,1)\",\n    RED: \"rgba(255,0,0,1)\",\n    c_red: \"rgba(255,0,0,1)\",\n    SILVER: \"rgba(192,192,192,1)\",\n    c_silver: \"rgba(192,192,192,1)\",\n    TEAL: \"rgba(0,128,128,1)\",\n    c_teal: \"rgba(0,128,128,1)\",\n    WHITE: \"rgba(255,255,255,1)\",\n    c_white: \"rgba(255,255,255,1)\",\n    YELLOW: \"rgba(255,255,0,1)\",\n    c_yellow: \"rgba(255,255,0,1)\",\n};\n\nconst JAPANESE_COLOR: Record<string, string> = {\n    水色: \"rgba(0,255,255,1)\",\n    アクア色: \"rgba(0,255,255,1)\",\n    c_aqua: \"rgba(0,255,255,1)\",\n    黑色: \"rgba(0,0,0,1)\",\n    c_black: \"rgba(0,0,0,1)\",\n    靑色: \"rgba(0,0,255,1)\",\n    c_blue: \"rgba(0,0,255,1)\",\n    ふか灰色: \"rgba(64,64,64,1)\",\n    c_dkgray: \"rgba(64,64,64,1)\",\n    紫紅色: \"rgba(255,0,255,1)\",\n    c_fuchsia: \"rgba(255,0,255,1)\",\n    灰色: \"rgba(128,128,128,1)\",\n    c_gray: \"rgba(128,128,128,1)\",\n    綠色: \"rgba(0,128,0,1)\",\n    c_green: \"rgba(0,128,0,1)\",\n    黃綠: \"rgba(0,255,0,1)\",\n    c_lime: \"rgba(0,255,0,1)\",\n    鼠色: \"rgba(192,192,192,1)\",\n    c_ltgray: \"rgba(192,192,192,1)\",\n    \"―色\": \"rgba(128,0,0,1)\",\n    c_maroon: \"rgba(128,0,0,1)\",\n    群青色: \"rgba(0,0,128,1)\",\n    ネイビー: \"rgba(0,0,128,1)\",\n    c_navy: \"rgba(0,0,128,1)\",\n    黃綠色: \"rgba(128,128,0,1)\",\n    オリーブ色: \"rgba(128,128,0,1)\",\n    c_olive: \"rgba(128,128,0,1)\",\n    橙色: \"rgba(255,160,64,1)\",\n    オレンジ色: \"rgba(255,160,64,1)\",\n    c_orange: \"rgba(255,160,64,1)\",\n    紫色: \"rgba(128,0,128,1)\",\n    c_purple: \"rgba(128,0,128,1)\",\n    赤色: \"rgba(255,0,0,1)\",\n    レッド: \"rgba(255,0,0,1)\",\n    c_red: \"rgba(255,0,0,1)\",\n    銀色: \"rgba(192,192,192,1)\",\n    c_silver: \"rgba(192,192,192,1)\",\n    ミント色: \"rgba(0,128,128,1)\",\n    薄荷色: \"rgba(0,128,128,1)\",\n    c_teal: \"rgba(0,128,128,1)\",\n    白色: \"rgba(255,255,255,1)\",\n    c_white: \"rgba(255,255,255,1)\",\n    黃色: \"rgba(255,255,0,1)\",\n    c_yellow: \"rgba(255,255,0,1)\",\n};\n\nRS.MessageSystem.getKoreanColor = function (str: string) {\n    let color = KOREAN_COLORS[str];\n\n    if (color) {\n        return color;\n    }\n\n    if ([\"기본\", \"기본색\", \"c_normal\"].contains(str)) {\n        return Color.getBaseColor();\n    }\n\n    return Color.getUserCustomColor(str);\n};\n\nRS.MessageSystem.getChineseColor = function (str: string) {\n    let color = CHINESE_COLOR[str];\n\n    if (color) {\n        return color;\n    }\n\n    if ([\"通常\", \"c_normal\"].contains(str)) {\n        return Color.getBaseColor();\n    }\n\n    return Color.getUserCustomColor(str);\n};\n\nRS.MessageSystem.getEnglishColor = function (str: string) {\n    let color = ENGLISH_COLOR[str];\n\n    if (color) {\n        return color;\n    }\n\n    if (\"c_normal\" === str) {\n        return Color.getBaseColor();\n    }\n\n    return Color.getUserCustomColor(str);\n};\n\nRS.MessageSystem.getJapaneseColor = function (str: string) {\n    let color = JAPANESE_COLOR[str];\n\n    if (color) {\n        return color;\n    }\n\n    if ([\"基本色\", \"c_normal\"].contains(str)) {\n        return Color.getBaseColor();\n    }\n\n    return Color.getUserCustomColor(str);\n};\n\nRS.MessageSystem.getBrowser = function () {\n    /* Refer to https://stackoverflow.com/a/16938481 */\n    var ua = navigator.userAgent,\n        tem,\n        M =\n            ua.match(\n                /(opera|chrome|edge|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i\n            ) || [];\n\n    if (/trident/i.test(M[1])) {\n        tem = /\\brv[ :]+(\\d+)/g.exec(ua) || [];\n\n        return {\n            name: \"IE\",\n            version: tem[1] || \"\",\n        };\n    }\n\n    if (M[1] === \"Chrome\") {\n        tem = ua.match(/\\bOPR\\/(\\d+)/);\n        if (tem != null) {\n            return {\n                name: \"Opera\",\n                version: tem[1],\n            };\n        }\n\n        tem = ua.match(/\\bEdge\\/(\\d+)/);\n        if (tem != null) {\n            return {\n                name: \"Edge\",\n                version: tem[1],\n            };\n        }\n    }\n\n    M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, \"-?\"];\n\n    if ((tem = ua.match(/version\\/(\\d+)/i)) != null) {\n        M.splice(1, 1, tem[1]);\n    }\n\n    return {\n        name: M[0],\n        version: M[1],\n    };\n};\n\nColor.gmColor = function (str: string) {\n    const type = <string>RS.MessageSystem.Params.langCode;\n    if (type.match(/ko/)) {\n        return RS.MessageSystem.getKoreanColor(str);\n    }\n    if (type.match(/zh/)) {\n        return RS.MessageSystem.getChineseColor(str);\n    }\n    if (type.match(/en/)) {\n        return RS.MessageSystem.getEnglishColor(str);\n    }\n    if (type.match(/ja/)) {\n        return RS.MessageSystem.getJapaneseColor(str);\n    }\n    return RS.MessageSystem.getEnglishColor(str);\n};\n","import { BaseComponent } from \"./BaseComponent\";\n\ntype BaseComponentName =\n    | \"NameWindowPositionComponent\"\n    | \"BalloonWindowTransformComponent\";\n\n/**\n * @static\n * @class DependencyInjector\n * @description\n * 이 클래스는 MZ에서 MV에 의존성을 갖는 메소드를 실행하는데 필요한 컴포넌트를 주입합니다.\n * 또한 해당 컴포넌트를 안전한 샌드박스 환경에서 실행시키기 위해 사용됩니다.\n * 샌드박스 환경이라함은 MZ에서도 오류 없이 안전하게 동작한다는 것을 의미합니다.\n */\nexport class DependencyInjector {\n    public static COMPONENTS: typeof BaseComponent[] = [];\n\n    private static _components: { [key: string]: BaseComponent } = {};\n    private static _isDirty: Boolean = false;\n\n    /**\n     * inject all components inside the sandbox environment.\n     *\n     * @param messageWindow Specify the message window.\n     * @returns void\n     */\n    public static inject(messageWindow: Window_Message): void {\n        if (this._isDirty) {\n            console.log(\"components are already injected\");\n            return;\n        }\n\n        if (DependencyInjector.COMPONENTS) {\n            DependencyInjector.COMPONENTS.forEach((component) => {\n                console.log(component.name);\n                DependencyInjector._components[component.name] = new component({\n                    messageWindow,\n                });\n            });\n        }\n\n        this._isDirty = true;\n    }\n\n    /**\n     * get the component by name.\n     *\n     * @param name Specify the component name\n     * @returns BaseComponent\n     */\n    public static getComponent<T extends BaseComponent>(\n        name: BaseComponentName\n    ): T {\n        return <T>DependencyInjector._components[name];\n    }\n\n    public static ready() {\n        for (let name in this._components) {\n            this._components[name].emit(\"ready\");\n        }\n    }\n}\n","import { BaseComponent } from \"./BaseComponent\";\n\n/**\n * @class BalloonWindowTransformComponent\n * @description\n * 말풍선 윈도우의 위치를 조정하기 위한 컴포넌트입니다.\n */\nexport class BalloonWindowTransformComponent extends BaseComponent {\n    private _bWidth: number = 0;\n    private _bHeight: number = 0;\n    private _isUsedTextWidthEx: boolean = false;\n    public transform!: PIXI.Transform;\n\n    onReady(props: { [key: string]: any }) {\n        super.onReady(props);\n        this._bWidth = 0;\n        this._bHeight = 0;\n        this._isUsedTextWidthEx = false;\n    }\n\n    /**\n     * 샌드박스 환경을 구성합니다.\n     *\n     * @param {String} text\n     * @returns {Number}\n     */\n    calcBalloonRect(text: string) {\n        let temp, baseWidth, tempText, height: number, min, pad, numOfLines;\n\n        // drawTextEx를 사용하기 전에 현재 상태를 저장한다.\n        this.save();\n\n        temp = text;\n\n        // 라인 갯수를 구하기 위해 텍스트를 줄바꿈 문자를 기준으로 나눈다.\n        tempText = text.slice(0);\n        tempText = tempText.split(/[\\r\\n]+/);\n        numOfLines = tempText.length;\n\n        pad = this.standardPadding() * 2;\n\n        // 높이를 구한다.\n        height = 0;\n        tempText.forEach((i) => (height += this.calcBalloonRectHeight(i)));\n\n        if (height <= 0) {\n            // 높이를 구할 수 없었다면,\n            height = this.fittingHeight(numOfLines);\n        } else {\n            // 높이를 구했다면\n            height = height + pad;\n        }\n\n        const textPadding = this.textPadding();\n\n        // 폭을 계산한다.\n        let pw = 0;\n        for (var i = 0; i < numOfLines; i++) {\n            this._isUsedTextWidthEx = true;\n            const x = this.drawTextEx(tempText[i]);\n            this._isUsedTextWidthEx = false;\n            if (x >= pw) {\n                pw = x;\n            }\n        }\n\n        baseWidth = pw;\n        this._bWidth =\n            baseWidth + pad + textPadding || RS.MessageSystem.Params.WIDTH;\n\n        // 얼굴 이미지가 설정되어있다면 ?\n        if ($gameMessage.faceName() !== \"\") {\n            // 최소 높이를 설정한다.\n            min = this.fittingHeight(4);\n            // 기존 폭 값에 얼굴 이미지의 폭을 더한다.\n            this._bWidth += this.newLineX() + pad;\n            if (RS.MessageSystem.Params.faceDirection === 2) {\n                this._bWidth += ImageManager.faceWidth;\n            }\n            // 높이 값이 최소 높이보다 작으면, 최소 높이 값으로 설정한다.\n            if (height < min)\n                height = height.clamp(min, height + (min - height));\n        }\n\n        const type = RS.MessageSystem.Params.choiceWindowStyle;\n\n        // 선택지가 있고, XP 스타일로 설정했을 때\n        if (type === \"RMXP\" && $gameMessage.isChoice()) {\n            const maxLines = tempText.length;\n            const maxChoices = $gameMessage.choices().length;\n            const lineHeight = this.lineHeight();\n            // 선택지 갯수를 확장했을 수도 있지만, 4개로 가정한다.\n            height = height + maxChoices * lineHeight;\n            // 선택지 윈도우의 폭이 말풍선보다 크면 제한을 둔다.\n            if (this._choiceWindow.windowWidth() > this._bWidth) {\n                this._bWidth = this._choiceWindow.windowWidth();\n            }\n        }\n\n        this._bHeight = height;\n\n        // this.drawTextEx() 사용하기 이전 상태로 복구한다.\n        this.restore();\n    }\n\n    isActiveInBalloon() {\n        const isValidBalloon = $gameMessage.getBalloon() === -2;\n        if (isValidBalloon) {\n            this.updatePlacement();\n            return false;\n        }\n        return true;\n    }\n\n    setBalloonRect(data: { [key: string]: any }) {\n        const ox = RS.MessageSystem.Params.windowOffset.x;\n        const oy = RS.MessageSystem.Params.windowOffset.y;\n        this.x = data.dx + ox;\n        this.y = data.dy + oy;\n        this.width = this._bWidth;\n        this.height = this._bHeight;\n\n        if (\n            $gameMessage.faceName() &&\n            RS.MessageSystem.Params.faceDirection === 2\n        ) {\n            this.drawMessageFace();\n        }\n    }\n\n    setBalloonPlacement(data: { [key: string]: any }) {\n        // 화면 좌측\n        if (!data) return;\n        if (data.mx - this._bWidth / 2 < 0) {\n            data.dx = 0;\n            data.tx = this.canvasToLocalX(data.mx);\n        }\n\n        // 화면 우측\n        if (data.mx - this._bWidth / 2 > Graphics.boxWidth - this._bWidth) {\n            data.dx = Graphics.boxWidth - this._bWidth;\n            data.tx = this.canvasToLocalX(data.mx);\n        }\n\n        // 화면 상단\n        if (data.my - this._bHeight - data.tileHeight / 2 < 0) {\n            data.dy = data.my + data.tileHeight / 2;\n            data.scaleY = -1;\n            data.ty = this._height * data.scaleY + this._height;\n            data.ny =\n                this.y + this._bHeight + RS.MessageSystem.Params.nameWindowY;\n        }\n\n        // 화면 하단\n        if (data.my - this._bHeight > Graphics.boxHeight - this._bHeight) {\n            data.dy = Graphics.boxWidth - this._bHeight;\n            data.ty = this._height;\n        }\n\n        return data;\n    }\n\n    updateSubBalloonElements(data: { [key: string]: any }) {\n        // deprecated\n    }\n\n    updateBalloonPosition() {\n        let data: { [key: string]: any } = {};\n\n        if (!this.isActiveInBalloon()) return;\n\n        // 말풍선 소유자의 화면 좌표\n        const owner = $gameMap.getMsgOwner();\n\n        data.mx = (owner as Game_Character).screenX();\n        data.my = (owner as Game_Character).screenY();\n\n        data.tx = this._bWidth / 2;\n        data.ty = this._bHeight;\n        data.scaleY = 1;\n        data.tileHeight = $gameMessage.getBalloonPatternHeight();\n        data.dx = data.mx - this._bWidth / 2;\n        data.dy = data.my - this._bHeight - data.tileHeight;\n        data.ny =\n            this.y -\n            this._nameWindow.height -\n            RS.MessageSystem.Params.nameWindowY;\n\n        data = <{ [key: string]: any }>(\n            this.setBalloonPlacement(Object.create(data))\n        );\n\n        if (\n            data.dx + RS.MessageSystem.Params.windowOffset.x !== this.x ||\n            data.dy + RS.MessageSystem.Params.windowOffset.y !== this.y ||\n            this._bWidth !== this.width ||\n            this._bHeight !== this.height\n        ) {\n            // 말풍선 위치 및 크기 설정\n            this.setBalloonRect(data);\n\n            // 멈춤 표시 스프라이트 위치 조정\n            this.updateSubBalloonElements(data);\n        }\n    }\n\n    updateBalloonPositionInBattle() {\n        if (!$gameParty.inBattle()) {\n            // 전투 씬인지 확인\n            console.warn(\"전투가 아닙니다\");\n            return;\n        }\n        if (!$gameSystem.isSideView()) {\n            // 사이드뷰 전투인지 확인\n            console.warn(\"사이드뷰 전투가 아닙니다.\");\n            return;\n        }\n\n        let data = <{ [key: string]: any }>{};\n\n        // 타겟의 화면 좌표 설정\n        let owner = $gameMap.getMsgOwner();\n        if (!owner) {\n            console.warn(\"owner 변수가 없습니다\");\n            return;\n        }\n        if (!owner.hasOwnProperty(\"type\")) {\n            console.warn(\"type 속성이 없습니다 : \" + owner);\n            return;\n        }\n        if (!owner.hasOwnProperty(\"id\")) {\n            console.warn(\"id 속성이 없습니다 : \" + owner);\n            return;\n        }\n\n        // 현재 씬이 전투 씬이 아닌 경우를 확인한다.\n        let scene = SceneManager._scene;\n        if (!(scene instanceof Scene_Battle)) {\n            console.warn(\"전투 장면이 아닙니다\");\n            return false;\n        }\n\n        let parent;\n\n        // 액터인가?\n        if (owner.type === \"actor\") {\n            parent = scene._spriteset._actorSprites; // 액터 스프라이트 군을 반환\n        } else {\n            parent = scene._spriteset._enemySprites; // 적 스프라이트 군을 반환\n        }\n\n        // 타겟 스프라이트를 id 값으로 찾는다.\n        let tempBattlers = [];\n        tempBattlers = parent;\n        let target = tempBattlers[owner.id];\n        if (!target) {\n            console.warn(\"타겟이 없습니다\");\n            return;\n        }\n\n        // 이미 죽어있다면 메시지를 일반 메시지로 표시한다.\n        if (\n            (owner.type === \"actor\" &&\n                !(<Sprite_Actor>target)._actor.isAlive()) ||\n            (owner.type === \"enemy\" && !(<Sprite_Enemy>target)._enemy.isAlive())\n        ) {\n            return;\n        }\n\n        data.mx = target.x;\n        data.my = target.y;\n\n        data.padY =\n            owner.type === \"actor\"\n                ? (target as Sprite_Actor)._mainSprite.bitmap.height / 6\n                : target.bitmap.height;\n\n        data.tx = this._width / 2;\n        data.ty = this._height;\n\n        data.scaleY = 1;\n        data.tileHeight = $gameMessage.getBalloonPatternHeight();\n\n        data.dx = data.mx - this._bWidth / 2;\n        data.dy = data.my - this._bHeight - data.tileHeight - data.padY;\n\n        data.ny =\n            this.y -\n            this._nameWindow.height -\n            RS.MessageSystem.Params.nameWindowY;\n\n        data = <{ [key: string]: any }>(\n            this.setBalloonPlacement(Object.create(data))\n        );\n\n        // 말풍선 위치 및 크기 설정\n        this.setBalloonRect(data);\n\n        // 멈춤 표시 스프라이트 위치 조정\n        this.updateSubBalloonElements(data);\n\n        if (this.transform) this.updateTransform();\n    }\n\n    updateTransform(): void {\n        this.messageWindow.updateTransform();\n    }\n\n    calcBalloonRectHeight(text: string) {\n        // 상태 저장\n        this.save();\n\n        const messageWindow = this.messageWindow;\n        const tempFontSize = this.contents.fontSize;\n\n        const textState = messageWindow.createTextState(text, 0, 0, 0);\n        textState.text = messageWindow.convertEscapeCharacters(text);\n        textState.height = messageWindow.calcTextHeight(textState, false);\n\n        // 상태 복구\n        this.restore();\n\n        messageWindow.setTextSize(tempFontSize);\n        return textState.height;\n    }\n}\n","import { EventEmitter } from \"./EventEmitter\";\n\n/**\n * @class Component\n * @description\n * 컴포넌트를 구현하기 위한 클래스입니다.\n */\nexport class Component extends EventEmitter {\n  constructor(props: { [key: string]: any }) {\n    super();\n    this.init(props);\n  }\n\n  init(props: { [key: string]: any }) {\n    this.on(\"ready\", () => this.onReady(props));\n    this.on(\"mounted\", () => this.mounted(props));\n    this.on(\"destroy\", () => this.onDestroy());\n  }\n\n  ready() {\n    this.emit(\"ready\");\n  }\n\n  destroy() {\n    this.emit(\"destroy\");\n  }\n\n  execute() {\n    this.emit(\"mounted\");\n  }\n\n  onReady(props: { [key: string]: any }) {}\n  onDestroy() {}\n  mounted(props: { [key: string]: any }) {}\n}\n","/**\n * @class EventEmitter\n * @description\n * 이벤트를 전달하기 위한 클래스입니다.\n */\nexport class EventEmitter {\n  constructor(private _listeners: { [key: string]: Function[] } = {}) {\n    this._listeners = {};\n  }\n\n  on(eventName: string, func: Function) {\n    if (!this._listeners[eventName]) {\n      this._listeners[eventName] = [];\n    }\n\n    if (!func) {\n      return;\n    }\n\n    if (func instanceof Function) {\n      this._listeners[eventName].push(func);\n    }\n  }\n\n  emit(eventName: string, ...args: any[]) {\n    if (!this._listeners[eventName]) {\n      return;\n    }\n\n    this._listeners[eventName].forEach((func) => {\n      if (!(func instanceof Function)) {\n        console.warn(\"호출된 이벤트 리스너가 함수가 아닙니다.\");\n        return;\n      }\n      func(...args);\n    });\n  }\n}\n","import { BaseComponent } from \"./BaseComponent\";\n\n/**\n * @class NamwWindowPositionComponent\n * @description\n * 이름 윈도우의 X좌표를 재설정합니다.\n */\nexport class NameWindowPositionComponent extends BaseComponent {\n    setOpacity(value: number) {\n        let opacity = value;\n        if (typeof opacity !== \"number\") {\n            opacity = Number(opacity);\n        }\n        if (isNaN(opacity)) {\n            opacity = 255;\n        }\n        this._nameWindow.opacity = value;\n    }\n\n    updatePositionX() {\n        // 이름 윈도우가 없다면\n        if (!this._nameWindow) {\n            return;\n        }\n\n        const mx = this.x;\n        const w = this.width;\n        const nw = this._nameWindow.width;\n\n        const position = <NameWindowPositon>(\n            RS.MessageSystem.Params.namePositionTypeAtX\n        );\n\n        const nx = RS.MessageSystem.Params.nameWindowX;\n\n        let newX = mx + nx;\n\n        switch (position) {\n            case \"right\":\n                newX = mx + w - nw - nx;\n                break;\n            case \"center\":\n                newX = mx + w / 2 - nw / 2 - nx;\n                break;\n            case \"left\":\n                newX = mx + nx;\n                break;\n            case \"opacity0\":\n                this.setOpacity(0);\n                break;\n            case \"defaultOpacity\":\n                this.setOpacity(RS.MessageSystem.Params.defaultOpacity);\n                break;\n            case \"auto\":\n                newX = this.x + this.newLineX() + nx;\n                break;\n        }\n\n        this._nameWindow.x = newX;\n    }\n\n    updatePositionY() {\n        const ox = RS.MessageSystem.Params.windowOffset.x;\n        const oy = RS.MessageSystem.Params.windowOffset.y;\n        const positionType = $gameMessage.positionType();\n        const ballonOwnerType = $gameMessage.getBalloon();\n\n        this.updatePositionX();\n\n        // 메시지 윈도우가 상단이고, 말풍선 모드가 아니라면\n        if (positionType === 0 && ballonOwnerType === -2) {\n            // 최상단의 위치\n            const topY = 0;\n\n            this._nameWindow.y = topY + oy;\n\n            // 이름 윈도우가 열렸는 지 여부에 따라 메시지 윈도우의 Y 좌표를 설정합니다.\n            this.y = this._nameWindow.isOpen()\n                ? topY +\n                  this._nameWindow.height +\n                  RS.MessageSystem.Params.nameWindowY +\n                  oy\n                : topY + oy;\n        } else {\n            this._nameWindow.y =\n                this.y -\n                this._nameWindow.height -\n                RS.MessageSystem.Params.nameWindowY;\n        }\n    }\n}\n","interface DataLinkSet {\n    callbackFunction: Function;\n    active: boolean;\n}\n\n/**\n * @class ComponentExecutor\n * @author biud436\n */\nexport class ComponentExecutor {\n    public static INSTANCE: ComponentExecutor = new ComponentExecutor();\n    private _components: Record<string, DataLinkSet> = {};\n\n    public static getInstance(): ComponentExecutor {\n        return ComponentExecutor.INSTANCE;\n    }\n\n    public add(name: string, func: Function): ComponentExecutor {\n        if (name === \"\") {\n            let startChar = 97;\n            let endChar = 122;\n            let len = 7;\n\n            for (let i = 0; i < len; i++) {\n                name += String.fromCharCode(\n                    Math.floor(Math.random() * (endChar - startChar)) +\n                        startChar\n                );\n            }\n        }\n\n        this._components[name] = <DataLinkSet>{\n            callbackFunction: func,\n            active: false,\n        };\n\n        return this;\n    }\n\n    public wrap(name: string, func: Function): ComponentExecutor {\n        return this.add(name, func);\n    }\n\n    public get(name: string): Function {\n        const prop = this._components[name];\n\n        return prop.callbackFunction;\n    }\n\n    public active(name: string): ComponentExecutor {\n        const prop = this._components[name];\n\n        prop.active = true;\n\n        return this;\n    }\n\n    public deactive(name: string): ComponentExecutor {\n        const prop = this._components[name];\n\n        prop.active = false;\n\n        return this;\n    }\n\n    public ready(name: string): ComponentExecutor {\n        return this.active(name);\n    }\n\n    public executeAll() {\n        for (const key in this._components) {\n            const prop = this._components[key];\n\n            if (prop.active) {\n                const currentCallback = this.get(key);\n\n                if (currentCallback instanceof Function) {\n                    currentCallback();\n                }\n            }\n        }\n    }\n}\n"],"sourceRoot":""}