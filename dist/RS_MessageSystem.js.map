{"version":3,"file":"RS_MessageSystem.js","mappings":"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","sources":["webpack://message-system-mz/./src/BalloonWindowTransformComponent.ts","webpack://message-system-mz/./src/BaseComponent.ts","webpack://message-system-mz/./src/BitmapHandler.ts","webpack://message-system-mz/./src/Component.ts","webpack://message-system-mz/./src/ComponentExecutor.ts","webpack://message-system-mz/./src/DependencyInjector.ts","webpack://message-system-mz/./src/EventEmitter.ts","webpack://message-system-mz/./src/MainHandler.ts","webpack://message-system-mz/./src/NameWindowPositionComponent.ts","webpack://message-system-mz/./src/RS.ts","webpack://message-system-mz/./src/index.ts","webpack://message-system-mz/webpack/bootstrap","webpack://message-system-mz/webpack/startup"],"sourcesContent":["import { BaseComponent } from \"./BaseComponent\";\nimport { ComponentProp } from \"./Component\";\n\nexport type BalloonRectData = {\n    /**\n     *\n     */\n    mx: number;\n    /**\n     *\n     */\n    my: number;\n    /**\n     *\n     */\n    tx: number;\n    /**\n     *\n     */\n    ty: number;\n    /**\n     *\n     */\n    tileHeight: number;\n    /**\n     * Sets or gets `dx` that means the destination x coordinate.\n     */\n    dx: number;\n    /**\n     * Sets or gets `dy` that means the destination y coordinate.\n     */\n    dy: number;\n    /**\n     * Gets or sets the value related for the name window.\n     */\n    ny: number;\n    /**\n     *\n     */\n    scaleY: number;\n    /**\n     * Gets or sets the padding value (like value named `padding-bottom`)\n     * `screenX`와 `screenY`는 `right-bottom`에 위치하므로 `height` 만큼 빼야 합니다.\n     */\n    padY: number;\n};\n\n/**\n * @class BalloonWindowTransformComponent\n * @description\n * 말풍선 윈도우의 위치를 조정하기 위한 컴포넌트입니다.\n */\nexport class BalloonWindowTransformComponent extends BaseComponent {\n    private _bWidth: number = 0;\n    private _bHeight: number = 0;\n    public transform!: PIXI.Transform;\n\n    onReady(props: ComponentProp) {\n        super.onReady(props);\n        this._bWidth = this.width;\n        this._bHeight = this.height;\n    }\n\n    /**\n     * 말풍선 영역의 크기를 계산합니다.\n     *\n     * @param {String} text\n     * @returns {Number}\n     */\n    calcBalloonRect(text: string) {\n        // {\n        //     let temp: string,\n        //         baseWidth: number,\n        //         tempText: string[],\n        //         height: number,\n        //         min: number,\n        //         pad: number,\n        //         numOfLines: number;\n        //     // drawTextEx를 사용하기 전에 현재 상태를 저장한다.\n        //     this.save();\n\n        //     temp = text;\n\n        //     // 라인 갯수를 구하기 위해 텍스트를 줄바꿈 문자를 기준으로 나눈다.\n        //     const copyText = text.slice(0);\n        //     tempText = copyText.split(/[\\r\\n]+/);\n        //     numOfLines = tempText.length;\n\n        //     pad = this.standardPadding() * 2;\n\n        //     // 높이를 구한다.\n        //     height = 0;\n        //     tempText.forEach((i) => (height += this.calcBalloonRectHeight(i)));\n\n        //     if (height <= 0) {\n        //         // 높이를 구할 수 없었다면,\n        //         height = this.fittingHeight(numOfLines);\n        //     } else {\n        //         // 높이를 구했다면\n        //         height = height + pad;\n        //     }\n\n        //     const textPadding = this.textPadding();\n\n        //     // 폭을 계산한다.\n        //     let pw = 0;\n        //     for (var i = 0; i < numOfLines; i++) {\n        //         this._isUsedTextWidthEx = true;\n        //         const x = this.drawTextEx(tempText[i]);\n        //         this._isUsedTextWidthEx = false;\n        //         if (x >= pw) {\n        //             pw = x;\n        //         }\n        //     }\n\n        //     baseWidth = pw;\n        //     this._bWidth =\n        //         baseWidth + pad + textPadding || RS.MessageSystem.Params.WIDTH;\n\n        //     // 얼굴 이미지가 설정되어있다면 ?\n        //     if ($gameMessage.faceName() !== \"\") {\n        //         // 최소 높이를 설정한다.\n        //         min = this.fittingHeight(4);\n        //         // 기존 폭 값에 얼굴 이미지의 폭을 더한다.\n        //         this._bWidth += this.newLineX() + pad;\n        //         if (RS.MessageSystem.Params.faceDirection === 2) {\n        //             this._bWidth += ImageManager.faceWidth;\n        //         }\n        //         // 높이 값이 최소 높이보다 작으면, 최소 높이 값으로 설정한다.\n        //         if (height < min)\n        //             height = height.clamp(min, height + (min - height));\n        //     }\n\n        //     const type = RS.MessageSystem.Params.choiceWindowStyle;\n\n        //     // 선택지가 있고, XP 스타일로 설정했을 때\n        //     if (type === \"RMXP\" && $gameMessage.isChoice()) {\n        //         const maxLines = tempText.length;\n        //         const maxChoices = $gameMessage.choices().length;\n        //         const lineHeight = this.lineHeight();\n        //         // 선택지 갯수를 확장했을 수도 있지만, 4개로 가정한다.\n        //         height = height + maxChoices * lineHeight;\n        //         // 선택지 윈도우의 폭이 말풍선보다 크면 제한을 둔다.\n        //         if (this._choiceWindow.windowWidth() > this._bWidth) {\n        //             this._bWidth = this._choiceWindow.windowWidth();\n        //         }\n        //     }\n\n        //     this.restore();\n        // }\n        this.save();\n\n        {\n            // TODO: 얼굴 이미지 설정 체크\n            // TODO: 인라인 선택지 모드인지 체크\n\n            const rect = this.textSizeEx(text);\n            const padding = this.standardPadding();\n            this._bWidth = rect.width + padding * 2;\n            this._bHeight = Math.max(\n                rect.height + padding * 2,\n                this.fittingHeight(1)\n            );\n            // this.drawTextEx() 사용하기 이전 상태로 복구한다.\n        }\n        this.restore();\n    }\n\n    textSizeEx(text: string): TextSizeRect {\n        this.messageWindow._isUsedTextWidthEx = true;\n        const rect = this.messageWindow.textSizeEx(text);\n        this.messageWindow._isUsedTextWidthEx = false;\n\n        return rect;\n    }\n\n    /**\n     * @override\n     */\n    updatePlacement() {\n        this.messageWindow.updatePlacement();\n    }\n\n    isActiveInBalloon() {\n        const isInValidBalloon = $gameMessage.getBalloon() === -2;\n        if (isInValidBalloon) {\n            this.updatePlacement();\n            return false;\n        }\n        return true;\n    }\n\n    setBalloonRect(data: BalloonRectData) {\n        const faceName = $gameMessage.faceName();\n        const faceDirection = RS.MessageSystem.Params.faceDirection;\n\n        const ox = RS.MessageSystem.Params.windowOffset.x;\n        const oy = RS.MessageSystem.Params.windowOffset.y;\n        this.x = data.dx + ox;\n        this.y = data.dy + oy;\n        this.width = this._bWidth;\n        this.height = this._bHeight;\n\n        if (faceName && faceDirection === 2) {\n            this.drawMessageFace();\n        }\n    }\n\n    setBalloonPlacement(data: BalloonRectData): BalloonRectData | void {\n        const gw = Graphics.width;\n        const gh = Graphics.height;\n        const bw = Graphics.boxWidth;\n        const bh = Graphics.boxHeight;\n\n        console.log(\"setBalloonPlacement() + \" + JSON.stringify(data));\n        // 화면 좌측\n        if (!data) return;\n        if (data.mx - this._bWidth / 2 < 0) {\n            data.dx = 0;\n            data.tx = this.canvasToLocalX(data.mx);\n        }\n\n        // 화면 우측\n        if (data.mx - this._bWidth / 2 > bw - this._bWidth) {\n            data.dx = bw - this._bWidth;\n            data.tx = this.canvasToLocalX(data.mx);\n        }\n\n        // 화면 상단\n        if (data.my - this._bHeight - data.tileHeight / 2 < 0) {\n            data.dy = data.my + data.tileHeight / 2;\n            data.scaleY = -1;\n            data.ty = this._height * data.scaleY + this._height;\n            data.ny =\n                this.y + this._bHeight + RS.MessageSystem.Params.nameWindowY;\n        }\n\n        // 화면 하단\n        if (data.my - this._bHeight > bh - this._bHeight) {\n            data.dy = bh - this._bHeight;\n            data.ty = this._height;\n        }\n\n        return data;\n    }\n\n    /**\n     * Updates position of the pause sprite and the name window.\n     *\n     * @param data\n     */\n    updateSubBalloonElements(data: BalloonRectData) {\n        const _pauseSignSprite = this.messageWindow._pauseSignSprite;\n        if (_pauseSignSprite) {\n            _pauseSignSprite.move(data.tx, data.ty);\n            _pauseSignSprite.scale.y = data.scaleY;\n        }\n        this._nameWindow.y = data.ny;\n    }\n\n    getNameWindowY(): number {\n        const ny =\n            this.y -\n            this._nameWindow.height -\n            RS.MessageSystem.Params.nameWindowY;\n\n        return ny ? ny : 0;\n    }\n\n    // canvasToLocalX(x: number) {\n    //     let node: any = this.messageWindow;\n    //     while (node) {\n    //         x -= node.x;\n    //         node = <Sprite>node.parent;\n    //     }\n    //     return x;\n    // }\n\n    // canvasToLocalY(y: number) {\n    //     let node: any = this.messageWindow;\n    //     while (node) {\n    //         y -= node.y;\n    //         node = node.parent;\n    //     }\n    //     return y;\n    // }\n\n    updateBalloonPosition(): never | void {\n        console.log(\n            \"============ DEBUG updateBalloonPosition() ====================\"\n        );\n\n        let data = <BalloonRectData>{};\n\n        if (!this.isActiveInBalloon()) return;\n\n        // 말풍선 소유자의 화면 좌표\n        const owner = <Game_Character>$gameMap.getMsgOwner();\n\n        if (!owner) {\n            console.warn($gameMap.getMsgOwner());\n            throw new Error(\"말풍선 소유자가 없습니다.\");\n        }\n\n        data.mx = owner.screenX();\n        data.my = owner.screenY();\n\n        console.log(\"%d %d\", data.mx, data.my);\n\n        data.tx = this._bWidth / 2;\n        data.ty = this._bHeight;\n        data.scaleY = 1;\n        data.tileHeight = $gameMessage.getBalloonPatternHeight();\n        data.dx = data.mx - this._bWidth / 2;\n        data.dy = data.my - this._bHeight - data.tileHeight;\n        data.ny = this.getNameWindowY();\n\n        console.log(JSON.stringify(data));\n\n        data = <BalloonRectData>this.setBalloonPlacement(data);\n\n        if (\n            data.dx + RS.MessageSystem.Params.windowOffset.x !== this.x ||\n            data.dy + RS.MessageSystem.Params.windowOffset.y !== this.y ||\n            this._bWidth !== this.width ||\n            this._bHeight !== this.height\n        ) {\n            // 말풍선 위치 및 크기 설정\n            this.setBalloonRect(data);\n\n            // 멈춤 표시 스프라이트 위치 조정\n            this.updateSubBalloonElements(data);\n        }\n    }\n\n    updateBalloonPositionInBattle() {\n        if (!$gameParty.inBattle()) {\n            // 전투 씬인지 확인\n            console.warn(\"전투가 아닙니다\");\n            return;\n        }\n        if (!$gameSystem.isSideView()) {\n            // 사이드뷰 전투인지 확인\n            console.warn(\"사이드뷰 전투가 아닙니다.\");\n            return;\n        }\n\n        let data = <BalloonRectData>{};\n\n        // 타겟의 화면 좌표 설정\n        let owner = $gameMap.getMsgOwner();\n        if (!owner) {\n            console.warn(\"owner 변수가 없습니다\");\n            return;\n        }\n        if (!owner.hasOwnProperty(\"type\")) {\n            console.warn(\"type 속성이 없습니다 : \" + owner);\n            return;\n        }\n        if (!owner.hasOwnProperty(\"id\")) {\n            console.warn(\"id 속성이 없습니다 : \" + owner);\n            return;\n        }\n\n        // 현재 씬이 전투 씬이 아닌 경우를 확인한다.\n        let scene = SceneManager._scene;\n        if (!(scene instanceof Scene_Battle)) {\n            console.warn(\"전투 장면이 아닙니다\");\n            return false;\n        }\n\n        let parent;\n\n        // 액터인가?\n        if (owner.type === \"actor\") {\n            parent = scene._spriteset._actorSprites; // 액터 스프라이트 군을 반환\n        } else {\n            parent = scene._spriteset._enemySprites; // 적 스프라이트 군을 반환\n        }\n\n        // 타겟 스프라이트를 id 값으로 찾는다.\n        let tempBattlers = [];\n        tempBattlers = parent;\n        let target = tempBattlers[owner.id];\n        if (!target) {\n            console.warn(\"타겟이 없습니다\");\n            return;\n        }\n\n        // 이미 죽어있다면 메시지를 일반 메시지로 표시한다.\n        if (\n            (owner.type === \"actor\" &&\n                !(<Sprite_Actor>target)._actor.isAlive()) ||\n            (owner.type === \"enemy\" && !(<Sprite_Enemy>target)._enemy.isAlive())\n        ) {\n            return;\n        }\n\n        data.mx = target.x;\n        data.my = target.y;\n\n        data.padY =\n            owner.type === \"actor\"\n                ? (target as Sprite_Actor)._mainSprite.bitmap.height / 6\n                : target.bitmap.height;\n\n        data.tx = this._width / 2;\n        data.ty = this._height;\n\n        data.scaleY = 1;\n        data.tileHeight = $gameMessage.getBalloonPatternHeight();\n\n        data.dx = data.mx - this._bWidth / 2;\n        data.dy = data.my - this._bHeight - data.tileHeight - data.padY;\n\n        data.ny =\n            this.y -\n            this._nameWindow.height -\n            RS.MessageSystem.Params.nameWindowY;\n\n        data = <BalloonRectData>this.setBalloonPlacement(data);\n\n        // 말풍선 위치 및 크기 설정\n        this.setBalloonRect(data);\n\n        // 멈춤 표시 스프라이트 위치 조정\n        this.updateSubBalloonElements(data);\n\n        if (this.transform) this.updateTransform();\n    }\n\n    updateTransform(): void {\n        this.messageWindow.updateTransform();\n    }\n\n    calcBalloonRectHeight(text: string) {\n        // 상태 저장\n        this.save();\n\n        const messageWindow = this.messageWindow;\n        const tempFontSize = this.contents.fontSize;\n\n        const textState = messageWindow.createTextState(text, 0, 0, 0);\n        textState.text = messageWindow.convertEscapeCharacters(text);\n        textState.height = messageWindow.calcTextHeight(textState, false);\n\n        // 상태 복구\n        this.restore();\n\n        messageWindow.setTextSize(tempFontSize);\n        return textState.height;\n    }\n}\n","import { Component, ComponentProp } from \"./Component\";\n\n/**\n * @class BaseComponent\n * @description\n * 샌드박스 환경에서 MV 메소드를 호출하여 이전 버전에 대한 안전성을 제공합니다.\n */\nexport class BaseComponent extends Component {\n    private _messageWindow!: Window_Message;\n\n    constructor(props: ComponentProp) {\n        super(props);\n    }\n\n    onReady(props: ComponentProp) {\n        // if the message window is valid from passed props.\n        if (!(\"messageWindow\" in props)) {\n            console.error(\"messageWindow is not defined\");\n            return;\n        }\n\n        console.log(\"On Ready 이벤트가 실행되었습니다.\");\n\n        /**\n         * @type {Window_Message}\n         */\n        this._messageWindow = props.messageWindow;\n    }\n\n    // Getters\n    get messageWindow() {\n        return this._messageWindow;\n    }\n\n    get contents() {\n        return this._messageWindow.contents;\n    }\n\n    /**\n     * @returns {Window_NameBox}\n     */\n    get _nameWindow(): never | Window_NameBox {\n        const isNameWindowOK = this._messageWindow._nameBoxWindow;\n        if (!isNameWindowOK) {\n            throw new Error(\n                \"이름 윈도우가 아직 정의되지 않았습니다. DI를 제대로된 시점에 하시기 바랍니다.\"\n            );\n        }\n\n        return this._messageWindow._nameBoxWindow;\n    }\n\n    get _choiceWindow() {\n        return this._messageWindow._choiceListWindow\n            ? this._messageWindow._choiceListWindow\n            : {\n                  windowWidth: () => 0,\n                  windowHeight: () => 0,\n              };\n    }\n\n    save(): void {\n        this._messageWindow.save();\n    }\n\n    restore(): void {\n        this._messageWindow.restore();\n    }\n\n    standardPadding() {\n        // 패딩을 업데이트해야 합니다 (MZ에서 달라진 부분입니다)\n        // 꼭 체크할 필요는 없지만...\n        this._messageWindow.updatePadding();\n        const padding = this._messageWindow.padding || 12;\n\n        return padding;\n    }\n\n    textPadding() {\n        // textPadding()의 구현입니다.\n        return this._messageWindow.itemPadding() || 6;\n    }\n\n    newLineX() {\n        return this._messageWindow.newLineX();\n    }\n\n    fittingHeight(numLines: number) {\n        return this._messageWindow.fittingHeight(numLines);\n    }\n\n    drawTextEx(text: string) {\n        const box = this._messageWindow.textSizeEx(text);\n        return box.width;\n    }\n\n    lineHeight() {\n        return this._messageWindow.lineHeight();\n    }\n\n    /**\n     * TODO: 상속 시, 이 메소드를 오버라이드 하세요.\n     */\n    updatePlacement() {}\n\n    drawMessageFace() {\n        this._messageWindow.drawMessageFace();\n    }\n\n    set x(value: number) {\n        this._messageWindow.x = value;\n    }\n\n    set y(value: number) {\n        this._messageWindow.y = value;\n    }\n\n    set width(value: number) {\n        this._messageWindow.width = value;\n    }\n\n    set height(value: number) {\n        this._messageWindow.height = value;\n    }\n\n    get width() {\n        return this._messageWindow.width;\n    }\n\n    get _width() {\n        return this._messageWindow.width;\n    }\n\n    get height() {\n        return this._messageWindow.height;\n    }\n\n    get _height() {\n        return this._messageWindow.height;\n    }\n\n    canvasToLocalX(x: number) {\n        return x;\n    }\n\n    canvasToLocalY(y: number) {\n        return y;\n    }\n}\n","export function processBitmap(): Function {\n    return () => {\n        const alias_Bitmap_initialize = Bitmap.prototype.initialize;\n        Bitmap.prototype.initialize = function (width: number, height: number) {\n            alias_Bitmap_initialize.call(this, width, height);\n            this.fontBold = false;\n            this.fontGradient = false;\n            this.highlightTextColor = null;\n        };\n\n        Bitmap.prototype.setGradient = function (\n            text,\n            color1,\n            color2,\n            color3,\n            tx,\n            ty\n        ) {\n            const context = this._context;\n            const tWidth = this.measureTextWidth(text);\n            context.save();\n            const gradient = context.createLinearGradient(\n                tx,\n                0,\n                tx + tWidth,\n                0\n            );\n            gradient.addColorStop(0, color1);\n            gradient.addColorStop(0.6, color2);\n            gradient.addColorStop(1, color3);\n            context.restore();\n\n            this._baseTexture.update();\n\n            return gradient;\n        };\n\n        Bitmap.prototype.setGradientStyle = function (\n            text,\n            color1,\n            color2,\n            color3,\n            tx,\n            ty\n        ) {\n            const context = this._context;\n            const width = this.measureTextWidth(text);\n            const height = RS.MessageSystem.Params.lineHeight;\n            let grd;\n\n            context.save();\n\n            const style = RS.MessageSystem.Params.gradientStyle;\n\n            if (style !== \"radial\") {\n                if (style.contains(\"horizontal\")) {\n                    grd = context.createLinearGradient(tx, 0, tx + width, 0);\n                } else {\n                    grd = context.createLinearGradient(tx, 0, 0, ty + height);\n                }\n            } else {\n                const ws = width * 0.5;\n                const hs = height * 0.5;\n                grd = context.createRadialGradient(ws, hs, 0.0, ws, hs, ws);\n            }\n\n            if (style === \"radial\") {\n                grd.addColorStop(0.0, color1);\n                grd.addColorStop(1.0, color2);\n            } else if (style.contains(\"axial\")) {\n                grd.addColorStop(0.0, color1);\n                grd.addColorStop(0.5, color2);\n                grd.addColorStop(1.0, color3);\n            } else {\n                grd.addColorStop(0.0, color1);\n                grd.addColorStop(1.0, color2);\n            }\n\n            context.restore();\n\n            this._baseTexture.update();\n\n            return grd;\n        };\n\n        Bitmap.prototype._makeFontNameText = function () {\n            return (\n                (this.fontItalic ? \"Italic \" : \"\") +\n                (this.fontBold ? \"bold \" : \"\") +\n                this.fontSize +\n                \"px \" +\n                this.fontFace\n            );\n        };\n\n        Bitmap.prototype._drawTextBody = function (text, tx, ty, maxWidth) {\n            const context = this._context;\n            context.save(); // 드로잉 상태 저장\n            context.imageSmoothingEnabled =\n                RS.MessageSystem.Params.fontSmoothingEnabled;\n\n            if (this.fontGradient) {\n                var gradient = this.setGradientStyle(\n                    text,\n                    RS.MessageSystem.Params.gradientColor1,\n                    RS.MessageSystem.Params.gradientColor2,\n                    RS.MessageSystem.Params.gradientColor3,\n                    tx,\n                    ty\n                );\n                context.fillStyle = gradient;\n            } else {\n                context.fillStyle = this.textColor;\n            }\n            context.fillText(text, tx, ty, maxWidth);\n            context.fillStyle = this.textColor;\n            context.restore();\n        };\n    };\n}\n","import { EventEmitter } from \"./EventEmitter\";\n\nexport type ComponentProp = {\n  messageWindow: Window_Message;\n  [key: string]: any;\n};\n\n/**\n * @class Component\n * @description\n * 컴포넌트를 구현하기 위한 클래스입니다.\n */\nexport class Component extends EventEmitter {\n  public name?: string;\n  private props?: ComponentProp;\n\n  constructor(props: ComponentProp) {\n    super();\n    this.init(props);\n  }\n\n  init(props: ComponentProp) {\n    this.props = props;\n\n    this.on(\"ready\", (props: ComponentProp) => this.onReady(props));\n    this.on(\"mounted\", (props: ComponentProp) => this.mounted(props));\n    this.on(\"destroy\", (props: ComponentProp) => this.onDestroy());\n  }\n\n  ready() {\n    this.emit(\"ready\", this.props);\n  }\n\n  destroy() {\n    this.emit(\"destroy\", this.props);\n  }\n\n  execute() {\n    this.emit(\"mounted\", this.props);\n  }\n\n  onReady(props: ComponentProp) {}\n  onDestroy() {}\n  mounted(props: ComponentProp) {}\n}\n","interface DataLinkSet {\n    callbackFunction: Function;\n    active: boolean;\n}\n\n/**\n * @class ComponentExecutor\n * @author biud436\n * @description\n * ComponentExecutor는 컴포넌트를 샌드박스 환경에서 안전하게 실행합니다.\n * 샌드박스 환경이라는 것은 주요 메서드가 외부와 차단되어, 예외 처리를 통하여 각종 오류를 캐치할 수 있게 합니다.\n */\nexport default class ComponentExecutor {\n    public static INSTANCE: ComponentExecutor;\n    private _components: Record<string, DataLinkSet> = {};\n\n    public static getInstance(): ComponentExecutor {\n        if (!ComponentExecutor.INSTANCE) {\n            ComponentExecutor.INSTANCE = new ComponentExecutor();\n        }\n        return ComponentExecutor.INSTANCE;\n    }\n\n    public constructor() {}\n\n    public add(name: string, func: Function): ComponentExecutor {\n        if (name === \"\") {\n            let startChar = 97; // a\n            let endChar = 122; // z\n            let len = 7; // length of random string\n\n            for (let i = 0; i < len; i++) {\n                name += String.fromCharCode(\n                    Math.floor(Math.random() * (endChar - startChar)) +\n                        startChar\n                );\n            }\n        }\n\n        this._components[name] = <DataLinkSet>{\n            callbackFunction: func,\n            active: false,\n        };\n\n        return this;\n    }\n\n    public wrap(name: string, func: Function): ComponentExecutor {\n        return this.add(name, func);\n    }\n\n    public get(name: string): Function {\n        const prop = this._components[name];\n\n        return prop.callbackFunction;\n    }\n\n    public active(name: string): ComponentExecutor {\n        const prop = this._components[name];\n\n        prop.active = true;\n\n        return this;\n    }\n\n    public deactive(name: string): ComponentExecutor {\n        const prop = this._components[name];\n\n        prop.active = false;\n\n        return this;\n    }\n\n    public ready(name: string): ComponentExecutor {\n        return this.active(name);\n    }\n\n    public executeAll() {\n        try {\n            for (const key in this._components) {\n                const prop = this._components[key];\n\n                if (prop.active) {\n                    const currentCallback = this.get(key);\n\n                    if (currentCallback instanceof Function) {\n                        currentCallback();\n                    }\n                }\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n}\n","import { Rectangle } from \"pixi.js\";\nimport { BalloonWindowTransformComponent } from \"./BalloonWindowTransformComponent\";\nimport { BaseComponent } from \"./BaseComponent\";\nimport { Component } from \"./Component\";\nimport { NameWindowPositionComponent } from \"./NameWindowPositionComponent\";\n\ntype BaseComponentName =\n  | \"NameWindowPositionComponent\"\n  | \"BalloonWindowTransformComponent\";\n\ninterface Class<T> {\n  new (...args: any[]): T;\n}\n\n/**\n *\n */\n// type InjectFunctionWithInfer = <\n//     R = InstanceType<new (rect: Rectangle) => Window_Message>\n// >(\n//     messageWindow: R\n// ) => InstanceType<new (messageWindow: R) => Component>;\ntype InjectFunctionWithInfer = <\n  R = InstanceType<new (rect: Rectangle) => Window_Message>\n>(\n  messageWindow: R\n) => BaseComponent;\n\n/**\n * @function getComponentValue\n * @param item\n * @param key\n * @returns\n */\nfunction getComponentValue<T, K extends keyof T>(item: T, key: K): T[K] {\n  return item[key];\n}\n\n/**\n * @static\n * @class DependencyInjector\n * @description\n * This class allows you to inject components that needs to execute a method that has a certain dependency in the RPG Maker MZ.\n * 또한 해당 컴포넌트를 안전한 샌드박스 환경에서 실행시키기 위해 사용됩니다.\n * 샌드박스 환경이라함은 MZ에서도 오류 없이 안전하게 동작한다는 것을 의미합니다.\n */\nexport class DependencyInjector {\n  public static COMPONENTS?: [\n    BalloonWindowTransformComponent,\n    NameWindowPositionComponent\n  ];\n\n  public static _components: { [key: string]: Component } = {};\n  private static _isDirty: Boolean = false;\n\n  private static _messageWindow?: Window_Message | undefined;\n\n  public static injectMessageWindow(messageWindow: Window_Message) {\n    // 주입할 메시지 윈도우 클래스의 인스턴스를 가져옵니다.\n    DependencyInjector._messageWindow = messageWindow;\n    DependencyInjector.inject(messageWindow);\n  }\n\n  public static ejectMessageWindow() {\n    if (DependencyInjector._isDirty) {\n      DependencyInjector._messageWindow = undefined;\n      DependencyInjector.COMPONENTS = undefined;\n      DependencyInjector._isDirty = false;\n    }\n  }\n\n  /**\n   * inject all components inside the sandbox environment.\n   *\n   * @param messageWindow Specify the message window.\n   * @returns void\n   */\n  private static inject(messageWindow: Window_Message): void {\n    if (DependencyInjector._isDirty) {\n      console.log(\"components are already injected\");\n      return;\n    }\n\n    // 컴포넌트에 메시지 윈도우를 주입합니다.\n    DependencyInjector.COMPONENTS = [\n      new BalloonWindowTransformComponent({ messageWindow }),\n      new NameWindowPositionComponent({ messageWindow }),\n    ];\n\n    DependencyInjector._isDirty = true;\n  }\n\n  /**\n   * get the component by name.\n   *\n   * @param name Specify the component name\n   * @returns Component\n   */\n  public static getComponent<R extends BaseComponentName>(\n    name: R\n  ): BalloonWindowTransformComponent | NameWindowPositionComponent | undefined {\n    const items = DependencyInjector.COMPONENTS!.filter((e) => {\n      return e instanceof DependencyInjector.getComponentClass(name);\n    });\n\n    return items.pop();\n  }\n\n  static getComponentClass(name: BaseComponentName): typeof BaseComponent {\n    switch (name) {\n      case \"BalloonWindowTransformComponent\":\n        return BalloonWindowTransformComponent;\n      case \"NameWindowPositionComponent\":\n        return NameWindowPositionComponent;\n      default:\n        return BaseComponent;\n    }\n  }\n\n  public static ready() {\n    if (DependencyInjector.COMPONENTS) {\n      DependencyInjector.COMPONENTS.forEach((component) => {\n        component.ready();\n      });\n    }\n  }\n}\n","// 함수 타입\ntype FunctionLike = Function;\n// 이벤트 키 타입\ntype EventKey = string;\n\n/**\n * 이벤트 리스터를 정의합니다.\n */\ntype VMEventListener = { [key: EventKey]: Function[] };\ntype EventNames = \"ready\" | \"mounted\" | \"destroy\";\n\n/**\n * @class EventEmitter\n * @description\n * 이벤트를 전달하기 위한 클래스입니다.\n */\nexport class EventEmitter {\n  constructor(private _listeners: VMEventListener = {}) {\n    this._listeners = {};\n  }\n\n  /**\n   * 호출할 이벤트를 등록합니다.\n   *\n   * @param eventName 호출할 이벤트 명\n   * @param func\n   * @returns\n   */\n  on(eventName: EventNames, func: FunctionLike) {\n    if (!this._listeners[eventName]) {\n      this._listeners[eventName] = [];\n    }\n\n    if (!func) {\n      return;\n    }\n\n    if (func instanceof Function) {\n      this._listeners[eventName].push(func);\n    }\n  }\n\n  /**\n   * 등록된 이벤트를 호출합니다.\n   *\n   * @param eventName 호출할 이벤트 명\n   * @param args\n   * @returns\n   */\n  emit(eventName: EventNames, ...args: any[]) {\n    if (!this._listeners[eventName]) {\n      return;\n    }\n\n    this._listeners[eventName].forEach((func) => {\n      if (!(func instanceof Function)) {\n        console.warn(\"호출된 이벤트 리스너가 함수가 아닙니다.\");\n        return;\n      }\n\n      func(...args);\n    });\n  }\n}\n","import { Color } from \"./RS\";\nimport { DependencyInjector } from \"./DependencyInjector\";\nimport { BalloonWindowTransformComponent } from \"./BalloonWindowTransformComponent\";\n\nexport function processMain(): Function {\n    return () => {\n        //============================================================================\n        // Game_Message\n        //============================================================================\n        const alias_Game_Message_clear = Game_Message.prototype.clear;\n        Game_Message.prototype.clear = function () {\n            alias_Game_Message_clear.call(this);\n            this._waitTime = 0;\n            this._gradientText = \"\";\n            this._balloon = -2;\n            this._align = [];\n            this._balloonPatternHeight = 0;\n            this._lastAlign = -1;\n        };\n\n        Game_Message.prototype.setWaitTime = function (time) {\n            this._waitTime = time;\n        };\n\n        Game_Message.prototype.setGradientText = function (text) {\n            this._gradientText = text;\n        };\n\n        Game_Message.prototype.getWaitTime = function () {\n            return this._waitTime || 0;\n        };\n\n        Game_Message.prototype.getGradientText = function () {\n            return this._gradientText;\n        };\n\n        Game_Message.prototype.getMaxLine = function () {\n            return this._maxLine;\n        };\n\n        Game_Message.prototype.setMaxLine = function (maxLine) {\n            this._maxLine = maxLine;\n            RS.MessageSystem.Params.numVisibleRows = maxLine;\n        };\n\n        Game_Message.prototype.setBalloon = function (n) {\n            this._balloon = n;\n        };\n\n        Game_Message.prototype.getBalloon = function (n) {\n            return this._balloon;\n        };\n\n        Game_Message.prototype.setAlign = function (n) {\n            this._align = this._align || [];\n            this._lastAlign = n; // 마지막 정렬 위치 기억\n            this._align.push(n);\n        };\n\n        Game_Message.prototype.getAlign = function (n) {\n            const last = this._align.shift();\n            if (last === undefined) {\n                return this._lastAlign;\n            }\n            return last;\n        };\n\n        Game_Message.prototype.clearAlignLast = function (n) {\n            this._lastAlign = -1;\n        };\n\n        Game_Message.prototype.setBalloonPatternHeight = function (\n            value: number\n        ) {\n            this._balloonPatternHeight = value;\n        };\n\n        Game_Message.prototype.getBalloonPatternHeight = function () {\n            return this._balloonPatternHeight;\n        };\n\n        //============================================================================\n        // Sprite_Battler\n        //============================================================================\n        Sprite_Battler.prototype.screenX = function () {\n            return this.x || 0;\n        };\n\n        Sprite_Battler.prototype.screenY = function () {\n            return this.y || 0;\n        };\n\n        //============================================================================\n        // MessageDesc\n        //============================================================================\n        class MessageDesc {\n            public fontFace: string;\n            public fontSize: number;\n            public fontBold: boolean;\n            public fontItalic: boolean;\n            public textColor: string;\n            public outlineColor: string;\n            public outlineWidth: number;\n            public fontGradient: boolean;\n            public highlightTextColor: string | null;\n            public textSpeed: number;\n\n            private _isSaved: boolean;\n\n            constructor() {\n                this.fontFace = \"Nanum Gothic\";\n                this.fontSize = 12;\n                this.fontBold = false;\n                this.fontItalic = false;\n                this.textColor = \"#000\";\n                this.outlineColor = \"#fff\";\n                this.outlineWidth = 1;\n                this.fontGradient = false;\n                this.highlightTextColor = null;\n                this.textSpeed = 1;\n\n                this._isSaved = false;\n            }\n\n            save<T extends Window_Base>(messageWindow: T) {\n                this.fontFace = messageWindow.contents.fontFace;\n                this.fontSize = +messageWindow.contents.fontSize;\n                this.fontBold = messageWindow.contents.fontBold;\n                this.fontItalic = messageWindow.contents.fontItalic;\n                this.textColor = messageWindow.contents.textColor;\n                this.outlineColor = messageWindow.contents.outlineColor;\n                this.outlineWidth = messageWindow.contents.outlineWidth;\n                this.fontGradient = messageWindow.contents.fontGradient;\n                this.highlightTextColor =\n                    messageWindow.contents.highlightTextColor;\n\n                if ($gameMessage) {\n                    this.textSpeed = $gameMessage.getWaitTime();\n                }\n\n                this._isSaved = true;\n            }\n\n            restore<T extends Window_Base>(messageWindow: T) {\n                if (!this._isSaved) return;\n                if (!(messageWindow.contents instanceof Bitmap)) return;\n                messageWindow.contents.fontFace = this.fontFace;\n                messageWindow.contents.fontSize = this.fontSize;\n                messageWindow.contents.fontBold = this.fontBold;\n                messageWindow.contents.fontItalic = this.fontItalic;\n                messageWindow.contents.textColor = this.textColor;\n                messageWindow.contents.outlineColor = this.outlineColor;\n                messageWindow.contents.outlineWidth = this.outlineWidth;\n                messageWindow.contents.fontGradient = this.fontGradient;\n                messageWindow.contents.highlightTextColor =\n                    this.highlightTextColor;\n                if ($gameMessage) {\n                    $gameMessage.setWaitTime(this.textSpeed);\n                }\n                this._isSaved = false;\n            }\n        }\n\n        //============================================================================\n        // Window_Base\n        //============================================================================\n        Window_Base.prototype.obtainEscapeCode = function (textState) {\n            const regExp = RS.MessageSystem.Reg.defaultEscapeCode;\n            const arr = regExp.exec(textState.text.slice(textState.index));\n            if (arr) {\n                textState.index += arr[0].length;\n                return arr[0].toUpperCase();\n            } else {\n                return \"\";\n            }\n        };\n\n        /**\n         * 확장된 색상 변경 텍스트 코드 처리\n         * \\색[빨강]과 웹색상 처리를 위한 정규 표현식 처리\n         * @param {}} textState\n         */\n        Window_Base.prototype.obtainNameColor = function (textState) {\n            const arr = /\\[(.+?)\\]/gi.exec(\n                textState.text.slice(textState.index)\n            );\n            if (arr) {\n                textState.index += arr[0].length;\n                return Color.gmColor(arr[1]);\n            } else {\n                return ColorManager.textColor(0);\n            }\n        };\n\n        Window_Base.prototype.changeTextColor = function (color) {\n            const c = parseInt(color);\n            // 색상 코드가 숫자인 경우\n            if (c > 0 && c < 32) {\n                color = ColorManager.textColor(color);\n            }\n            // if (!this._isUsedTextWidthEx) {\n            this.contents.textColor = color;\n            // }\n        };\n\n        const alias_Window_Base_processEscapeCharacter =\n            Window_Base.prototype.processEscapeCharacter;\n        Window_Base.prototype.processEscapeCharacter = function (\n            code,\n            textState\n        ) {\n            const tcGroup = RS.MessageSystem.TextCodes.ENUM;\n            const textCode = RS.MessageSystem.TextCodes.Main;\n            switch (code) {\n                case \"C\":\n                    this.changeTextColor(\n                        this.textColor(\n                            <number>this.obtainEscapeParam(textState)\n                        )\n                    );\n                    break;\n                case textCode[tcGroup.COLOR]:\n                    this.changeTextColor(\n                        this.obtainNameColor(<TextState>textState)\n                    );\n                    break;\n                case \"I\":\n                case textCode[tcGroup.ICON]:\n                    this.processDrawIcon(\n                        <number>this.obtainEscapeParam(textState),\n                        textState\n                    );\n                    break;\n                case \"{\":\n                case textCode[tcGroup.INCREASE]:\n                    this.makeFontBigger();\n                    break;\n                case \"}\":\n                case textCode[tcGroup.DECREASE]:\n                    this.makeFontSmaller();\n                    break;\n                case \"AEND\":\n                    $gameMessage.clearAlignLast();\n                    break;\n                default:\n                    alias_Window_Base_processEscapeCharacter.call(\n                        this,\n                        code,\n                        textState\n                    );\n                    break;\n            }\n        };\n\n        const alias_loadWindowskin = Window_Base.prototype.loadWindowskin;\n        Window_Base.prototype.loadWindowskin = function () {\n            alias_loadWindowskin.call(this);\n            this.windowskin.addLoadListener(() => {\n                Color.baseColor = ColorManager.textColor(0);\n            });\n        };\n\n        Window_Base.prototype.getFontFace = function () {\n            const langCode =\n                RS.MessageSystem.Params.langCode ||\n                navigator.language.slice(0, 2);\n            const fonts = RS.MessageSystem.Params.fonts[langCode];\n            if (fonts) {\n                return fonts;\n            } else {\n                return RS.MessageSystem.Params.fonts.default;\n            }\n        };\n\n        Window_Base.prototype.drawTextEx = function (text, x, y, width) {\n            this.save();\n            this.resetFontSettings();\n            const textState = this.createTextState(text, x, y, width);\n            this.processAllText(textState);\n            this.restore();\n            return textState.outputWidth;\n        };\n\n        // Window_Base.prototype.processAllText = function (textState) {\n        //     this._isUsedTextWidthEx = !textState.drawing;\n        //     while (textState.index < textState.text.length) {\n        //         this.processCharacter(textState);\n        //     }\n        //     this.flushTextState(textState);\n        // };\n        Window_Base.prototype.makeFontSmaller = function () {\n            if (this.contents.fontSize >= RS.MessageSystem.Params.minFontSize) {\n                this.contents.fontSize -= 12;\n            }\n        };\n\n        Window_Base.prototype.resetFontSettings = function () {\n            this.contents.fontFace = this.getFontFace();\n            this.contents.fontSize = RS.MessageSystem.Params.fontSize;\n            this.contents.fontBold = false;\n            this.contents.fontItalic = false;\n            this.contents.outlineWidth =\n                RS.MessageSystem.Params.defaultOutlineWidth;\n            this.contents.outlineColor =\n                RS.MessageSystem.Params.defaultOutlineColor;\n\n            this.contents.fontGradient = false;\n            this.contents.highlightTextColor = null;\n            this.resetTextColor();\n        };\n\n        Window_Base.prototype.makeFontBigger = function () {\n            if (this.contents.fontSize <= RS.MessageSystem.Params.maxFontSize) {\n                this.contents.fontSize += 12;\n            }\n        };\n\n        Window_Base.prototype.save = function () {\n            this._messageDesc = new MessageDesc();\n            this._messageDesc.save(this);\n            console.log(this._messageDesc);\n        };\n\n        Window_Base.prototype.restore = function () {\n            if (!this._messageDesc) return;\n            this._messageDesc.restore(this);\n            this._messageDesc = undefined;\n        };\n\n        const alias_Window_Base_convertEscapeCharacters =\n            Window_Base.prototype.convertEscapeCharacters;\n        Window_Base.prototype.convertEscapeCharacters = function (text) {\n            const regGroup = RS.MessageSystem.Reg.Group;\n            const tcGroup = RS.MessageSystem.TextCodes.ENUM;\n            const textCode = RS.MessageSystem.TextCodes.Main;\n\n            text = alias_Window_Base_convertEscapeCharacters.call(this, text);\n            text = text.replace(\n                regGroup[tcGroup.VAR],\n                function (...args: any[]): string {\n                    return $gameVariables\n                        .value(parseInt(<string>args[1]))\n                        .toString();\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.VAR],\n                function (...args: any[]) {\n                    return $gameVariables.value(parseInt(args[1])).toString();\n                }.bind(this)\n            );\n            text = text.replace(regGroup[tcGroup.PLAYER], (...args: any[]) => {\n                return this.actorName(parseInt(args[1]));\n            });\n            text = text.replace(\n                regGroup[tcGroup.PARTY_MEMBER],\n                (...args: any[]) => {\n                    return this.partyMemberName(parseInt(args[1]));\n                }\n            );\n            text = text.replace(\n                regGroup[tcGroup.NUM],\n                function (...args: any[]) {\n                    return args[1].toComma();\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.GOLD],\n                TextManager.currencyUnit\n            );\n            text = text.replace(\n                regGroup[tcGroup.CLASSES],\n                function (...args: any[]) {\n                    return $dataClasses[parseInt(args[1])].name || \"\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.ITEM],\n                function (...args: any[]) {\n                    return $dataItems[parseInt(args[1])].name || \"\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.WEAPON],\n                function (...args: any[]) {\n                    return $dataWeapons[parseInt(args[1])].name || \"\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.ARMOR],\n                function (...args: any[]) {\n                    return $dataArmors[parseInt(args[1])].name || \"\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.ENEMY],\n                function (...args: any[]) {\n                    return $dataEnemies[parseInt(args[1])].name || \"\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.STATE],\n                function (...args: any[]) {\n                    return $dataStates[parseInt(args[1])].name || \"\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.SKILL],\n                function (...args: any[]) {\n                    return $dataSkills[parseInt(args[1])].name || \"\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.ALIGN_LEFT],\n                function () {\n                    return \"\\x1b\" + textCode[tcGroup.ALIGN] + \"[0]\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.ALIGN_CENTER],\n                function () {\n                    return \"\\x1b\" + textCode[tcGroup.ALIGN] + \"[1]\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.ALIGN_RIGHT],\n                function () {\n                    return \"\\x1b\" + textCode[tcGroup.ALIGN] + \"[2]\";\n                }.bind(this)\n            );\n            text = text.replace(regGroup[tcGroup.ALIGN], (...args: any[]) => {\n                if (!this._isUsedTextWidthEx) {\n                    $gameMessage.setAlign(Number(args[1] || 0));\n                }\n                return \"\";\n            });\n            text = text.replace(\n                /<\\/LEFT>|<\\/CENTER>|<\\/RIGHT>/gi,\n                function () {\n                    return regGroup[tcGroup.ALIGN_CLEAR].source;\n                }.bind(this)\n            );\n            return text;\n        };\n\n        /**\n         * @deprecated\n         */\n        Window_Base.prototype.textPadding = function () {\n            return this.itemPadding();\n        };\n\n        Window_Base.prototype.newLineX = function (textState) {\n            return this.textPadding();\n        };\n\n        Window_Base.prototype.processAlign = function (textState) {\n            textState = textState || this._textState;\n\n            const isArabic = textState.rtl;\n\n            if (isArabic) {\n                return;\n            }\n\n            switch ($gameMessage.getAlign()) {\n                case 0:\n                    this.setAlignLeft(textState);\n                    break;\n                case 1:\n                    this.setAlignCenter(textState);\n                    break;\n                case 2:\n                    this.setAlignRight(textState);\n                    break;\n            }\n        };\n\n        const alias_Window_Base_processNewLine_align =\n            Window_Base.prototype.processNewLine;\n        Window_Base.prototype.processNewLine = function (textState) {\n            alias_Window_Base_processNewLine_align.call(this, textState);\n            this.processAlign(<TextState>textState);\n        };\n\n        Window_Base.prototype.setAlignLeft = function (textState) {\n            textState.x = this.newLineX(textState);\n            textState.startX = textState.x;\n        };\n\n        Window_Base.prototype.setAlignCenter = function (textState) {\n            const padding = this.textPadding();\n            textState.x =\n                (this.newLineX(textState) + this.contentsWidth() + padding) /\n                    2 -\n                textState.outputWidth / 2;\n            textState.startX = textState.x;\n        };\n\n        Window_Base.prototype.setAlignRight = function (textState) {\n            const padding = this.textPadding();\n            textState.x =\n                this.contentsWidth() - padding - textState.outputWidth;\n            textState.startX = textState.x;\n        };\n\n        //============================================================================\n        // Window_Message\n        //============================================================================\n        Window_Message.prototype.obtainTextSpeed = function (textState) {\n            const arr = /\\[(\\d+)\\]/.exec(textState.text.slice(textState.index));\n            if (arr) {\n                textState.index += arr[0].length;\n                return parseInt(arr[1]);\n            } else {\n                return 0;\n            }\n        };\n\n        Window_Message.prototype.obtainGradientText = function (textState) {\n            const arr = /^<(.+?)>/.exec(textState.text.slice(textState.index));\n            if (arr) {\n                textState.index += arr[0].length;\n                return String(arr[1]);\n            } else {\n                return \"Empty Text\";\n            }\n        };\n\n        Window_Message.prototype.obtainSoundName = function (textState) {\n            const arr = /\\<(.+?)\\>/.exec(textState.text.slice(textState.index));\n            if (arr) {\n                textState.index += arr[0].length;\n                return String(arr[1]);\n            } else {\n                return \"\";\n            }\n        };\n\n        const alias_Window_Message_processEscapeCharacter =\n            Window_Message.prototype.processEscapeCharacter;\n        Window_Message.prototype.processEscapeCharacter = function (\n            code,\n            textState: TextState | string\n        ) {\n            const tcGroup = RS.MessageSystem.TextCodes.ENUM;\n            const textCode = RS.MessageSystem.TextCodes.Main;\n            switch (code) {\n                case textCode[tcGroup.TEXT_SPEED]:\n                    $gameMessage.setWaitTime(\n                        <number>this.obtainEscapeParam(textState)\n                    );\n                    break;\n                case textCode[tcGroup.TEXT_SIZE]:\n                    this.setTextSize(<number>this.obtainEscapeParam(textState));\n                    break;\n                case textCode[tcGroup.OUTLINE_COLOR]:\n                    this.setStrokeColor(\n                        this.obtainNameColor(<TextState>textState)\n                    );\n                    break;\n                case textCode[tcGroup.INDENT]:\n                    this.setTextIndent(<TextState>textState);\n                    break;\n                case textCode[tcGroup.OUTLINE_WIDTH]:\n                    this.setStrokeWidth(\n                        <number>this.obtainEscapeParam(<TextState>textState)\n                    );\n                    break;\n                case textCode[tcGroup.BOLD]:\n                    this.setTextBold(!this.contents.fontBold);\n                    break;\n                case textCode[tcGroup.BOLD_START]:\n                    this.setTextBold(true);\n                    break;\n                case textCode[tcGroup.BOLD_END]:\n                    this.setTextBold(false);\n                    break;\n                case textCode[tcGroup.ITALIC]:\n                    this.setTextItalic(!this.contents.fontItalic);\n                    break;\n                case textCode[tcGroup.ITALIC_START]:\n                    this.setTextItalic(true);\n                    break;\n                case textCode[tcGroup.ITALIC_END]:\n                    this.setTextItalic(false);\n                    break;\n                case textCode[tcGroup.GRADIENT]:\n                    this.setTextGradient(<TextState>textState);\n                    break;\n                case textCode[tcGroup.HIGHLIGHT_TEXT_COLOR]:\n                    this.setHighlightTextColor(\n                        this.obtainNameColor(<TextState>textState)\n                    );\n                    break;\n                case textCode[tcGroup.TAB]:\n                    (<TextState>textState).x += Number(\n                        this.textWidth(\"A\") * RS.MessageSystem.Params.TabSize\n                    );\n                    break;\n                case textCode[tcGroup.CARRIAGE_RETURN]:\n                    (<TextState>textState).x = Number(\n                        (textState as TextState).startX || 0\n                    );\n                    if (!this._isUsedTextWidthEx) this.startWait(1);\n                    break;\n                case textCode[tcGroup.PLAY_SE]:\n                    if (!this._isUsedTextWidthEx)\n                        this.playSe(this.obtainSoundName(<TextState>textState));\n                    break;\n                case textCode[tcGroup.SHOW_PICTURE]:\n                    if (this._isUsedTextWidthEx) break;\n                    this.showPicture(\n                        this.obtainSoundName(<TextState>textState)\n                    );\n                    this.startWait(15);\n                case textCode[tcGroup.HIDE_PICTURE]:\n                    if (this._isUsedTextWidthEx) break;\n                    this.erasePicture(\n                        <number>this.obtainEscapeParam(textState)\n                    );\n                    this.startWait(15);\n                case textCode[tcGroup.FACE]:\n                    if (this._isUsedTextWidthEx) break;\n                    var params = this.obtainSoundName(\n                        <TextState>textState\n                    ).split(\",\");\n                    // this.redrawFaceImage(textState, params[0], params[1], 0, 0);\n                    this.startWait(1);\n                    break;\n                default:\n                    alias_Window_Message_processEscapeCharacter.call(\n                        this,\n                        code,\n                        textState\n                    );\n                    break;\n            }\n        };\n\n        Window_Message.prototype.setTextItalic = function (...args) {\n            this.contents.fontItalic = args[0];\n        };\n\n        Window_Message.prototype.setTextBold = function (...args) {\n            this.contents.fontBold = args[0];\n        };\n\n        Window_Message.prototype.setTextSize = function (...args) {\n            this.contents.fontSize = args[0].clamp(\n                RS.MessageSystem.Params.minFontSize,\n                RS.MessageSystem.Params.maxFontSize\n            );\n        };\n\n        Window_Message.prototype.setStrokeWidth = function (...args) {\n            this.contents.outlineWidth = args[0];\n        };\n\n        Window_Message.prototype.setStrokeColor = function (...args) {\n            this.contents.outlineColor = args[0];\n        };\n\n        Window_Message.prototype.setTextIndent = function (textState) {\n            const value = parseInt(<string>this.obtainEscapeParam(textState));\n            textState.x += value;\n        };\n\n        Window_Message.prototype.setHighlightTextColor = function (\n            ...args: any[]\n        ) {\n            let color: any = args[0];\n            if (color === \"null\" || color === \"없음\") {\n                color = null;\n            }\n            this.contents.highlightTextColor = color;\n        };\n\n        Window_Message.prototype.setTextGradient = function (textState) {\n            // TODO: 여기에서는 텍스트를 그리지 않는다.\n            // TODO: 그레디언트 모드임을 명시하고 flush 단계에서 한 번에 그려야 한다 (배경색도 마찬가지이다)\n            this.contents.fontGradient = true;\n        };\n\n        Window_Message.prototype.playSe = function (seName) {\n            const realName = seName.trim();\n            const data = <rm.types.AudioParameters>{\n                name: realName,\n                pan: 0,\n                pitch: 100,\n                volume: (<any>ConfigManager).seVolume,\n            };\n            AudioManager.playSe(data);\n        };\n\n        Window_Message.prototype.showPicture = function (param: string) {\n            const raw = param.split(\",\").map((e) => {\n                return e.trim();\n            });\n\n            let params = [\n                Number(raw[0]),\n                raw[1],\n                Number(raw[2]),\n                Number(raw[3]),\n                Number(raw[4]),\n                100,\n                100,\n                255,\n                0,\n            ];\n            let ret = true;\n\n            // 모든 요소 검증\n            if (params) {\n                params.forEach((e, i, a) => {\n                    if (e === undefined || e === null) {\n                        ret = false;\n                    }\n                });\n            }\n            // 검증 결과가 참이라면 그림 표시\n            if (ret) {\n                $gameScreen.showPicture.apply($gameScreen, <any>params);\n                return true;\n            }\n            return false;\n        };\n\n        Window_Message.prototype.erasePicture = function (picId) {\n            if (typeof picId !== \"number\") return;\n            $gameScreen.erasePicture(picId);\n        };\n\n        // 구조가 변경된 메서드\n        Window_Message.prototype.resetFontSettings = function () {\n            Window_Base.prototype.resetFontSettings.call(this);\n\n            // pause 아이콘 표시 위치 초기화\n            if (this._pauseSignSprite) {\n                this._pauseSignSprite.move(this._width / 2, this._height);\n                this._pauseSignSprite.scale.y = 1;\n            }\n\n            $gameMessage.setWaitTime(RS.MessageSystem.Params.textSpeed);\n        };\n\n        // 새로 추가된 메서드\n        Window_Message.prototype.resetGradient = function (textState) {\n            this.contents.fontGradient = false;\n        };\n\n        // 폰트 사이즈 설정 메서드는 MZ에서 없다\n        Window_Message.prototype.numVisibleRows = function () {\n            return RS.MessageSystem.Params.numVisibleRows;\n        };\n\n        /**\n         * Create text state included px and py values for text word wrapping.\n         */\n        const alias_Window_Message_createTextState =\n            Window_Message.prototype.createTextState;\n        Window_Message.prototype.createTextState = function (\n            text,\n            x,\n            y,\n            width\n        ) {\n            let textState = alias_Window_Message_createTextState.call(\n                this,\n                text,\n                x,\n                y,\n                width\n            );\n\n            const px = textState.x;\n            const py = textState.y;\n\n            // mixin\n            Object.assign(textState, {\n                px,\n                py,\n            });\n\n            return textState;\n        };\n\n        Window_Message.prototype.processWordWrap = function (\n            textState,\n            w,\n            width,\n            isValid\n        ) {\n            const px = <Required<number>>textState.px;\n\n            if (Math.floor(px + w * 2) > width) {\n                if (isValid) {\n                    this.processNewLine(textState);\n                    if (this.needsNewPage(textState)) {\n                        this.startPause();\n                    }\n                }\n            }\n        };\n\n        const alias_Window_Message_processNewLinePW =\n            Window_Message.prototype.processNewLine;\n        Window_Message.prototype.processNewLine = function (textState) {\n            alias_Window_Message_processNewLinePW.call(this, textState);\n            // 내부 버퍼의 위치를 시작 지점으로 초기화한다.\n            (<TextState>textState).px =\n                textState.startX || (<TextState>textState).x;\n\n            // background buffer 초기화\n            if (this._backBuffer && this._backBuffer.isDirty) {\n                const backTextState = this._backBuffer.textState;\n            }\n        };\n\n        /**\n         * ! Override\n         * @param {Object} textState\n         */\n        Window_Message.prototype.processCharacter = function (textState) {\n            const c = textState.text[textState.index++];\n            if (c.charCodeAt(0) < 0x20) {\n                this.flushTextState(textState);\n                this.processControlCharacter(textState, c);\n            } else {\n                textState.buffer += c;\n\n                // 내부 버퍼의 위치를 누적 계산한다.\n                textState.px += this.textWidth(c);\n            }\n        };\n\n        const alias_Window_Message_processCharacter =\n            Window_Message.prototype.processCharacter;\n        Window_Message.prototype.processCharacter = function (textState) {\n            // 이전 텍스트의 길이를 계산한다.\n            let isDirty = false;\n            const preBuffer = textState.buffer || \"\";\n            let preLen = preBuffer.length;\n\n            alias_Window_Message_processCharacter.call(this, textState);\n\n            // 새로운 텍스트가 이후에 있는가?\n            // 그게 문자인지 제어 문자인지는 이 로직에선 알 수 없다.\n            const postBuffer = textState.buffer || \"\";\n            const postLen = postBuffer.length;\n            if (preLen !== postLen) {\n                isDirty = true;\n            }\n\n            if (isDirty) {\n                // 끝에 있는 글자를 가지고 온다.\n                // 하지만 제어 문자인지는 확인하지 않는다.\n                // 제어 문자 여부는 메인 로직에서 판단하게 둔다.\n                const c = textState.buffer.substr(\n                    textState.buffer.length - 1,\n                    1\n                );\n                this.processNormalCharacterProxy(textState, c);\n            }\n        };\n\n        /**\n         * MZ에서는 processNormalCharacter의 구현이 없다.\n         * 하지만, 자동 개행이나 사운드 재생 그리고 배경색 묘화를 위해 위치 계산이 필요하다.\n         * 이 때문에 추가한 메서드이며, 텍스트의 묘화를 하진 않는다.\n         * @param {*} textState\n         * @param {*} c\n         */\n        Window_Message.prototype.processNormalCharacterProxy = function (\n            textState,\n            c\n        ) {\n            // MZ에서는 텍스트 상태(textState)가 다음 제어 문자가 등장해야 flush 처리된다.\n            // 따라서 이곳에서는 텍스트가 그려질 수 없다.\n            const w = this.textWidth(c);\n            let width = this.contentsWidth();\n\n            // 일반 메시지 모드에서만 동작 한다.\n            const isNormalMessageWindow = $gameMessage.getBalloon() === -2;\n            const isRealDrawingMode = textState.drawing;\n            let isValid =\n                isNormalMessageWindow &&\n                isRealDrawingMode &&\n                RS.MessageSystem.Params.isParagraphMinifier;\n\n            // 소수점 자리를 버려야 정확히 계산된다.\n            this.processWordWrap(textState, w, width, isValid);\n\n            const contents = this.contents;\n            const faceName = $gameMessage.faceName();\n\n            // if the faceName is not empty and the face direction is to right?\n            if (faceName !== \"\") {\n                width = contents.width - ImageManager.faceWidth;\n                isValid = RS.MessageSystem.Params.faceDirection === 2;\n                this.processWordWrap(textState, w, width, isValid);\n            }\n\n            // 배경색의 위치를 계산하고 비트맵 인스턴스를 생성한다.\n            const isValidTextBackground = contents.highlightTextColor !== null;\n            if (isValidTextBackground) {\n                const contentW = Math.floor(w * 2) + 1.0;\n                const contentH = this.lineHeight();\n\n                // 내부 버퍼의 텍스트 위치를 받아옵니다 (글자 하나의 버퍼 위치)\n                const { px, py } = <TextState>textState;\n\n                // 배경 버퍼의 생성\n                this._backBuffer = {\n                    buffer: new Bitmap(contentW, contentH),\n                    textState: textState,\n                    isDirty: false,\n                    x: px,\n                    y: py,\n                };\n\n                // 배경 버퍼는 내부 버퍼의 초기 위치로부터 계산된다.\n                this._backBuffer.buffer.fillAll(\n                    <string>contents.highlightTextColor\n                );\n                // 이 플래그가 활성화되어있다면 flushTextState에서 그리기 처리를 해야 한다.\n                this._backBuffer.isDirty = true;\n                this._backBuffer.textState = textState;\n            }\n        };\n\n        const alias_Window_Message_flushTextState =\n            Window_Message.prototype.flushTextState;\n        Window_Message.prototype.flushTextState = function (\n            textState: TextState\n        ) {\n            const isDrawing = textState.drawing; // !this._isUsedTextWidthEx와 같은 효과\n            const isSlowTextMode =\n                !this._showFast && !this.isEndOfText(textState) && isDrawing;\n            const isDrawingTextBackground =\n                isDrawing && this._backBuffer && this._backBuffer.isDirty;\n\n            if (isSlowTextMode) {\n                this.startWait($gameMessage.getWaitTime() || 0);\n            }\n\n            // 텍스트 코드를 만나면, flush가 시작되는데 배경색의 시작 라인이 달라지면,\n            // 다음 라인까지 배경색이 제대로 그려지지 않게 됩니다.\n            // 이는 MZ에서는 버퍼 방식이기 때문에 한 글자씩 배경색이 그려지지 않기 때문입니다.\n            // 따라서 라인이 달라질 때, flushBackground를 해줘야 합니다.\n            if (isDrawingTextBackground && isDrawing) {\n                const backBuffer = this._backBuffer;\n                const bitmap = backBuffer.buffer;\n                const backTextState = backBuffer.textState!;\n\n                if (backTextState.py !== textState.y) {\n                    this._backBuffer.isDirty = false;\n                    alias_Window_Message_flushTextState.call(this, textState);\n                    return;\n                }\n                let tx = backBuffer.x;\n                let ty = backBuffer.y;\n                const x = textState.x;\n                const y = textState.y;\n                const w = Math.min(this.innerWidth, Math.floor(bitmap.width));\n                const h = Math.min(this.innerHeight, Math.floor(bitmap.height));\n\n                // this.contents.blt(\n                //     bitmap,\n                //     0,\n                //     0,\n                //     w,\n                //     h,\n                //     Math.min(tx, y),\n                //     Math.min(ty, y)\n                // );\n                this._backBuffer.isDirty = false;\n            }\n\n            alias_Window_Message_flushTextState.call(this, textState);\n        };\n\n        /**\n         * 새로운 라인이 시작되기 전에 이전 라인에 그려야 할 배경색을 마저 그리는 기능입니다.\n         */\n        Window_Message.prototype.flushTextBackgbround = function (\n            textState: TextState\n        ) {};\n\n        Window_Message.prototype.updateBigFaceOpacity = function () {\n            if (!this._faceContents) {\n                return;\n            }\n            let { faceOpacity } = RS.MessageSystem.Params;\n            if (!faceOpacity) faceOpacity = 255;\n            const value = faceOpacity.clamp(0, 255);\n            this._faceContents.opacity = value;\n        };\n\n        Window_Message.prototype.fadeInOutFaceContents = function () {\n            if (!this._faceContents) {\n                return;\n            }\n\n            const isValid = this.isOpening() || this.isClosing();\n            if (isValid) {\n                const openness = (this.openness || 0).clamp(0, 255);\n                this._faceContents.scale.y = openness / 255;\n                this._faceContents.y =\n                    (this._faceContents.height / 2) * (1 - this.openness / 255);\n            }\n        };\n\n        const alias_Window_Message_checkToNotClose =\n            Window_Message.prototype.checkToNotClose;\n        Window_Message.prototype.checkToNotClose = function () {\n            this.fadeInOutFaceContents();\n            alias_Window_Message_checkToNotClose.call(this);\n        };\n\n        Window_Message.prototype.updateBalloonPosition = function () {\n            // Get the component\n            const component = <BalloonWindowTransformComponent>(\n                DependencyInjector.getComponent(\n                    \"BalloonWindowTransformComponent\"\n                )\n            );\n            if (component) {\n                component.updateBalloonPosition();\n            }\n        };\n\n        Window_Message.prototype.getDefaultSizeOption = function () {\n            const isMobileDevice = Utils.isMobileDevice();\n            const maxSW = isMobileDevice\n                ? window.outerWidth\n                : window.screen.availWidth;\n            const maxSH = isMobileDevice\n                ? window.outerHeight\n                : window.screen.availHeight;\n            const maxWidth = this.width;\n            const maxHeight = this.height;\n\n            return {\n                maxSW,\n                maxSH,\n                maxWidth,\n                maxHeight,\n                maxY: maxSH - maxHeight,\n                maxX: maxSW - maxWidth,\n            };\n        };\n\n        Window_Message.prototype.updatePlacement = function () {\n            const goldWindow = this._goldWindow;\n            const isNormalWindowMode = $gameMessage.getBalloon() === -2;\n            const isValidSceneIsMap = SceneManager._scene instanceof Scene_Map;\n            this._positionType = $gameMessage.positionType();\n\n            // 말풍선 모드가 아니라면 X좌표를 화면 중앙에 맞춘다.\n            if (isNormalWindowMode) {\n                const { maxWidth, maxHeight, maxX, maxY } =\n                    this.getDefaultSizeOption();\n\n                const desiredX =\n                    Graphics.width / 2 -\n                    maxWidth / 2 +\n                    RS.MessageSystem.Params.windowOffset.x;\n                const desiredY =\n                    (this._positionType * (Graphics.height - maxHeight)) / 2 +\n                    RS.MessageSystem.Params.windowOffset.y;\n\n                this.x = Math.min(desiredX, maxX);\n                this.y = Math.min(desiredY, maxY);\n            } else {\n                if (isValidSceneIsMap) {\n                    this.updateBalloonPosition();\n                }\n            }\n\n            // 골드 윈도우의 위치 설정\n            if (goldWindow) {\n                const minGoldY = goldWindow.height;\n                this._goldWindow.y =\n                    this.y > minGoldY ? 0 : Graphics.height - goldWindow.height;\n            }\n\n            // 투명도 업데이트\n            this.updateDefaultOpacity();\n            this.updateContentsOpacity();\n            this.updateBigFaceOpacity();\n\n            // 이름 윈도우 업데이트\n            // if (this._nameBoxWindow.isOpen() || this.areSettingsChanged()) {\n            //     this.updateNameWindow();\n            // }\n            // 얼굴 이미지의 Z-Index 업데이트\n            if ($gameMessage.faceName() !== \"\") {\n                const isBigFace = /^Big_/.exec($gameMessage.faceName());\n                const backIndex = 2;\n\n                if (RS.MessageSystem.Params.faceSide) {\n                    this.setFaceZIndex(isBigFace ? 0 : backIndex);\n                } else {\n                    this.setFaceZIndex(backIndex);\n                }\n            }\n        };\n\n        Window_Message.prototype.isAlreadyDrawnFace = function () {\n            return this._faceContents.bitmap || this.newLineX() > 0;\n        };\n\n        Window_Message.prototype.setFaceZIndex = function (zIndex = 0) {\n            const parent = this.parent;\n            const isFaceSide = RS.MessageSystem.Params.faceSide;\n\n            if (parent && isFaceSide) {\n                this.setChildIndex(this._faceContents, zIndex);\n            }\n        };\n\n        Window_Message.prototype.clearFaceBitmap = function () {\n            if (this._faceContents.bitmap) {\n                // @ts-ignore\n                this._faceContents.bitmap = null;\n            }\n        };\n\n        const alias_Window_Message_convertEscapeCharacters =\n            Window_Message.prototype.convertEscapeCharacters;\n        Window_Message.prototype.convertEscapeCharacters = function (text) {\n            const tcGroup = RS.MessageSystem.TextCodes.ENUM;\n            const textCode = RS.MessageSystem.TextCodes.Main;\n            const regGroup = RS.MessageSystem.Reg.Group;\n            text = alias_Window_Message_convertEscapeCharacters.call(\n                this,\n                text\n            );\n            text = text.replace(\n                regGroup[tcGroup.BOLD_START_CV],\n                function () {\n                    return regGroup[tcGroup.BOLD_START].source;\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.BOLD_END_CV],\n                function () {\n                    return regGroup[tcGroup.BOLD_END].source;\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.ITALIC_START_CV],\n                function () {\n                    return regGroup[tcGroup.ITALIC_START].source;\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.ITALIC_END_CV],\n                function () {\n                    return regGroup[tcGroup.ITALIC_END].source;\n                }.bind(this)\n            );\n            text = text.replace(regGroup[tcGroup.NAME], (...args) => {\n                let retName = args[1];\n\n                if (retName.endsWith(\":left\")) {\n                    retName = retName.replace(\":left\", \"\");\n                    RS.MessageSystem.Params.namePositionTypeAtX = \"left\";\n                }\n                if (retName.endsWith(\":auto\")) {\n                    retName = retName.replace(\":auto\", \"\");\n                    RS.MessageSystem.Params.namePositionTypeAtX = \"auto\";\n                }\n                if (retName.endsWith(\":center\")) {\n                    retName = retName.replace(\":center\", \"\");\n                    RS.MessageSystem.Params.namePositionTypeAtX = \"center\";\n                }\n                if (retName.endsWith(\":opacity0\")) {\n                    retName = retName.replace(\":opacity0\", \"\");\n                    RS.MessageSystem.Params.namePositionTypeAtX = \"opacity0\";\n                }\n                if (retName.endsWith(\":defaultOpacity\")) {\n                    retName = retName.replace(\":defaultOpacity\", \"\");\n                    RS.MessageSystem.Params.namePositionTypeAtX =\n                        \"defaultOpacity\";\n                }\n                if (retName.endsWith(\":right\")) {\n                    retName = retName.replace(\":right\", \"\");\n                    RS.MessageSystem.Params.namePositionTypeAtX = \"right\";\n                }\n                this._nameBoxWindow.setName(retName);\n                return \"\";\n            });\n            text = text.replace(\n                regGroup[tcGroup.BALLOON],\n                function () {\n                    const value = Number(arguments[1] || -2);\n                    if ($gameParty.inBattle()) {\n                        $gameMessage.setBalloon(\n                            // @ts-ignore\n                            value < 0\n                                ? \"ENEMIES : \" + Math.abs(value)\n                                : \"ACTORS : \" + value\n                        );\n                    } else {\n                        $gameMessage.setBalloon(value);\n                    }\n                    return \"\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.FRIENDLY_TROOPS],\n                function () {\n                    const value = Number(arguments[1] || 0);\n                    $gameMessage.setBalloon(\n                        // @ts-ignore\n                        \"ACTORS : \" + value\n                    );\n                    return \"\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.ENEMY_TROOPS],\n                function () {\n                    const value = Number(arguments[1] || 0);\n                    $gameMessage.setBalloon(\n                        // @ts-ignore\n                        \"ENEMIES : \" + value\n                    );\n                    return \"\";\n                }.bind(this)\n            );\n            text = text.replace(regGroup[tcGroup.FACE_DIRECTION], () => {\n                const value = Number(arguments[1] || 0);\n                if (!this._isUsedTextWidthEx) {\n                    RS.MessageSystem.Params.faceDirection = value;\n                }\n                return \"\";\n            });\n            return text;\n        };\n\n        // Window_Message.prototype.terminateMessage\n        Window_Message.prototype.setHeight = function (n) {\n            this.contents.clear();\n            $gameMessage.setMaxLine(n);\n            this.height = this.fittingHeight(n);\n            this.createContents();\n            this.updatePlacement();\n        };\n\n        const alias_Window_Message_initialize =\n            Window_Message.prototype.initialize;\n        Window_Message.prototype.initialize = function (rect) {\n            alias_Window_Message_initialize.call(this, rect);\n            $gameTemp.setMSHeightFunc(this.setHeight.bind(this));\n            this.setHeight(RS.MessageSystem.Params.numVisibleRows);\n            this.createFaceContents();\n            this.on(\"removed\", this.removeEventHandler, this);\n            this.on(\"onLoadWindowskin\", this.onLoadWindowskin, this);\n        };\n\n        Window_Message.prototype.calcBalloonRect = function (text: string) {\n            const component = <BalloonWindowTransformComponent>(\n                DependencyInjector.getComponent(\n                    \"BalloonWindowTransformComponent\"\n                )\n            );\n            component.calcBalloonRect(text);\n        };\n\n        const alias_Window_Message_newPage = Window_Message.prototype.newPage;\n        Window_Message.prototype.newPage = function (textState) {\n            this.setFaceZIndex();\n            this.clearFaceBitmap();\n            this.loadWindowskin();\n            this.emit(\"onLoadWindowskin\");\n            this.openBalloon($gameMessage.getBalloon());\n            alias_Window_Message_newPage.call(this, textState);\n        };\n\n        Window_Message.prototype.updateBalloonPositionInBattle = function () {\n            const component = <BalloonWindowTransformComponent>(\n                DependencyInjector.getComponent(\n                    \"BalloonWindowTransformComponent\"\n                )\n            );\n            if (component) {\n                component.updateBalloonPositionInBattle();\n            }\n        };\n\n        Window_Message.prototype.openBalloon = function (sign) {\n            // 말풍선 모드가 아니면 빠져나간다.\n            if (sign === -2) {\n                this.resizeMessageSystem();\n                return;\n            }\n\n            this.setupOwner(sign);\n\n            const isBattleScene = SceneManager._scene instanceof Scene_Battle;\n            // 전투 중일 경우\n            if (isBattleScene) {\n                this.updateBalloonPositionInBattle();\n            } else {\n                this.updateBalloonPosition();\n            }\n        };\n\n        /**\n         * 1. start\n         */\n        const alias_Window_Message_startMessage =\n            Window_Message.prototype.startMessage;\n        Window_Message.prototype.startMessage = function () {\n            const text = $gameMessage.allText();\n            const textState = this.createTextState(text, 0, 0, 0);\n            textState.x = this.newLineX(textState);\n            textState.startX = textState.x;\n            this._textState = textState;\n\n            // 말풍선 영역을 계산합니다.\n            let tempText = textState.text.slice(0);\n            if (\n                $gameMessage.getBalloon() === -2 &&\n                RS.MessageSystem.Params.isParagraphMinifier\n            ) {\n                tempText = tempText.replace(/[\\r\\n]+/gm, \" \");\n            }\n            // ! BUG의 원인\n            this.calcBalloonRect(tempText);\n\n            this.newPage(this._textState);\n\n            // width 와 height를 재설정한다.\n            this.resizeMessageSystem(\"no reset\");\n\n            this.updatePlacement();\n            this.updateBackground();\n            this.open();\n            this._nameBoxWindow.start();\n        };\n\n        Window_Message.prototype.getDefaultWindowRect = function () {\n            return Scene_Message.prototype.messageWindowRect();\n        };\n\n        Window_Message.prototype.windowWidth = function () {\n            const rect = this.getDefaultWindowRect();\n            return rect.width;\n        };\n\n        Window_Message.prototype.windowHeight = function () {\n            const rect = this.getDefaultWindowRect();\n            return rect.height;\n        };\n\n        Window_Message.prototype.resizeMessageSystem = function (\n            ...args: any[]\n        ) {\n            const isResetOwner: Boolean = !(args.length > 0);\n\n            const isBattleScene = SceneManager._scene instanceof Scene_Battle;\n            if (!isResetOwner && isBattleScene) {\n                return;\n            }\n\n            const n = $gameMessage.positionType();\n            const ox = RS.MessageSystem.Params.windowOffset.x;\n            const oy = RS.MessageSystem.Params.windowOffset.y;\n\n            const windowRect = {\n                width: this.windowWidth(),\n                height: this.windowHeight(),\n            };\n            const x = Graphics.width / 2 - windowRect.width / 2 + ox;\n            const y = (n * (Graphics.height - windowRect.height)) / 2 + oy;\n            const width = windowRect.width;\n            const height = windowRect.height;\n\n            if (x !== this.x) this.x = x;\n            if (y !== this.y) this.y = y;\n            if (width !== this.width || height !== this.height) {\n                this.width = width;\n                this.height = height;\n            }\n\n            if (isResetOwner) {\n                $gameMap.setMsgOwner($gamePlayer);\n            }\n        };\n\n        Window_Message.prototype.removeEventHandler = function () {\n            this.off(\"onLoadWindowskin\", this.onLoadWindowskin, this);\n        };\n\n        /**\n         * TODO: ColorManager.textColor의 대체 구현.\n         *\n         * @param {Number} n\n         * @returns\n         */\n        Window_Message.prototype.textColor = function (n) {\n            const windowskin = this.windowskin;\n            if (!windowskin.isReady()) {\n                // Set the default text color if the windowskin is not ready.\n                return Color.baseColor;\n            }\n            const px = 96 + (n % 8) * 12 + 6;\n            const py = 144 + Math.floor(n / 8) * 12 + 6;\n            return windowskin.getPixel(px, py);\n        };\n\n        Window_Message.prototype.onLoadWindowskin = function () {\n            Color.baseColor = this.textColor(0);\n            this.changeTextColor(Color.baseColor);\n        };\n\n        Window_Message.prototype.loadWindowskin = function () {\n            const bitmap = ImageManager.loadSystem(\n                RS.MessageSystem.Params.windowskin\n            );\n\n            // if the windowskin is changed?\n            if (bitmap !== this.windowskin) {\n                this.windowskin = bitmap;\n                this._isDirtyWindowskin = false;\n                this.windowskin.addLoadListener(() => {\n                    this._isDirtyWindowskin = true;\n                });\n                if (!this.contents) {\n                    this.createContents();\n                }\n                // Set the default text color if the windowskin didn't load yet.\n                this.changeTextColor(Color.baseColor);\n\n                if (!this.windowskin.isReady()) {\n                    return setTimeout(() => this.loadWindowskin(), 10);\n                }\n            }\n        };\n\n        const _Window_Message_updateLoading =\n            Window_Message.prototype.updateLoading;\n        Window_Message.prototype.updateLoading = function () {\n            let ret = true;\n\n            if (this._isDirtyWindowskin) {\n                Color.baseColor = ColorManager.textColor(0);\n                this.changeTextColor(Color.baseColor);\n                this._isDirtyWindowskin = false;\n                ret = true;\n            }\n            return _Window_Message_updateLoading.call(this) && ret;\n        };\n\n        Window_Message.prototype.needsNewPage = function (textState) {\n            return (\n                !this.isEndOfText(textState) &&\n                textState.y + textState.height > this.contentsHeight()\n            );\n        };\n\n        Window_Message.prototype.createFaceContents = function () {\n            this._faceContents = new Sprite();\n            this._faceContents.x = 0;\n            this._faceContents.y = 0;\n\n            this.addChildAt(this._faceContents, 2);\n            return this._faceContents;\n        };\n\n        Window_Message.prototype.removeFaceContents = function () {\n            if (this._faceContents) this.removeChild(this._faceContents);\n        };\n\n        /**\n         * 큰 얼굴 이미지가 설정되었을 때 텍스트 시작 위치\n         */\n        Window_Message.prototype.newLineX = function () {\n            const reg = /^Big_/i;\n            const faceName = $gameMessage.faceName();\n            const faceIndex = $gameMessage.faceIndex();\n            if (reg.exec(faceName)) {\n                var faceStartX = RS.MessageSystem.Params.faceSide\n                    ? 0\n                    : RS.MessageSystem.Params.textStartX;\n                return faceIndex > 0 ? 0 : faceStartX;\n            } else {\n                const isRightDirection =\n                    RS.MessageSystem.Params.faceDirection === 2;\n                if (isRightDirection) {\n                    return 0;\n                }\n                return faceName ? RS.MessageSystem.Params.faceStartOriginX : 0;\n            }\n        };\n\n        // TODO: 큰 얼굴 이미지 구현 필요\n        /**\n         * @param {String} faceName\n         */\n        Window_Message.prototype.isValidBigFace = function (faceName) {\n            const reg = /^Big_/i;\n            return reg.exec(faceName);\n        };\n\n        /**\n         * TODO: deprecated\n         */\n        Window_Message.prototype.updateNameWindow = function () {};\n\n        /**\n         * Window 구성 스프라이트 _windowBackSprite의 투명도를 조절합니다.\n         * TODO: deprecated\n         * @method standardBackOpacity\n         */\n        Window_Message.prototype.standardBackOpacity = function () {\n            return RS.MessageSystem.Params.backOpacity;\n        };\n\n        /**\n         * Bitmap의 context.globalAlpha 값을 변경합니다.\n         * @method translucentOpacity\n         */\n        Window_Message.prototype.translucentOpacity = function () {\n            return RS.MessageSystem.Params.translucentOpacity;\n        };\n\n        /**\n         * 윈도우를 구성하는 모든 객체의 투명도를 변경합니다.\n         * @method updateDefaultOpacity\n         */\n        Window_Message.prototype.updateDefaultOpacity = function () {\n            this.opacity = RS.MessageSystem.Params.defaultOpacity;\n        };\n\n        /**\n         * Window 구성 스프라이트 _windowContentsSprite의 투명도를 변경합니다.\n         * @method updateContentsOpacity\n         */\n        Window_Message.prototype.updateContentsOpacity = function () {\n            this.contentsOpacity = RS.MessageSystem.Params.contentsOpacity;\n        };\n\n        Window_Message.prototype.getSpriteActors = function (\n            sign: number\n        ): IBalloonSpriteTarget | null {\n            if (!$gameParty.members()) return null;\n            const max = $gameParty.members().length;\n            sign = sign.clamp(0, max);\n\n            return {\n                type: \"actor\",\n                id: sign - 1,\n            };\n        };\n\n        Window_Message.prototype.getSpriteEnemies = function (\n            sign: number\n        ): IBalloonSpriteTarget | null {\n            if (!$gameTroop.members()) return null;\n            const max = $gameTroop.members().length;\n            sign = sign.clamp(0, max);\n\n            return {\n                type: \"enemy\",\n                id: sign - 1,\n            };\n        };\n\n        Window_Message.prototype.setupOwner = function (sign) {\n            switch (sign) {\n                case -1: // 플레이어\n                    $gameMap.setMsgOwner($gamePlayer);\n                    break;\n                case 0: // 이 이벤트\n                    $gameMap.setMsgOwner(<Game_Event>$gameMap.getMsgEvent());\n                    break;\n                default:\n                    if (SceneManager._scene instanceof Scene_Battle) {\n                        // 전투 중인가?\n                        if (/(?:ENEMIES)[ ]*:(.*)/.test(sign.toString())) {\n                            // 적\n                            $gameMap.setMsgOwner(\n                                this.getSpriteEnemies(parseInt(RegExp.$1))\n                            );\n                        }\n                        if (/(?:ACTORS)[ ]*:(.*)/.test(sign.toString())) {\n                            // 아군\n                            $gameMap.setMsgOwner(\n                                this.getSpriteActors(parseInt(RegExp.$1))\n                            );\n                        }\n                    } else {\n                        // 맵 이벤트\n                        $gameMap.setMsgOwner($gameMap.event(sign));\n                    }\n                    break;\n            }\n        };\n\n        const alias_Window_Message_shouldBreakHere =\n            Window_Message.prototype.shouldBreakHere;\n        Window_Message.prototype.shouldBreakHere = function (text) {\n            const isBreakCharacter = alias_Window_Message_shouldBreakHere.call(\n                this,\n                text\n            );\n\n            if (isBreakCharacter) {\n                if (RS.MessageSystem.Params.isPlayTextSound) {\n                    const interval = RS.MessageSystem.Params.textSoundInterval;\n\n                    if (this._textSoundInterval-- <= 0) {\n                        AudioManager.playStaticSe(<rm.types.AudioParameters>{\n                            name: RS.MessageSystem.popParameter(\n                                \"Text Sound\",\n                                \"텍스트 효과음\"\n                            ),\n                            pan: 0,\n                            pitch: 100,\n                            volume: 90,\n                        });\n                        this._textSoundInterval = interval;\n                    }\n                }\n            }\n\n            return isBreakCharacter;\n        };\n\n        //============================================================================\n        // Game_Interpreter\n        //============================================================================\n        Game_Interpreter.prototype.processMessageParams = function (\n            eventId: number,\n            index: number\n        ) {\n            const meta = <EventCommand.CommentMeta>(\n                RS.MessageSystem.getEventComments(eventId, index - 1)\n            );\n            if (meta[\"윈도우 스킨\"]) {\n                RS.MessageSystem.Params.windowskin =\n                    meta[\"윈도우 스킨\"].trim() || \"Window\";\n                ImageManager.loadSystem(RS.MessageSystem.Params.windowskin);\n            }\n            if (meta[\"이름 윈도우 스킨\"]) {\n                RS.MessageSystem.Params.windowskinForNameWindow =\n                    meta[\"이름 윈도우 스킨\"].trim() || \"Window\";\n                ImageManager.loadSystem(\n                    RS.MessageSystem.Params.windowskinForNameWindow\n                );\n            }\n            if (meta[\"라인 높이\"]) {\n                RS.MessageSystem.Params.lineHeight = parseInt(\n                    meta[\"라인 높이\"]\n                );\n            }\n            if (meta[\"폰트 크기\"]) {\n                RS.MessageSystem.Params.fontSize = parseInt(meta[\"폰트 크기\"]);\n            }\n            if (meta[\"라인\"]) {\n                RS.MessageSystem.Params.numVisibleRows = parseInt(meta[\"라인\"]);\n            }\n            if (meta[\"텍스트 시작 X\"]) {\n                RS.MessageSystem.Params.textStartX = parseInt(\n                    meta[\"텍스트 시작 X\"]\n                );\n            }\n            if (meta[\"큰 페이스칩 OX\"]) {\n                RS.MessageSystem.Params.faceOX = Number(meta[\"큰 페이스칩 OX\"]);\n            }\n            if (meta[\"큰 페이스칩 OY\"]) {\n                RS.MessageSystem.Params.faceOY = Number(meta[\"큰 페이스칩 OY\"]);\n            }\n            if (meta[\"대화창 뒤에 얼굴 표시\"]) {\n                RS.MessageSystem.Params.faceSide = Boolean(\n                    meta[\"대화창 뒤에 얼굴 표시\"] === \"true\"\n                );\n            }\n            if (meta[\"대화창 투명도\"]) {\n                RS.MessageSystem.Params.defaultOpacity = parseInt(\n                    meta[\"대화창 투명도\"]\n                );\n            }\n            if (meta[\"텍스트 효과음 재생 여부\"]) {\n                RS.MessageSystem.Params.isPlayTextSound = Boolean(\n                    meta[\"텍스트 효과음 재생 여부\"] === \"true\"\n                );\n            }\n            if (meta[\"기본 텍스트 출력 속도\"]) {\n                RS.MessageSystem.Params.textSpeed = Number(\n                    meta[\"기본 텍스트 출력 속도\"]\n                );\n            }\n        };\n\n        Game_Interpreter.prototype.isValidMultiLine = function () {\n            const codes = [];\n            let prevCode = 401;\n            let lineCount = 0;\n            for (let i = 1; i < 8; i++) {\n                const currentCommand = this._list[this._index + i];\n                if (currentCommand) {\n                    const code = currentCommand.code;\n                    codes.push(code);\n                    prevCode = code;\n                    if ([101, 401].contains(code)) {\n                        lineCount++;\n                    }\n                }\n            }\n            if (codes.contains(102)) {\n                return false;\n            } else if (codes.contains(103)) {\n                return false;\n            } else if ($gameMessage.getMaxLine() <= 4) {\n                return false;\n            } else if (lineCount <= 4) {\n                return false;\n            } else if (RS.MessageSystem.Params.choiceWindowStyle == \"RMXP\") {\n                return false;\n            } else {\n                return true;\n            }\n        };\n\n        Game_Interpreter.prototype.command101 = function (params) {\n            if ($gameMessage.isBusy()) {\n                return false;\n            }\n\n            $gameMap.setMsgEvent(this.character(this._eventId > 0 ? 0 : -1));\n            $gameMessage.setFaceImage(params[0], params[1]);\n            $gameMessage.setBackground(params[2]);\n            $gameMessage.setPositionType(params[3]);\n            $gameMessage.setSpeakerName(params[4]);\n\n            this.processMessageParams(this._eventId, this._index);\n\n            if (this.isMultiLine()) {\n                this.multiLineAddMessage();\n            } else {\n                while (this.nextEventCode() === 401) {\n                    // Text data\n                    this._index++;\n                    $gameMessage.add(this.currentCommand().parameters[0]);\n                }\n            }\n\n            switch (this.nextEventCode()) {\n                case 102: // Show Choices\n                    this._index++;\n                    this.setupChoices(this.currentCommand().parameters);\n                    break;\n                case 103: // Input Number\n                    this._index++;\n                    this.setupNumInput(this.currentCommand().parameters);\n                    break;\n                case 104: // Select Item\n                    this._index++;\n                    this.setupItemChoice(this.currentCommand().parameters);\n                    break;\n            }\n            this.setWaitMode(\"message\");\n            return true;\n        };\n\n        Game_Interpreter.prototype.multiLineAddMessage = function () {\n            this.initLineHeight();\n\n            while ($gameMessage._texts.length < $gameMessage.getMaxLine()) {\n                while (this.nextEventCode() === 401) {\n                    this._index++;\n                    $gameMessage.add(this.currentCommand().parameters[0]);\n                    this.addLineHeight();\n                    if (this._lineHeight >= $gameMessage.getMaxLine()) {\n                        break;\n                    }\n                }\n                if (this.nextEventCode() !== 101) {\n                    break;\n                }\n            }\n\n            // 커맨드 코드 401번이 아직 남아있는 상황이라면,\n            // 다음 인덱스로 넘겨야 선택지가 제대로 동작한다.\n            while (this.nextEventCode() === 401) {\n                this._index++;\n            }\n        };\n\n        Game_Interpreter.prototype.initLineHeight = function () {\n            this._lineHeight = 0;\n        };\n\n        Game_Interpreter.prototype.isMultiLine = function () {\n            return this.isValidMultiLine();\n        };\n\n        Game_Interpreter.prototype.addLineHeight = function () {\n            this._lineHeight++;\n            if (this.nextEventCode() === 101) {\n                this._index++;\n            }\n        };\n\n        //============================================================================\n        // Window_NameBox\n        //============================================================================\n        Window_NameBox.prototype.updatePlacement = function () {\n            this.width = this.windowWidth();\n            this.height = this.windowHeight();\n            const messageWindow = this._messageWindow;\n            if ($gameMessage.isRTL()) {\n                this.x = messageWindow.x + messageWindow.width - this.width;\n            } else {\n                this.x = messageWindow.x;\n            }\n            if (messageWindow.y > 0) {\n                this.y = messageWindow.y - this.height;\n            } else {\n                this.y = messageWindow.y + messageWindow.height;\n            }\n        };\n\n        //============================================================================\n        // Game_Temp\n        //============================================================================\n        Game_Temp.prototype.setMSHeightFunc = function (func) {\n            this._callMSHeightFunc = func;\n        };\n\n        Game_Temp.prototype.setMaxLine = function (n) {\n            if (this._callMSHeightFunc) this._callMSHeightFunc(n);\n        };\n\n        //============================================================================\n        // Game_Map\n        //============================================================================\n        const alias_Game_Map_initialize = Game_Map.prototype.initialize;\n        Game_Map.prototype.initialize = function () {\n            alias_Game_Map_initialize.call(this);\n            this._msgOwner = $gamePlayer;\n            this._msgEvent = 0;\n        };\n\n        Game_Map.prototype.getMsgOwner = function () {\n            return this._msgOwner;\n        };\n\n        /**\n         * @method setMsgOwner\n         * @param o {Game_Event | Game_Player}\n         */\n        Game_Map.prototype.setMsgOwner = function (o) {\n            this._msgOwner = o;\n            $gameMessage.setBalloonPatternHeight(this.tileHeight());\n        };\n\n        Game_Map.prototype.getMsgEvent = function () {\n            return this._msgEvent;\n        };\n\n        Game_Map.prototype.setMsgEvent = function (ev) {\n            this._msgEvent = ev;\n        };\n\n        /// ======================================================================\n        /// DI\n        /// ======================================================================\n        const alias_Scene_Message_associateWindows__enrtyPoint =\n            Scene_Message.prototype.associateWindows;\n        Scene_Message.prototype.associateWindows = function () {\n            alias_Scene_Message_associateWindows__enrtyPoint.call(this);\n            const messageWindow = this._messageWindow;\n            DependencyInjector.injectMessageWindow(messageWindow);\n            DependencyInjector.ready();\n        };\n\n        Scene_Message.prototype.messageWindowRect = function () {\n            const ww = Graphics.width;\n            const wh = this.calcWindowHeight(4, false) + 8;\n            const wx = (Graphics.height - ww) / 2;\n            const wy = 0;\n            return new Rectangle(wx, wy, ww, wh);\n        };\n\n        const alias_Scene_Message_terminate = Scene_Message.prototype.terminate;\n        Scene_Message.prototype.terminate = function () {\n            alias_Scene_Message_terminate.call(this);\n            DependencyInjector.ejectMessageWindow();\n        };\n\n        RS.MessageSystem.initSystem();\n\n        // ! [DEBUG]\n        if (RS.MessageSystem.Params.DEBUG) {\n            SceneManager.showDevTools();\n            const win = nw.Window.get();\n            win.moveTo(window.outerWidth / 3, 153);\n        }\n    };\n}\n","import { BaseComponent } from \"./BaseComponent\";\n\n/**\n * @class NamwWindowPositionComponent\n * @description\n * 이름 윈도우의 X좌표를 재설정합니다.\n */\nexport class NameWindowPositionComponent extends BaseComponent {\n    setOpacity(value: number) {\n        let opacity = value;\n        if (typeof opacity !== \"number\") {\n            opacity = Number(opacity);\n        }\n        if (isNaN(opacity)) {\n            opacity = 255;\n        }\n        this._nameWindow.opacity = value;\n    }\n\n    updatePositionX() {\n        // 이름 윈도우가 없다면\n        if (!this._nameWindow) {\n            return;\n        }\n\n        const mx = this.x;\n        const w = this.width;\n        const nw = this._nameWindow.width;\n\n        const position = <NameWindowPositon>(\n            RS.MessageSystem.Params.namePositionTypeAtX\n        );\n\n        const nx = RS.MessageSystem.Params.nameWindowX;\n\n        let newX = mx + nx;\n\n        switch (position) {\n            case \"right\":\n                newX = mx + w - nw - nx;\n                break;\n            case \"center\":\n                newX = mx + w / 2 - nw / 2 - nx;\n                break;\n            case \"left\":\n                newX = mx + nx;\n                break;\n            case \"opacity0\":\n                this.setOpacity(0);\n                break;\n            case \"defaultOpacity\":\n                this.setOpacity(RS.MessageSystem.Params.defaultOpacity);\n                break;\n            case \"auto\":\n                newX = this.x + this.newLineX() + nx;\n                break;\n        }\n\n        this._nameWindow.x = newX;\n    }\n\n    updatePositionY() {\n        const ox = RS.MessageSystem.Params.windowOffset.x;\n        const oy = RS.MessageSystem.Params.windowOffset.y;\n        const positionType = $gameMessage.positionType();\n        const ballonOwnerType = $gameMessage.getBalloon();\n\n        this.updatePositionX();\n\n        // 메시지 윈도우가 상단이고, 말풍선 모드가 아니라면\n        if (positionType === 0 && ballonOwnerType === -2) {\n            // 최상단의 위치\n            const topY = 0;\n\n            this._nameWindow.y = topY + oy;\n\n            // 이름 윈도우가 열렸는 지 여부에 따라 메시지 윈도우의 Y 좌표를 설정합니다.\n            this.y = this._nameWindow.isOpen()\n                ? topY +\n                  this._nameWindow.height +\n                  RS.MessageSystem.Params.nameWindowY +\n                  oy\n                : topY + oy;\n        } else {\n            this._nameWindow.y =\n                this.y -\n                this._nameWindow.height -\n                RS.MessageSystem.Params.nameWindowY;\n        }\n    }\n}\n","/***\n * 이것은 RPG Maker MV 호환성을 위해 존재하며 타입스크립트로 재작성되어야 합니다.\n */\nimport { Types } from \"../types/parameters\";\n\ntype TextCodeKey =\n    | \"COLOR\"\n    | \"TEXT_SPEED\"\n    | \"OUTLINE_COLOR\"\n    | \"OUTLINE_WIDTH\"\n    | \"INDENT\"\n    | \"BOLD\"\n    | \"ITALIC\"\n    | \"NAME\"\n    | \"GRADIENT\"\n    | \"PARTY_MEMBER\"\n    | \"PLAYER\"\n    | \"VAR\"\n    | \"ICON\"\n    | \"INCREASE\"\n    | \"DECREASE\"\n    | \"GOLD\"\n    | \"BALLOON\"\n    | \"ALIGN\"\n    | \"NUM\"\n    | \"TEXT_SIZE\"\n    | \"TAB\"\n    | \"CARRIAGE_RETURN\"\n    | \"PLAY_SE\"\n    | \"SHOW_PICTURE\"\n    | \"HIDE_PICTURE\"\n    | \"ITEM\"\n    | \"WEAPON\"\n    | \"ARMOR\"\n    | \"CLASSES\"\n    | \"ENEMY\"\n    | \"STATE\"\n    | \"SKILL\"\n    | \"FACE\"\n    | \"FRIENDLY_TROOPS\"\n    | \"ENEMY_TROOPS\"\n    | \"WAIT_SEC_15\"\n    | \"WAIT_SEC_60\"\n    | \"START_PAUSE\"\n    | \"LINE_SHOW_FAST_LT\"\n    | \"LINE_SHOW_FAST_GT\"\n    | \"PAUSE_SKIP\"\n    | \"BOLD_START\"\n    | \"BOLD_END\"\n    | \"ITALIC_START\"\n    | \"ITALIC_END\"\n    | \"ALIGN_LEFT\"\n    | \"ALIGN_CENTER\"\n    | \"ALIGN_RIGHT\"\n    | \"BOLD_START_CV\"\n    | \"BOLD_END_CV\"\n    | \"ITALIC_START_CV\"\n    | \"ITALIC_END_CV\"\n    | \"ALIGN_CLEAR\"\n    | \"HIGHLIGHT_TEXT_COLOR\"\n    | \"FACE_DIRECTION\";\n\ninterface TextCodeEnum {\n    ENUM: Record<TextCodeKey, number>;\n}\n\ntype TextCode = Record<string, any> & TextCodeEnum;\n\nconst pluginParams = $plugins.filter((i) => {\n    return i.description.contains(\"<RS_MessageSystem>\");\n});\n\nconst pluginName = <Types.PluginName>(\n    (pluginParams.length > 0 && pluginParams[0].name)\n);\nconst parameters = <Types.PluginParameters>(\n    (pluginParams.length > 0 && pluginParams[0].parameters)\n);\n\nconst RS = <RS>{\n    MessageSystem: <IMessageSytem>{},\n};\n\nRS.MessageSystem.jsonParse = function (str: string) {\n    const retData = JSON.parse(str, (k, v) => {\n        try {\n            return RS.MessageSystem.jsonParse(v);\n        } catch (e) {\n            return v;\n        }\n    });\n\n    return retData;\n};\n\n/**\n * @method popParameter\n */\nRS.MessageSystem.popParameter = function (...args: any[]) {\n    const k = Object.keys(args);\n    let lastUsed = \"\";\n\n    while (k.length > 0) {\n        lastUsed = args[parseInt(<string>k.pop())];\n\n        // @ts-ignore\n        if (parameters[lastUsed]) return parameters[lastUsed];\n    }\n\n    return \"\";\n};\n\nRS.MessageSystem.Reg = {\n    Default: [],\n    Group: [],\n    Korean: [],\n    Chinese: [],\n    English: [],\n    Japanese: [],\n};\n\nenum MessageParams {\n    FACE_START_ORIGIN_X = 168,\n    NAME_WINDOW_WIDTH = 140,\n    NAME_WINDOW_ROWS = 1,\n    FONT_SIZE = 28,\n    STD_PADDING = 18,\n}\n\nRS.MessageSystem.Params = {\n    faceStartOriginX: MessageParams.FACE_START_ORIGIN_X,\n    nameWindowWidth: MessageParams.NAME_WINDOW_WIDTH,\n    nameWindowRows: MessageParams.NAME_WINDOW_ROWS,\n    FONT_SIZE: MessageParams.FONT_SIZE,\n    STD_PADDING: MessageParams.STD_PADDING,\n    isValidShakingChoice: false,\n    fontSize: Number(\n        RS.MessageSystem.popParameter(\"Font Size\", \"글꼴 크기\") || 28\n    ),\n    textSpeed: Number(\n        RS.MessageSystem.popParameter(\"Text Speed\", \"기본 텍스트 출력 속도\") ||\n            0\n    ),\n    minFontSize: Number(\n        RS.MessageSystem.popParameter(\"Text Min Size\", \"폰트 최소 크기\") || 24\n    ),\n    maxFontSize: Number(\n        RS.MessageSystem.popParameter(\"Text Max Size\", \"폰트 최대 크기\") || 96\n    ),\n    textStartX: Number(\n        RS.MessageSystem.popParameter(\"Text Start X\", \"텍스트 시작 X\")\n    ),\n    numVisibleRows: Number(\n        RS.MessageSystem.popParameter(\"numVisibleRows\", \"라인 갯수\") || 4\n    ),\n    gradientColor1: String(\n        RS.MessageSystem.popParameter(\n            \"gradientColor1\",\n            \"그레디언트 시작 색상\"\n        ) || \"#FFFFFF\"\n    ),\n    gradientColor2: String(\n        RS.MessageSystem.popParameter(\n            \"gradientColor2\",\n            \"그레디언트 중간 색상\"\n        ) || \"#F29661\"\n    ),\n    gradientColor3: String(\n        RS.MessageSystem.popParameter(\"gradientColor3\", \"그레디언트 끝 색상\") ||\n            \"#CC3D3D\"\n    ),\n    nameWindowX: Number(\n        RS.MessageSystem.popParameter(\"Name Window X\", \"이름 윈도우 X\") || 0\n    ),\n    nameWindowY: Number(\n        RS.MessageSystem.popParameter(\"Name Window Y\", \"이름 윈도우 Y\") || 0\n    ),\n    nameWindowStdPadding: Number(\n        RS.MessageSystem.popParameter(\n            \"Name Window Inner Padding\",\n            \"이름 윈도우 안쪽 여백\"\n        ) || 18\n    ),\n    namePositionTypeAtX:\n        RS.MessageSystem.popParameter(\n            \"Name Window Position\",\n            \"이름 윈도우 위치\"\n        ) || \"left\",\n    faceOX: Number(\n        RS.MessageSystem.popParameter(\"Big Face OX\", \"큰 페이스칩 OX\") || 0\n    ),\n    faceOY: Number(\n        RS.MessageSystem.popParameter(\"Big Face OY\", \"큰 페이스칩 OY\") || 0\n    ),\n    faceSide: Boolean(\n        RS.MessageSystem.popParameter(\n            \"Show Big Face Back\",\n            \"대화창 뒤에 얼굴 표시\"\n        ) === \"true\" || false\n    ),\n    WIDTH: MessageParams.FONT_SIZE * 6 + MessageParams.STD_PADDING,\n    HEIGHT: MessageParams.FONT_SIZE + MessageParams.STD_PADDING / 2,\n    TabSize: Number(RS.MessageSystem.popParameter(\"Tab Size\", \"탭 크기\")),\n    backOpacity: Number(\n        RS.MessageSystem.popParameter(\"back Opacity\", \"배경 그림의 투명도\")\n    ),\n    translucentOpacity: Number(\n        RS.MessageSystem.popParameter(\"translucent Opacity\", \"반투명도\")\n    ),\n    defaultOpacity: Number(\n        RS.MessageSystem.popParameter(\"default Opacity\", \"기본 투명도\")\n    ),\n    contentsOpacity: Number(\n        RS.MessageSystem.popParameter(\"contents Opacity\", \"내용의 투명도\")\n    ),\n    defaultOutlineWidth: Number(\n        RS.MessageSystem.popParameter(\"default outline width\", \"테두리 크기\")\n    ),\n    defaultOutlineColor:\n        RS.MessageSystem.popParameter(\"default outline Color\", \"테두리 색상\") ||\n        \"white\",\n    fonts: {\n        default: \"rmmz-mainfont\",\n    },\n    isTempSpriteContainerVisibility: false,\n    lineHeight: 36,\n    windowOffset: new Point(-4, -4),\n    fontSmoothingEnabled: true,\n    customFont: Boolean(\n        RS.MessageSystem.popParameter(\n            \"Using Custom Font\",\n            \"사용자 지정 폰트 사용 여부\"\n        ) === \"true\"\n    ),\n    customFontName: String(\n        RS.MessageSystem.popParameter(\n            \"Custom Font Name\",\n            \"사용자 지정 폰트명\"\n        ) || \"GameFont\"\n    ),\n    customFontSrc: String(\n        RS.MessageSystem.popParameter(\n            \"Custom Font Src\",\n            \"사용자 지정 폰트 경로\"\n        ) || \"fonts/mplus-1m-regular.ttf\"\n    ),\n    windowskin:\n        RS.MessageSystem.popParameter(\n            \"Default Windowskin\",\n            \"기본 윈도우스킨\"\n        ) || \"Window\",\n    windowskinForNameWindow:\n        RS.MessageSystem.popParameter(\"Name Windowskin\", \"이름 윈도우스킨\") ||\n        \"Window\",\n    choiceWindowStyle: String(\n        RS.MessageSystem.popParameter(\"Choice Style\", \"선택지 스타일\") ||\n            \"default\"\n    ),\n    defaultChoicePostion: parameters[\"Default Choice Position\"] || \"right\",\n    exTextColors: RS.MessageSystem.jsonParse(\n        RS.MessageSystem.popParameter(\"Text Color\", \"텍스트 색상\")\n    ),\n    isPlayTextSound: Boolean(\n        RS.MessageSystem.popParameter(\n            \"Text Sound ON/OFF\",\n            \"텍스트 효과음 재생 여부\"\n        ) === \"true\"\n    ),\n    pathTextSound: String(\n        RS.MessageSystem.popParameter(\"Text Sound\", \"텍스트 효과음\") ||\n            \"Cursor1.ogg\"\n    ),\n    textSoundEval1: RS.MessageSystem.jsonParse(\n        RS.MessageSystem.popParameter(\n            \"Text Sound Execution Condition\",\n            \"텍스트 효과음 실행 조건\"\n        ) || \"Math.randomInt(100) < 45\"\n    ),\n    textSoundEval2: RS.MessageSystem.jsonParse(\n        RS.MessageSystem.popParameter(\n            \"Text Sound Volume\",\n            \"텍스트 효과음 볼륨\"\n        ) || \"(0.4 + (RS.MessageSystem.randomNormal(0.8)[0])).clamp(0.0, 0.8)\"\n    ),\n    textSoundInterval: parseInt(\n        RS.MessageSystem.popParameter(\n            \"Text Sound Interval\",\n            \"텍스트 사운드 재생 간격\"\n        )\n    ),\n    textSoundPoolSize: parseInt(\n        RS.MessageSystem.popParameter(\n            \"텍스트 사운드 풀 크기\",\n            \"Text Sound Pool Size\"\n        ) || 6\n    ),\n    langCode:\n        RS.MessageSystem.popParameter(\"언어 코드\", \"Language Code\") || \"ko\",\n    preloadWindowskins: JSON.parse(parameters[\"preload windowskin\"] || \"[]\"),\n    isParagraphMinifier: Boolean(parameters[\"Paragraph Minifier\"] === \"true\"),\n    gradientStyle: parameters[\"Gradient Style\"],\n    faceOpacity: parseInt(parameters[\"face Opacity\"] || 21),\n    faceDirection: parseInt(parameters[\"face Direction\"] || 0),\n    DEBUG: (() => {\n        return Utils.isNwjs() && Utils.isOptionValid(\"test\");\n    })(),\n};\n\n(() => {\n    const systemFonts: Types.SystemFonts = RS.MessageSystem.jsonParse(\n        parameters[\"systemFont\"]\n    );\n    if (!RS.MessageSystem.Params.fonts) return;\n\n    // ! 여기서부터 변환 시작해야함\n    systemFonts.settings.forEach((i) => {\n        const params = <{ [key: string]: any } | any>{};\n        params[i.languageCode] = i.fontName;\n        Object.assign(RS.MessageSystem.Params.fonts as {}, params);\n    });\n})();\n\n//============================================================================\n// Lazy Initialize Parameters (느린 초기화)\n//============================================================================\n\nvar alias_Game_Temp_initialize = Game_Temp.prototype.initialize;\nGame_Temp.prototype.initialize = function () {\n    alias_Game_Temp_initialize.call(this);\n    RS.MessageSystem.Params.windowWidth =\n        eval(parameters[\"Window Width\"]) || Graphics.boxWidth;\n};\n\n//============================================================================\n// Multiple Language supports\n//============================================================================\n\nRS.MessageSystem.Reg.KoreanEscapeCode =\n    /^[\\$\\.\\|\\^!><\\{\\}\\\\]|^[a-zA-Z가-힣]+[!]*/i;\nRS.MessageSystem.Reg.ChineseEscapeCode =\n    /^[\\$\\.\\|\\^!><\\{\\}\\\\]|^[a-zA-Z一-鼣]+[!]*/i;\nRS.MessageSystem.Reg.EnglishEscapeCode = /^[\\$\\.\\|\\^!><\\{\\}\\\\]|^[A-Z]+[!]*/i;\nRS.MessageSystem.Reg.JapaneseEscapeCode =\n    /^[\\$\\.\\|\\^!><\\{\\}\\\\]|^[A-Z\\u3040-\\u309F\\u30A0-\\u30FF\\u3300-\\u33FF\\u4E00-\\u9FFF\\uFF00-\\uFFEF]+[!]*/i;\nRS.MessageSystem.Reg.defaultEscapeCode =\n    /^[\\$\\.\\|\\^!><\\{\\}\\\\]|^[A-Z가-힣]+[!]*/i;\n\nRS.MessageSystem.TextCodes = (function () {\n    const rowData = RS.MessageSystem.popParameter(\"Text Code\", \"텍스트 코드\");\n    const data = JSON.parse(rowData);\n    const retData = <TextCode>{};\n\n    retData.Korean = [undefined].concat(JSON.parse(data.Korean));\n    retData.Chinese = [undefined].concat(JSON.parse(data.Chinese));\n    retData.English = [undefined].concat(JSON.parse(data.English));\n    retData.Japanese = [undefined].concat(JSON.parse(data.Japanese));\n\n    return retData;\n})();\n\nRS.MessageSystem.TextCodes.Main = [];\n\nRS.MessageSystem.TextCodes.ENUM = {\n    COLOR: 1,\n    TEXT_SPEED: 2,\n    OUTLINE_COLOR: 3,\n    OUTLINE_WIDTH: 4,\n    INDENT: 5,\n    BOLD: 6,\n    ITALIC: 7,\n    NAME: 8,\n    GRADIENT: 9,\n    PARTY_MEMBER: 10,\n    PLAYER: 11,\n    VAR: 12,\n    ICON: 13,\n    INCREASE: 14,\n    DECREASE: 15,\n    GOLD: 16,\n    BALLOON: 17,\n    ALIGN: 18,\n    NUM: 19,\n    TEXT_SIZE: 20,\n    TAB: 21,\n    CARRIAGE_RETURN: 22,\n    PLAY_SE: 23,\n    SHOW_PICTURE: 24,\n    HIDE_PICTURE: 25,\n    ITEM: 26,\n    WEAPON: 27,\n    ARMOR: 28,\n    CLASSES: 29,\n    ENEMY: 30,\n    STATE: 31,\n    SKILL: 32,\n    FACE: 33,\n    FRIENDLY_TROOPS: 34, // 여긴 2018.01.14에 추가됨\n    ENEMY_TROOPS: 35,\n    WAIT_SEC_15: 36, // .\n    WAIT_SEC_60: 37, // |\n    START_PAUSE: 38, // !\n    LINE_SHOW_FAST_LT: 39, // <\n    LINE_SHOW_FAST_GT: 40, // >\n    PAUSE_SKIP: 41, // ^\n    BOLD_START: 42, // <B>\n    BOLD_END: 43, // </B>\n    ITALIC_START: 44,\n    ITALIC_END: 45,\n    ALIGN_LEFT: 46,\n    ALIGN_CENTER: 47,\n    ALIGN_RIGHT: 48,\n    BOLD_START_CV: 49,\n    BOLD_END_CV: 50,\n    ITALIC_START_CV: 51,\n    ITALIC_END_CV: 52,\n    ALIGN_CLEAR: 53, // AEND\n    HIGHLIGHT_TEXT_COLOR: 54,\n    FACE_DIRECTION: 55,\n};\n\n/**\n * 주어진 ID 값으로 텍스트 코드를 현지화하여 반환합니다.\n * @param {Number} idx\n */\nRS.MessageSystem.getTextCode = function (idx: number) {\n    const langCode = RS.MessageSystem.Params.langCode;\n\n    if (langCode.match(/ko/)) {\n        return RS.MessageSystem.TextCodes[\"Korean\"][idx];\n    }\n    if (langCode.match(/zh/)) {\n        return RS.MessageSystem.TextCodes[\"Chinese\"][idx];\n    }\n    if (langCode.match(/en/)) {\n        return RS.MessageSystem.TextCodes[\"English\"][idx];\n    }\n    if (langCode.match(/ja/)) {\n        return RS.MessageSystem.TextCodes[\"Japanese\"][idx];\n    }\n    return RS.MessageSystem.TextCodes[\"English\"][idx];\n};\n\n/**\n * 노트 태그를 읽습니다.\n * @memberof RS.MessageSystem\n * @param {Number} eventId\n * @return {Object} meta\n */\nRS.MessageSystem.getEventComments = function (eventId: number, index: number) {\n    let data = <Record<any, any>>{\n        note: \"\",\n        meta: {},\n    };\n    try {\n        // 리스트를 가져옵니다.\n        let list = $gameMap.event(eventId).list();\n\n        // 바로 이전 인덱스에 노트 태그가 있었는 지 확인합니다.\n        if (index < 0) index = 0;\n\n        // 부모 이벤트 없이 호출되는 공통 이벤트가 있는 지 확인합니다.\n        if (eventId <= 0) {\n            var commonEvent = $gameTemp.reservedCommonEvent();\n            if (commonEvent) {\n                list = commonEvent.list;\n                // 공통 이벤트는 한 번 설치된 후 클리어되므로 목록을 두 번 읽을 순 없으므로 예외 처리\n                if (!list) {\n                    return data;\n                }\n            }\n        }\n\n        let param = list[index];\n\n        // 코멘트를 읽어옵니다.\n        while (param && [108, 408].contains(param.code)) {\n            data.note += param.parameters[0] + \"\\r\\n\";\n            index--;\n            param = list[index];\n        }\n\n        if (param && param.code === 108) {\n            data.note += param.parameters[0] + \"\\r\\n\";\n\n            index--;\n            param = list[index];\n\n            while (param.code === 408) {\n                data.note += param.parameters[0] + \"\\r\\n\";\n                index--;\n                param = list[index];\n            }\n\n            if (param.code === 108) {\n                data.note += param.parameters[0] + \"\\r\\n\";\n            }\n        }\n\n        // 노트 태그를 추출합니다 (DataManager.extractMetadata의 변형입니다)\n        const re = /<([^<>:]+)(:?)([^>]*)>/g;\n        data.meta = {};\n        for (;;) {\n            const match = re.exec(data.note);\n            if (match) {\n                if (match[2] === \":\") {\n                    data.meta[match[1].trim()] = match[3];\n                } else {\n                    data.meta[match[1].trim()] = true;\n                }\n            } else {\n                break;\n            }\n        }\n    } catch (e) {\n        // 리스트를 읽지 못할 경우 try-catch 문에 의해 예외 처리가 됩니다.\n        return {\n            note: \"\",\n            meta: {},\n        };\n    }\n    return data.meta;\n};\n\n(() => {\n    \"use strict\";\n    var regData = [\"Korean\", \"English\", \"Chinese\", \"Japanese\"];\n    regData.forEach(function (e, i, a) {\n        var tcGroup = RS.MessageSystem.TextCodes[e];\n        tcGroup = tcGroup.map((e: any, i: number, a: any[]) => {\n            if (e === undefined) return;\n            var data = [];\n            var ret = \"\";\n            for (var str of e) {\n                if (/[a-zA-Z]/i) {\n                    data.push(str);\n                    continue;\n                }\n                var text = str.charCodeAt().toString(16);\n                data.push(\"\\\\u\" + \"{\" + text + \"}\");\n            }\n            ret = data.join(\"\");\n            return ret;\n        });\n        RS.MessageSystem.Reg[e][0] = undefined;\n        RS.MessageSystem.Reg[e][1] = new RegExp(\n            `(?:\\x1bC|\\x1b${tcGroup[1]})\\\\[(.+?)\\\\]`,\n            \"gi\"\n        ); // 색\n        RS.MessageSystem.Reg[e][2] = new RegExp(\n            `\\x1b${tcGroup[2]}\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 속도\n        RS.MessageSystem.Reg[e][3] = new RegExp(\n            `\\x1b${tcGroup[3]}\\\\[(.+?)\\\\]`,\n            \"gi\"\n        ); // 테두리색\n        RS.MessageSystem.Reg[e][4] = new RegExp(\n            `\\x1b${tcGroup[4]}\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 테두리크기\n        RS.MessageSystem.Reg[e][5] = new RegExp(\n            `\\x1b${tcGroup[5]}\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 들여쓰기\n        RS.MessageSystem.Reg[e][6] = new RegExp(`\\x1b${tcGroup[6]}`, \"gi\"); // 굵게!\n        RS.MessageSystem.Reg[e][7] = new RegExp(`\\x1b${tcGroup[7]}`, \"gi\"); // 이탤릭!\n        RS.MessageSystem.Reg[e][8] = new RegExp(\n            `\\x1b${tcGroup[8]}\\\\<(.+?)\\\\>`,\n            \"gi\"\n        ); // 이름\n        RS.MessageSystem.Reg[e][9] = new RegExp(\n            `\\x1b${tcGroup[9]}\\\\<(.+)\\\\>`,\n            \"gi\"\n        ); // 그레디언트\n        RS.MessageSystem.Reg[e][10] = new RegExp(\n            `(?:\\x1bP|\\x1b${tcGroup[10]})\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 파티원\n        RS.MessageSystem.Reg[e][11] = new RegExp(\n            `(?:\\x1bN|\\x1b${tcGroup[11]})\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 주인공\n        RS.MessageSystem.Reg[e][12] = new RegExp(\n            `(?:\\x1bV|\\x1b${tcGroup[12]})\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 변수\n        RS.MessageSystem.Reg[e][13] = new RegExp(\n            `(?:\\x1bI|\\x1b${tcGroup[13]})\\\\[(\\\\d+)\\\\]`,\n            \"g\"\n        ); // 아이콘\n        RS.MessageSystem.Reg[e][14] = new RegExp(\n            `(?:\\x1b{|\\x1b${tcGroup[14]})`,\n            \"gi\"\n        ); // 확대!\n        RS.MessageSystem.Reg[e][15] = new RegExp(\n            `(?:\\x1b}|\\x1b${tcGroup[15]})`,\n            \"gi\"\n        ); // 축소!\n        RS.MessageSystem.Reg[e][16] = new RegExp(\n            `(?:\\x1bG|\\x1b${tcGroup[16]})`,\n            \"gi\"\n        ); // 골드\n        RS.MessageSystem.Reg[e][17] = new RegExp(\n            `\\x1b${tcGroup[17]}\\\\[(.*?)\\\\]`,\n            \"gi\"\n        ); // 말풍선\n        RS.MessageSystem.Reg[e][18] = new RegExp(\n            `\\x1b${tcGroup[18]}\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 정렬자\n        RS.MessageSystem.Reg[e][19] = new RegExp(\n            `\\x1b${tcGroup[19]}\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 숫자\n        RS.MessageSystem.Reg[e][20] = new RegExp(\n            `\\x1b${tcGroup[20]}\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 크기\n        RS.MessageSystem.Reg[e][21] = new RegExp(`\\x1b${tcGroup[21]}`, \"gi\"); // r\n        RS.MessageSystem.Reg[e][22] = new RegExp(`\\x1b${tcGroup[22]}`, \"gi\"); // t\n        RS.MessageSystem.Reg[e][23] = new RegExp(\n            `\\x1b${tcGroup[23]}\\\\<(.+?)\\\\>`,\n            \"gi\"\n        ); // 효과음\n        RS.MessageSystem.Reg[e][24] = new RegExp(\n            `\\x1b${tcGroup[24]}\\\\<(.+?)\\\\>`,\n            \"gi\"\n        ); // 그림 표시\n        RS.MessageSystem.Reg[e][25] = new RegExp(\n            `\\x1b${tcGroup[25]}\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 그림 제거\n        RS.MessageSystem.Reg[e][26] = new RegExp(\n            `(?:\\x1b${tcGroup[26]})\\\\[(\\\\d+)\\\\]`,\n            \"g\"\n        ); // 아이템\n        RS.MessageSystem.Reg[e][27] = new RegExp(\n            `(?:\\x1b${tcGroup[27]})\\\\[(\\\\d+)\\\\]`,\n            \"g\"\n        ); // 무기구\n        RS.MessageSystem.Reg[e][28] = new RegExp(\n            `(?:\\x1b${tcGroup[28]})\\\\[(\\\\d+)\\\\]`,\n            \"g\"\n        ); // 방어구\n        RS.MessageSystem.Reg[e][29] = new RegExp(\n            `(?:\\x1b${tcGroup[29]})\\\\[(\\\\d+)\\\\]`,\n            \"g\"\n        ); // 직업\n        RS.MessageSystem.Reg[e][30] = new RegExp(\n            `(?:\\x1b${tcGroup[30]})\\\\[(\\\\d+)\\\\]`,\n            \"g\"\n        ); // 적군\n        RS.MessageSystem.Reg[e][31] = new RegExp(\n            `(?:\\x1b${tcGroup[31]})\\\\[(\\\\d+)\\\\]`,\n            \"g\"\n        ); // 상태\n        RS.MessageSystem.Reg[e][32] = new RegExp(\n            `(?:\\x1b${tcGroup[32]})\\\\[(\\\\d+)\\\\]`,\n            \"g\"\n        ); // 스킬\n        RS.MessageSystem.Reg[e][33] = new RegExp(\n            `\\x1b${tcGroup[33]}\\\\<(.*)\\\\>`,\n            \"gi\"\n        ); // 얼굴\n        RS.MessageSystem.Reg[e][34] = new RegExp(\n            `(?:\\x1b${tcGroup[34]})\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 아군\n        RS.MessageSystem.Reg[e][35] = new RegExp(\n            `(?:\\x1b${tcGroup[35]})\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 적군\n\n        RS.MessageSystem.Reg[e][36] = new RegExp(`\\x1b${tcGroup[36]}`, \"gi\"); // [.]\n        RS.MessageSystem.Reg[e][37] = new RegExp(`\\x1b${tcGroup[37]}`, \"gi\"); // [|]\n        RS.MessageSystem.Reg[e][38] = new RegExp(`\\x1b${tcGroup[38]}`, \"gi\"); // [!]\n        RS.MessageSystem.Reg[e][39] = new RegExp(`\\x1b${tcGroup[39]}`, \"gi\"); // [<]\n        RS.MessageSystem.Reg[e][40] = new RegExp(`\\x1b${tcGroup[40]}`, \"gi\"); // [>]\n        RS.MessageSystem.Reg[e][41] = new RegExp(`\\x1b${tcGroup[41]}`, \"gi\"); // [\\^]\n\n        RS.MessageSystem.Reg[e][42] = new RegExp(`\\x1b${tcGroup[42]}`, \"gi\"); // AS굵게!\n        RS.MessageSystem.Reg[e][43] = new RegExp(`\\x1b${tcGroup[43]}`, \"gi\"); // AE굵게!\n        RS.MessageSystem.Reg[e][44] = new RegExp(`\\x1b${tcGroup[44]}`, \"gi\"); // AS이탤릭!\n        RS.MessageSystem.Reg[e][45] = new RegExp(`\\x1b${tcGroup[45]}`, \"gi\"); // AE이탤릭!\n\n        RS.MessageSystem.Reg[e][46] = new RegExp(`(?:<${tcGroup[46]}>)`, \"gi\"); // LEFT\n        RS.MessageSystem.Reg[e][47] = new RegExp(`(?:<${tcGroup[47]}>)`, \"gi\"); // CENTER\n        RS.MessageSystem.Reg[e][48] = new RegExp(`(?:<${tcGroup[48]}>)`, \"gi\"); // RIGHT\n\n        RS.MessageSystem.Reg[e][49] = new RegExp(\n            `(?:<[${tcGroup[49]}]>)`,\n            \"gi\"\n        ); // B\n        RS.MessageSystem.Reg[e][50] = new RegExp(\n            `(?:<\\/[${tcGroup[50]}]>)`,\n            \"gi\"\n        ); // B\n        RS.MessageSystem.Reg[e][51] = new RegExp(\n            `(?:<[${tcGroup[51]}]>)`,\n            \"gi\"\n        ); // I\n        RS.MessageSystem.Reg[e][52] = new RegExp(\n            `(?:<\\/[${tcGroup[52]}]>)`,\n            \"gi\"\n        ); // I\n        RS.MessageSystem.Reg[e][53] = new RegExp(`\\x1b${tcGroup[53]}`, \"gi\"); // AEND : ALIGN_CLEAR\n        RS.MessageSystem.Reg[e][54] = new RegExp(\n            `\\x1b${tcGroup[54]}\\\\[(.*)\\\\]`,\n            \"gi\"\n        ); // \\배경색[색상] \\HC[색상]\n        RS.MessageSystem.Reg[e][55] = new RegExp(\n            `\\x1b${tcGroup[55]}\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // \\FD\n    });\n})();\n\nRS.MessageSystem.initSystem = function () {\n    var type = RS.MessageSystem.Params.langCode;\n    var ret = false;\n    if (type.match(/ko/)) {\n        RS.MessageSystem.Reg.Group = RS.MessageSystem.Reg.Korean;\n        RS.MessageSystem.Reg.defaultEscapeCode =\n            RS.MessageSystem.Reg.KoreanEscapeCode;\n        RS.MessageSystem.TextCodes.Main = RS.MessageSystem.TextCodes.Korean;\n        ret = true;\n    }\n    if (type.match(/zh/)) {\n        RS.MessageSystem.Reg.Group = RS.MessageSystem.Reg.Chinese;\n        RS.MessageSystem.Reg.defaultEscapeCode =\n            RS.MessageSystem.Reg.ChineseEscapeCode;\n        RS.MessageSystem.TextCodes.Main = RS.MessageSystem.TextCodes.Chinese;\n        ret = true;\n    }\n    if (type.match(/en/)) {\n        RS.MessageSystem.Reg.Group = RS.MessageSystem.Reg.English;\n        RS.MessageSystem.Reg.defaultEscapeCode =\n            RS.MessageSystem.Reg.EnglishEscapeCode;\n        RS.MessageSystem.TextCodes.Main = RS.MessageSystem.TextCodes.English;\n        ret = true;\n    }\n    if (type.match(/ja/)) {\n        RS.MessageSystem.Reg.Group = RS.MessageSystem.Reg.Japanese;\n        RS.MessageSystem.Reg.defaultEscapeCode =\n            RS.MessageSystem.Reg.JapaneseEscapeCode;\n        RS.MessageSystem.TextCodes.Main = RS.MessageSystem.TextCodes.Japanese;\n        ret = true;\n    }\n    if (ret === false) {\n        RS.MessageSystem.Reg.Group = RS.MessageSystem.Reg.English;\n        RS.MessageSystem.Reg.defaultEscapeCode =\n            RS.MessageSystem.Reg.EnglishEscapeCode;\n        RS.MessageSystem.TextCodes.Main = RS.MessageSystem.TextCodes.English;\n    }\n};\n\n//=============================================================================\n// Color\n//=============================================================================\n\ninterface IColor {\n    getColor(c: number): string;\n    baseColor: string;\n    getBaseColor(): string;\n    getUserCustomColor(str: string): string;\n    gmColor(str: string): string;\n}\n\nexport const Color = <IColor>{};\n\nColor.getColor = function (n: number) {\n    var r = n & 255;\n    var g = (n >> 8) & 255;\n    var b = (n >> 16) & 255;\n    var result = `rgba(${r},${g},${b},1)`;\n    return result;\n};\n\nColor.baseColor = Color.getColor(16777215);\n\nColor.getBaseColor = function () {\n    return Color.baseColor;\n};\n\nColor.getUserCustomColor = function (str) {\n    \"use strict\";\n\n    var obj: any[] = RS.MessageSystem.Params.exTextColors;\n    var ret = str;\n\n    if (!(typeof obj[0] === \"object\")) return ret;\n    if (!obj[0].hasOwnProperty(\"Color Name\")) return ret;\n\n    obj.forEach((e: any, i: number, arr: any[]) => {\n        if (e[\"Color Name\"] === str) {\n            var r = parseInt(e[\"Red\"]) || 0;\n            var g = parseInt(e[\"Green\"]) || 0;\n            var b = parseInt(e[\"Blue\"]) || 0;\n            var a = parseFloat(e[\"Alpha\"]) || 1.0;\n\n            ret = `rgba(${r},${g},${b},${a})`;\n        }\n    });\n\n    return ret;\n};\n\nconst KOREAN_COLORS: Record<string, string> = {\n    청록: \"rgba(0,255,255,1)\",\n    청록색: \"rgba(0,255,255,1)\",\n    c_aqua: \"rgba(0,255,255,1)\",\n    검은색: \"rgba(0,0,0,1)\",\n    검정: \"rgba(0,0,0,1)\",\n    c_black: \"rgba(0,0,0,1)\",\n    파란색: \"rgba(0,0,255,1)\",\n    파랑: \"rgba(0,0,255,1)\",\n    c_blue: \"rgba(0,0,255,1)\",\n    짙은회색: \"rgba(64,64,64,1)\",\n    c_dkgray: \"rgba(64,64,64,1)\",\n    자홍색: \"rgba(255,0,255,1)\",\n    자홍: \"rgba(255,0,255,1)\",\n    c_fuchsia: \"rgba(255,0,255,1)\",\n    회색: \"rgba(128,128,128,1)\",\n    c_gray: \"rgba(128,128,128,1)\",\n    녹색: \"rgba(0,128,0,1)\",\n    c_green: \"rgba(0,128,0,1)\",\n    밝은녹색: \"rgba(0,255,0,1)\",\n    라임: \"rgba(0,255,0,1)\",\n    c_lime: \"rgba(0,255,0,1)\",\n    밝은회색: \"rgba(192,192,192,1)\",\n    c_ltgray: \"rgba(192,192,192,1)\",\n    밤색: \"rgba(128,0,0,1)\",\n    마룬: \"rgba(128,0,0,1)\",\n    c_maroon: \"rgba(128,0,0,1)\",\n    감청색: \"rgba(0,0,128,1)\",\n    네이비: \"rgba(0,0,128,1)\",\n    c_navy: \"rgba(0,0,128,1)\",\n    황록색: \"rgba(128,128,0,1)\",\n    올리브: \"rgba(128,128,0,1)\",\n    c_olive: \"rgba(128,128,0,1)\",\n    주황색: \"rgba(255,160,64,1)\",\n    주황: \"rgba(255,160,64,1)\",\n    오렌지: \"rgba(255,160,64,1)\",\n    c_orange: \"rgba(255,160,64,1)\",\n    보라색: \"rgba(128,0,128,1)\",\n    보라: \"rgba(128,0,128,1)\",\n    c_purple: \"rgba(128,0,128,1)\",\n    빨간색: \"rgba(255,0,0,1)\",\n    빨강: \"rgba(255,0,0,1)\",\n    c_red: \"rgba(255,0,0,1)\",\n    은색: \"rgba(192,192,192,1)\",\n    은: \"rgba(192,192,192,1)\",\n    c_silver: \"rgba(192,192,192,1)\",\n    민트색: \"rgba(0,128,128,1)\",\n    c_teal: \"rgba(0,128,128,1)\",\n    흰색: \"rgba(255,255,255,1)\",\n    흰: \"rgba(255,255,255,1)\",\n    c_white: \"rgba(255,255,255,1)\",\n    노란색: \"rgba(255,255,0,1)\",\n    노랑: \"rgba(255,255,0,1)\",\n    c_yellow: \"rgba(255,255,0,1)\",\n};\n\nconst CHINESE_COLOR: Record<string, string> = {\n    水色: \"rgba(0,255,255,1)\",\n    c_aqua: \"rgba(0,255,255,1)\",\n    黑色: \"rgba(0,0,0,1)\",\n    c_black: \"rgba(0,0,0,1)\",\n    蓝色: \"rgba(0,0,255,1)\",\n    c_blue: \"rgba(0,0,255,1)\",\n    深灰色: \"rgba(64,64,64,1)\",\n    c_dkgray: \"rgba(64,64,64,1)\",\n    紫红色: \"rgba(255,0,255,1)\",\n    c_fuchsia: \"rgba(255,0,255,1)\",\n    灰色: \"rgba(128,128,128,1)\",\n    c_gray: \"rgba(128,128,128,1)\",\n    绿色: \"rgba(0,128,0,1)\",\n    c_green: \"rgba(0,128,0,1)\",\n    浅绿色: \"rgba(0,255,0,1)\",\n    c_lime: \"rgba(0,255,0,1)\",\n    浅灰色: \"rgba(192,192,192,1)\",\n    c_ltgray: \"rgba(192,192,192,1)\",\n    栗色: \"rgba(128,0,0,1)\",\n    c_maroon: \"rgba(128,0,0,1)\",\n    绀青色: \"rgba(0,0,128,1)\",\n    c_navy: \"rgba(0,0,128,1)\",\n    黄绿色: \"rgba(128,128,0,1)\",\n    c_olive: \"rgba(128,128,0,1)\",\n    橙黄色: \"rgba(255,160,64,1)\",\n    c_orange: \"rgba(255,160,64,1)\",\n    紫色: \"rgba(128,0,128,1)\",\n    c_purple: \"rgba(128,0,128,1)\",\n    红色: \"rgba(255,0,0,1)\",\n    c_red: \"rgba(255,0,0,1)\",\n    银白色: \"rgba(192,192,192,1)\",\n    c_silver: \"rgba(192,192,192,1)\",\n    水鸭色: \"rgba(0,128,128,1)\",\n    c_teal: \"rgba(0,128,128,1)\",\n    白色: \"rgba(255,255,255,1)\",\n    c_white: \"rgba(255,255,255,1)\",\n    黄色: \"rgba(255,255,0,1)\",\n    c_yellow: \"rgba(255,255,0,1)\",\n};\n\nconst ENGLISH_COLOR: Record<string, string> = {\n    AQUA: \"rgba(0,255,255,1)\",\n    c_aqua: \"rgba(0,255,255,1)\",\n    BLACK: \"rgba(0,0,0,1)\",\n    c_black: \"rgba(0,0,0,1)\",\n    BLUE: \"rgba(0,0,255,1)\",\n    c_blue: \"rgba(0,0,255,1)\",\n    DKGRAY: \"rgba(64,64,64,1)\",\n    c_dkgray: \"rgba(64,64,64,1)\",\n    FUCHSIA: \"rgba(255,0,255,1)\",\n    c_fuchsia: \"rgba(255,0,255,1)\",\n    GRAY: \"rgba(128,128,128,1)\",\n    c_gray: \"rgba(128,128,128,1)\",\n    GREEN: \"rgba(0,128,0,1)\",\n    c_green: \"rgba(0,128,0,1)\",\n    LIME: \"rgba(0,255,0,1)\",\n    c_lime: \"rgba(0,255,0,1)\",\n    LTGRAY: \"rgba(192,192,192,1)\",\n    c_ltgray: \"rgba(192,192,192,1)\",\n    MAROON: \"rgba(128,0,0,1)\",\n    c_maroon: \"rgba(128,0,0,1)\",\n    NAVY: \"rgba(0,0,128,1)\",\n    c_navy: \"rgba(0,0,128,1)\",\n    OLIVE: \"rgba(128,128,0,1)\",\n    c_olive: \"rgba(128,128,0,1)\",\n    ORANGE: \"rgba(255,160,64,1)\",\n    c_orange: \"rgba(255,160,64,1)\",\n    PURPLE: \"rgba(128,0,128,1)\",\n    c_purple: \"rgba(128,0,128,1)\",\n    RED: \"rgba(255,0,0,1)\",\n    c_red: \"rgba(255,0,0,1)\",\n    SILVER: \"rgba(192,192,192,1)\",\n    c_silver: \"rgba(192,192,192,1)\",\n    TEAL: \"rgba(0,128,128,1)\",\n    c_teal: \"rgba(0,128,128,1)\",\n    WHITE: \"rgba(255,255,255,1)\",\n    c_white: \"rgba(255,255,255,1)\",\n    YELLOW: \"rgba(255,255,0,1)\",\n    c_yellow: \"rgba(255,255,0,1)\",\n};\n\nconst JAPANESE_COLOR: Record<string, string> = {\n    水色: \"rgba(0,255,255,1)\",\n    アクア色: \"rgba(0,255,255,1)\",\n    c_aqua: \"rgba(0,255,255,1)\",\n    黑色: \"rgba(0,0,0,1)\",\n    c_black: \"rgba(0,0,0,1)\",\n    靑色: \"rgba(0,0,255,1)\",\n    c_blue: \"rgba(0,0,255,1)\",\n    ふか灰色: \"rgba(64,64,64,1)\",\n    c_dkgray: \"rgba(64,64,64,1)\",\n    紫紅色: \"rgba(255,0,255,1)\",\n    c_fuchsia: \"rgba(255,0,255,1)\",\n    灰色: \"rgba(128,128,128,1)\",\n    c_gray: \"rgba(128,128,128,1)\",\n    綠色: \"rgba(0,128,0,1)\",\n    c_green: \"rgba(0,128,0,1)\",\n    黃綠: \"rgba(0,255,0,1)\",\n    c_lime: \"rgba(0,255,0,1)\",\n    鼠色: \"rgba(192,192,192,1)\",\n    c_ltgray: \"rgba(192,192,192,1)\",\n    \"―色\": \"rgba(128,0,0,1)\",\n    c_maroon: \"rgba(128,0,0,1)\",\n    群青色: \"rgba(0,0,128,1)\",\n    ネイビー: \"rgba(0,0,128,1)\",\n    c_navy: \"rgba(0,0,128,1)\",\n    黃綠色: \"rgba(128,128,0,1)\",\n    オリーブ色: \"rgba(128,128,0,1)\",\n    c_olive: \"rgba(128,128,0,1)\",\n    橙色: \"rgba(255,160,64,1)\",\n    オレンジ色: \"rgba(255,160,64,1)\",\n    c_orange: \"rgba(255,160,64,1)\",\n    紫色: \"rgba(128,0,128,1)\",\n    c_purple: \"rgba(128,0,128,1)\",\n    赤色: \"rgba(255,0,0,1)\",\n    レッド: \"rgba(255,0,0,1)\",\n    c_red: \"rgba(255,0,0,1)\",\n    銀色: \"rgba(192,192,192,1)\",\n    c_silver: \"rgba(192,192,192,1)\",\n    ミント色: \"rgba(0,128,128,1)\",\n    薄荷色: \"rgba(0,128,128,1)\",\n    c_teal: \"rgba(0,128,128,1)\",\n    白色: \"rgba(255,255,255,1)\",\n    c_white: \"rgba(255,255,255,1)\",\n    黃色: \"rgba(255,255,0,1)\",\n    c_yellow: \"rgba(255,255,0,1)\",\n};\n\nRS.MessageSystem.getKoreanColor = function (str: string) {\n    let color = KOREAN_COLORS[str];\n\n    if (color) {\n        return color;\n    }\n\n    if ([\"기본\", \"기본색\", \"c_normal\"].contains(str)) {\n        return Color.getBaseColor();\n    }\n\n    return Color.getUserCustomColor(str);\n};\n\nRS.MessageSystem.getChineseColor = function (str: string) {\n    let color = CHINESE_COLOR[str];\n\n    if (color) {\n        return color;\n    }\n\n    if ([\"通常\", \"c_normal\"].contains(str)) {\n        return Color.getBaseColor();\n    }\n\n    return Color.getUserCustomColor(str);\n};\n\nRS.MessageSystem.getEnglishColor = function (str: string) {\n    let color = ENGLISH_COLOR[str];\n\n    if (color) {\n        return color;\n    }\n\n    if (\"c_normal\" === str) {\n        return Color.getBaseColor();\n    }\n\n    return Color.getUserCustomColor(str);\n};\n\nRS.MessageSystem.getJapaneseColor = function (str: string) {\n    let color = JAPANESE_COLOR[str];\n\n    if (color) {\n        return color;\n    }\n\n    if ([\"基本色\", \"c_normal\"].contains(str)) {\n        return Color.getBaseColor();\n    }\n\n    return Color.getUserCustomColor(str);\n};\n\nRS.MessageSystem.getBrowser = function () {\n    /* Refer to https://stackoverflow.com/a/16938481 */\n    var ua = navigator.userAgent,\n        tem,\n        M =\n            ua.match(\n                /(opera|chrome|edge|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i\n            ) || [];\n\n    if (/trident/i.test(M[1])) {\n        tem = /\\brv[ :]+(\\d+)/g.exec(ua) || [];\n\n        return {\n            name: \"IE\",\n            version: tem[1] || \"\",\n        };\n    }\n\n    if (M[1] === \"Chrome\") {\n        tem = ua.match(/\\bOPR\\/(\\d+)/);\n        if (tem != null) {\n            return {\n                name: \"Opera\",\n                version: tem[1],\n            };\n        }\n\n        tem = ua.match(/\\bEdge\\/(\\d+)/);\n        if (tem != null) {\n            return {\n                name: \"Edge\",\n                version: tem[1],\n            };\n        }\n    }\n\n    M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, \"-?\"];\n\n    if ((tem = ua.match(/version\\/(\\d+)/i)) != null) {\n        M.splice(1, 1, tem[1]);\n    }\n\n    return {\n        name: M[0],\n        version: M[1],\n    };\n};\n\nColor.gmColor = function (str: string) {\n    const type = <string>RS.MessageSystem.Params.langCode;\n    if (type.match(/ko/)) {\n        return RS.MessageSystem.getKoreanColor(str);\n    }\n    if (type.match(/zh/)) {\n        return RS.MessageSystem.getChineseColor(str);\n    }\n    if (type.match(/en/)) {\n        return RS.MessageSystem.getEnglishColor(str);\n    }\n    if (type.match(/ja/)) {\n        return RS.MessageSystem.getJapaneseColor(str);\n    }\n    return RS.MessageSystem.getEnglishColor(str);\n};\n\nwindow.RS = RS;\n","/// <reference types=\"../types/my-types\" />\n/// <reference types=\"../types/lunalite-pixi-mz\" />\nimport { NameWindowPositionComponent } from \"./NameWindowPositionComponent\";\nimport ComponentExecutor from \"./ComponentExecutor\";\nimport { processBitmap } from \"./BitmapHandler\";\nimport { processMain } from \"./MainHandler\";\n\nconst executor = ComponentExecutor.getInstance();\n\nexecutor\n    /**\n     * ? Bitmap\n     * @description 텍스트에 그라데이션을 채우는 기능을 추가합니다.\n     */\n    .add(\"bitmap\", processBitmap())\n    /**\n     * ? Main\n     * @description\n     * 메인 엔트리 포인트입니다.\n     */\n    .add(\"main\", processMain())\n    .ready(\"bitmap\")\n    .ready(\"main\")\n    .executeAll();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(607);\n"],"names":["BalloonWindowTransformComponent","BaseComponent","_bWidth","_bHeight","onReady","props","super","this","width","height","calcBalloonRect","text","save","rect","textSizeEx","padding","standardPadding","Math","max","fittingHeight","restore","messageWindow","_isUsedTextWidthEx","updatePlacement","isActiveInBalloon","$gameMessage","getBalloon","setBalloonRect","data","faceName","faceDirection","RS","MessageSystem","Params","ox","windowOffset","x","oy","y","dx","dy","drawMessageFace","setBalloonPlacement","Graphics","bw","boxWidth","bh","boxHeight","console","log","JSON","stringify","mx","tx","canvasToLocalX","my","tileHeight","scaleY","ty","_height","ny","nameWindowY","updateSubBalloonElements","_pauseSignSprite","move","scale","_nameWindow","getNameWindowY","updateBalloonPosition","owner","$gameMap","getMsgOwner","warn","Error","screenX","screenY","getBalloonPatternHeight","updateBalloonPositionInBattle","$gameParty","inBattle","$gameSystem","isSideView","hasOwnProperty","parent","scene","SceneManager","_scene","Scene_Battle","type","_spriteset","_actorSprites","_enemySprites","tempBattlers","target","id","_actor","isAlive","_enemy","padY","_mainSprite","bitmap","_width","transform","updateTransform","calcBalloonRectHeight","tempFontSize","contents","fontSize","textState","createTextState","convertEscapeCharacters","calcTextHeight","setTextSize","Component","constructor","_messageWindow","error","_nameBoxWindow","_choiceWindow","_choiceListWindow","windowWidth","windowHeight","updatePadding","textPadding","itemPadding","newLineX","numLines","drawTextEx","lineHeight","value","canvasToLocalY","alias_Bitmap_initialize","Bitmap","prototype","initialize","call","fontBold","fontGradient","highlightTextColor","setGradient","color1","color2","color3","context","_context","tWidth","measureTextWidth","gradient","createLinearGradient","addColorStop","_baseTexture","update","setGradientStyle","grd","style","gradientStyle","contains","ws","hs","createRadialGradient","_makeFontNameText","fontItalic","fontFace","_drawTextBody","maxWidth","imageSmoothingEnabled","fontSmoothingEnabled","gradientColor1","gradientColor2","gradientColor3","fillStyle","textColor","fillText","EventEmitter","init","on","mounted","onDestroy","ready","emit","destroy","execute","ComponentExecutor","static","INSTANCE","_components","add","name","func","startChar","endChar","len","i","String","fromCharCode","floor","random","callbackFunction","active","wrap","get","deactive","executeAll","key","currentCallback","Function","e","DependencyInjector","inject","_isDirty","undefined","COMPONENTS","NameWindowPositionComponent","filter","getComponentClass","pop","forEach","component","_listeners","eventName","push","args","alias_Game_Message_clear","Game_Message","clear","_waitTime","_gradientText","_balloon","_align","_balloonPatternHeight","_lastAlign","setWaitTime","time","setGradientText","getWaitTime","getGradientText","getMaxLine","_maxLine","setMaxLine","maxLine","numVisibleRows","setBalloon","n","setAlign","getAlign","last","shift","clearAlignLast","setBalloonPatternHeight","Sprite_Battler","MessageDesc","outlineColor","outlineWidth","textSpeed","_isSaved","Window_Base","obtainEscapeCode","arr","Reg","defaultEscapeCode","exec","slice","index","length","toUpperCase","obtainNameColor","Color","gmColor","ColorManager","changeTextColor","color","c","parseInt","alias_Window_Base_processEscapeCharacter","processEscapeCharacter","code","tcGroup","TextCodes","ENUM","textCode","Main","obtainEscapeParam","COLOR","ICON","processDrawIcon","INCREASE","makeFontBigger","DECREASE","makeFontSmaller","alias_loadWindowskin","loadWindowskin","windowskin","addLoadListener","baseColor","getFontFace","langCode","navigator","language","fonts","default","resetFontSettings","processAllText","outputWidth","minFontSize","defaultOutlineWidth","defaultOutlineColor","resetTextColor","maxFontSize","_messageDesc","alias_Window_Base_convertEscapeCharacters","regGroup","Group","replace","VAR","$gameVariables","toString","bind","PLAYER","actorName","PARTY_MEMBER","partyMemberName","NUM","toComma","GOLD","TextManager","currencyUnit","CLASSES","$dataClasses","ITEM","$dataItems","WEAPON","$dataWeapons","ARMOR","$dataArmors","ENEMY","$dataEnemies","STATE","$dataStates","SKILL","$dataSkills","ALIGN_LEFT","ALIGN","ALIGN_CENTER","ALIGN_RIGHT","Number","ALIGN_CLEAR","source","processAlign","_textState","rtl","setAlignLeft","setAlignCenter","setAlignRight","alias_Window_Base_processNewLine_align","processNewLine","startX","contentsWidth","Window_Message","obtainTextSpeed","obtainGradientText","obtainSoundName","alias_Window_Message_processEscapeCharacter","TEXT_SPEED","TEXT_SIZE","OUTLINE_COLOR","setStrokeColor","INDENT","setTextIndent","OUTLINE_WIDTH","setStrokeWidth","BOLD","setTextBold","BOLD_START","BOLD_END","ITALIC","setTextItalic","ITALIC_START","ITALIC_END","GRADIENT","setTextGradient","HIGHLIGHT_TEXT_COLOR","setHighlightTextColor","TAB","textWidth","TabSize","CARRIAGE_RETURN","startWait","PLAY_SE","playSe","SHOW_PICTURE","showPicture","HIDE_PICTURE","erasePicture","FACE","split","clamp","seName","trim","pan","pitch","volume","ConfigManager","seVolume","AudioManager","param","raw","map","params","ret","a","$gameScreen","apply","picId","resetGradient","alias_Window_Message_createTextState","px","py","Object","assign","processWordWrap","w","isValid","needsNewPage","startPause","alias_Window_Message_processNewLinePW","_backBuffer","isDirty","processCharacter","charCodeAt","flushTextState","processControlCharacter","buffer","alias_Window_Message_processCharacter","preLen","substr","processNormalCharacterProxy","isNormalMessageWindow","isRealDrawingMode","drawing","isParagraphMinifier","ImageManager","faceWidth","contentW","contentH","fillAll","alias_Window_Message_flushTextState","isDrawing","isSlowTextMode","_showFast","isEndOfText","isDrawingTextBackground","backBuffer","min","innerWidth","innerHeight","flushTextBackgbround","updateBigFaceOpacity","_faceContents","faceOpacity","opacity","fadeInOutFaceContents","isOpening","isClosing","openness","alias_Window_Message_checkToNotClose","checkToNotClose","getComponent","getDefaultSizeOption","isMobileDevice","Utils","maxSW","window","outerWidth","screen","availWidth","maxSH","outerHeight","availHeight","maxHeight","maxY","maxX","goldWindow","_goldWindow","isNormalWindowMode","isValidSceneIsMap","Scene_Map","_positionType","positionType","desiredX","desiredY","minGoldY","updateDefaultOpacity","updateContentsOpacity","isBigFace","backIndex","faceSide","setFaceZIndex","isAlreadyDrawnFace","zIndex","isFaceSide","setChildIndex","clearFaceBitmap","alias_Window_Message_convertEscapeCharacters","BOLD_START_CV","BOLD_END_CV","ITALIC_START_CV","ITALIC_END_CV","NAME","retName","endsWith","namePositionTypeAtX","setName","BALLOON","arguments","abs","FRIENDLY_TROOPS","ENEMY_TROOPS","FACE_DIRECTION","setHeight","createContents","alias_Window_Message_initialize","$gameTemp","setMSHeightFunc","createFaceContents","removeEventHandler","onLoadWindowskin","alias_Window_Message_newPage","newPage","openBalloon","sign","setupOwner","resizeMessageSystem","startMessage","allText","tempText","updateBackground","open","start","getDefaultWindowRect","Scene_Message","messageWindowRect","isResetOwner","isBattleScene","windowRect","setMsgOwner","$gamePlayer","off","isReady","getPixel","loadSystem","_isDirtyWindowskin","setTimeout","_Window_Message_updateLoading","updateLoading","contentsHeight","Sprite","addChildAt","removeFaceContents","removeChild","faceIndex","faceStartX","textStartX","faceStartOriginX","isValidBigFace","updateNameWindow","standardBackOpacity","backOpacity","translucentOpacity","defaultOpacity","contentsOpacity","getSpriteActors","members","getSpriteEnemies","$gameTroop","getMsgEvent","test","RegExp","$1","event","alias_Window_Message_shouldBreakHere","shouldBreakHere","isBreakCharacter","isPlayTextSound","interval","textSoundInterval","_textSoundInterval","playStaticSe","popParameter","Game_Interpreter","processMessageParams","eventId","meta","getEventComments","windowskinForNameWindow","faceOX","faceOY","Boolean","isValidMultiLine","codes","prevCode","lineCount","currentCommand","_list","_index","choiceWindowStyle","command101","isBusy","setMsgEvent","character","_eventId","setFaceImage","setBackground","setPositionType","setSpeakerName","isMultiLine","multiLineAddMessage","nextEventCode","parameters","setupChoices","setupNumInput","setupItemChoice","setWaitMode","initLineHeight","_texts","addLineHeight","_lineHeight","Window_NameBox","isRTL","Game_Temp","_callMSHeightFunc","alias_Game_Map_initialize","Game_Map","_msgOwner","_msgEvent","o","ev","alias_Scene_Message_associateWindows__enrtyPoint","associateWindows","injectMessageWindow","ww","wh","calcWindowHeight","wx","Rectangle","alias_Scene_Message_terminate","terminate","ejectMessageWindow","initSystem","DEBUG","showDevTools","nw","Window","moveTo","setOpacity","isNaN","updatePositionX","position","nx","nameWindowX","newX","updatePositionY","ballonOwnerType","topY","isOpen","pluginParams","$plugins","description","pluginName","MessageParams","jsonParse","str","parse","k","v","keys","lastUsed","Default","Korean","Chinese","English","Japanese","FACE_START_ORIGIN_X","nameWindowWidth","NAME_WINDOW_WIDTH","nameWindowRows","NAME_WINDOW_ROWS","FONT_SIZE","STD_PADDING","isValidShakingChoice","nameWindowStdPadding","WIDTH","HEIGHT","isTempSpriteContainerVisibility","Point","customFont","customFontName","customFontSrc","defaultChoicePostion","exTextColors","pathTextSound","textSoundEval1","textSoundEval2","textSoundPoolSize","preloadWindowskins","isNwjs","isOptionValid","systemFonts","settings","languageCode","fontName","alias_Game_Temp_initialize","eval","KoreanEscapeCode","ChineseEscapeCode","EnglishEscapeCode","JapaneseEscapeCode","rowData","retData","concat","WAIT_SEC_15","WAIT_SEC_60","START_PAUSE","LINE_SHOW_FAST_LT","LINE_SHOW_FAST_GT","PAUSE_SKIP","getTextCode","idx","match","note","list","commonEvent","reservedCommonEvent","re","join","getColor","obj","r","g","b","parseFloat","KOREAN_COLORS","c_aqua","c_black","c_blue","c_dkgray","c_fuchsia","c_gray","c_green","c_lime","c_ltgray","c_maroon","c_navy","c_olive","c_orange","c_purple","c_red","c_silver","c_teal","c_white","c_yellow","CHINESE_COLOR","ENGLISH_COLOR","AQUA","BLACK","BLUE","DKGRAY","FUCHSIA","GRAY","GREEN","LIME","LTGRAY","MAROON","NAVY","OLIVE","ORANGE","PURPLE","RED","SILVER","TEAL","WHITE","YELLOW","JAPANESE_COLOR","getKoreanColor","getBaseColor","getUserCustomColor","getChineseColor","getEnglishColor","getJapaneseColor","getBrowser","tem","ua","userAgent","M","version","appName","appVersion","splice","getInstance","processBitmap","processMain","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","__webpack_exports__"],"sourceRoot":""}