{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/BaseComponent.ts","webpack:///./src/index.ts","webpack:///./src/RS.ts","webpack:///./src/DependencyInjector.ts","webpack:///./src/BalloonWindowTransformComponent.ts","webpack:///./src/Component.ts","webpack:///./src/EventEmitter.ts","webpack:///./src/NameWindowPositionComponent.ts","webpack:///./src/ComponentExecutor.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","BaseComponent","Component_1","Component","props","super","this","_messageWindow","messageWindow","console","error","contents","_nameBoxWindow","_choiceListWindow","windowWidth","windowHeight","save","restore","updatePadding","padding","itemPadding","newLineX","numLines","fittingHeight","text","textSizeEx","width","lineHeight","drawMessageFace","x","y","height","Imported","RS_MessageSystem","RS_1","DependencyInjector_1","BalloonWindowTransformComponent_1","NameWindowPositionComponent_1","ComponentExecutor_1","alias_Bitmap_initialize","Bitmap","initialize","fontBold","fontGradient","highlightTextColor","setGradient","color1","color2","color3","tx","ty","context","_context","tWidth","measureTextWidth","gradient","createLinearGradient","addColorStop","_baseTexture","update","setGradientStyle","grd","RS","MessageSystem","Params","style","gradientStyle","contains","ws","hs","createRadialGradient","_makeFontNameText","fontItalic","fontSize","fontFace","_drawTextBody","maxWidth","imageSmoothingEnabled","fontSmoothingEnabled","gradientColor1","gradientColor2","gradientColor3","fillStyle","textColor","fillText","alias_Game_Message_clear","Game_Message","clear","_waitTime","_gradientText","_balloon","_align","_balloonPatternHeight","_lastAlign","setWaitTime","time","setGradientText","getWaitTime","getGradientText","getMaxLine","_maxLine","setMaxLine","maxLine","numVisibleRows","setBalloon","getBalloon","setAlign","push","getAlign","last","shift","undefined","clearAlignLast","setBalloonPatternHeight","getBalloonPatternHeight","Sprite_Battler","screenX","screenY","MessageDesc","outlineColor","outlineWidth","textSpeed","_isSaved","$gameMessage","Window_Base","obtainEscapeCode","textState","arr","Reg","defaultEscapeCode","exec","slice","index","length","toUpperCase","obtainNameColor","Color","gmColor","ColorManager","changeTextColor","color","parseInt","_isUsedTextWidthEx","alias_Window_Base_processEscapeCharacter","processEscapeCharacter","code","tcGroup","TextCodes","ENUM","textCode","Main","obtainEscapeParam","COLOR","ICON","processDrawIcon","INCREASE","makeFontBigger","DECREASE","makeFontSmaller","alias_loadWindowskin","loadWindowskin","windowskin","addLoadListener","baseColor","getFontFace","langCode","navigator","language","fonts","default","drawTextEx","resetFontSettings","createTextState","processAllText","outputWidth","drawing","processCharacter","flushTextState","minFontSize","defaultOutlineWidth","defaultOutlineColor","resetTextColor","maxFontSize","_messageDesc","alias_Window_Base_convertEscapeCharacters","convertEscapeCharacters","regGroup","Group","replace","VAR","args","$gameVariables","toString","PLAYER","actorName","PARTY_MEMBER","partyMemberName","NUM","toComma","GOLD","TextManager","currencyUnit","CLASSES","$dataClasses","ITEM","$dataItems","WEAPON","$dataWeapons","ARMOR","$dataArmors","ENEMY","$dataEnemies","STATE","$dataStates","SKILL","$dataSkills","ALIGN_LEFT","ALIGN","ALIGN_CENTER","ALIGN_RIGHT","Number","ALIGN_CLEAR","source","textPadding","processAlign","_textState","rtl","setAlignLeft","setAlignCenter","setAlignRight","alias_Window_Base_processNewLine_align","processNewLine","startX","contentsWidth","Window_Message","obtainTextSpeed","obtainGradientText","String","obtainSoundName","alias_Window_Message_processEscapeCharacter","TEXT_SPEED","TEXT_SIZE","setTextSize","OUTLINE_COLOR","setStrokeColor","INDENT","setTextIndent","OUTLINE_WIDTH","setStrokeWidth","BOLD","setTextBold","BOLD_START","BOLD_END","ITALIC","setTextItalic","ITALIC_START","ITALIC_END","GRADIENT","setTextGradient","HIGHLIGHT_TEXT_COLOR","setHighlightTextColor","TAB","textWidth","TabSize","CARRIAGE_RETURN","startWait","PLAY_SE","playSe","SHOW_PICTURE","showPicture","HIDE_PICTURE","erasePicture","FACE","split","clamp","seName","data","trim","pan","pitch","volume","ConfigManager","seVolume","AudioManager","param","raw","map","e","params","ret","forEach","a","$gameScreen","apply","picId","_pauseSignSprite","move","_width","_height","scale","resetGradient","alias_Window_Message_createTextState","px","py","assign","processWordWrap","w","isValid","Math","floor","needsNewPage","startPause","alias_Window_Message_processNewLinePW","charCodeAt","processControlCharacter","buffer","alias_Window_Message_processCharacter","isDirty","preLen","substr","processNormalCharacterProxy","isParagraphMinifier","faceName","ImageManager","faceWidth","faceDirection","contentW","contentH","_backBuffer","fillAll","alias_Window_Message_flushTextState","_showFast","isEndOfText","bitmap","h","blt","updateBigFaceOpacity","_faceContents","faceOpacity","opacity","fadeInOutFaceContents","isOpening","isClosing","openness","alias_Window_Message_checkToNotClose","checkToNotClose","updatePlacement","goldWindow","_goldWindow","_positionType","positionType","Graphics","boxWidth","windowOffset","boxHeight","SceneManager","_scene","Scene_Map","DependencyInjector","getComponent","updateBalloonPosition","minGoldY","updateDefaultOpacity","updateContentsOpacity","isBigFace","backIndex","faceSide","setFaceZIndex","alias_Window_Message_convertEscapeCharacters","BOLD_START_CV","BOLD_END_CV","ITALIC_START_CV","ITALIC_END_CV","NAME","retName","endsWith","namePositionTypeAtX","_nameWindow","drawName","BALLOON","arguments","$gameParty","inBattle","abs","FRIENDLY_TROOPS","ENEMY_TROOPS","FACE_DIRECTION","setHeight","createContents","alias_Window_Message_initialize","rect","$gameTemp","setMSHeightFunc","createFaceContents","on","removeEventHandler","onLoadWindowskin","COMPONENTS","BalloonWindowTransformComponent","NameWindowPositionComponent","inject","alias_Window_Message_startMessage","startMessage","ready","off","isReady","getPixel","loadSystem","_isDirtyWindowskin","setTimeout","_Window_Message_updateLoading","updateLoading","contentsHeight","Sprite","addChildAt","removeFaceContents","removeChild","faceIndex","faceStartX","textStartX","faceStartOriginX","isValidBigFace","updateNameWindow","standardBackOpacity","backOpacity","translucentOpacity","defaultOpacity","contentsOpacity","getSpriteActors","sign","members","max","type","id","getSpriteEnemies","$gameTroop","setupOwner","$gameMap","setMsgOwner","$gamePlayer","getMsgEvent","Scene_Battle","test","RegExp","$1","event","alias_Window_Message_shouldBreakHere","shouldBreakHere","isBreakCharacter","isPlayTextSound","interval","textSoundInterval","_textSoundInterval","playStaticSe","popParameter","Game_Interpreter","processMessageParams","eventId","meta","getEventComments","windowskinForNameWindow","faceOX","faceOY","Boolean","isValidMultiLine","codes","prevCode","lineCount","currentCommand","_list","_index","choiceWindowStyle","multiLineAddMessage","initLineHeight","_texts","nextEventCode","add","parameters","addLineHeight","_lineHeight","isMultiLine","Window_NameBox","isRTL","Game_Temp","func","_callMSHeightFunc","alias_Game_Map_initialize","Game_Map","_msgOwner","_msgEvent","getMsgOwner","tileHeight","setMsgEvent","ev","initSystem","ComponentExecutor","getInstance","log","active","executeAll","pluginParams","$plugins","filter","description","pluginName","MessageParams","jsonParse","str","JSON","parse","k","v","keys","lastUsed","pop","Default","Korean","Chinese","English","Japanese","FACE_START_ORIGIN_X","nameWindowWidth","NAME_WINDOW_WIDTH","nameWindowRows","NAME_WINDOW_ROWS","FONT_SIZE","STD_PADDING","isValidShakingChoice","nameWindowX","nameWindowY","nameWindowStdPadding","WIDTH","HEIGHT","systemFonts","settings","languageCode","fontName","isTempSpriteContainerVisibility","Point","customFont","customFontName","customFontSrc","defaultChoicePostion","exTextColors","pathTextSound","textSoundEval1","textSoundEval2","textSoundPoolSize","preloadWindowskins","alias_Game_Temp_initialize","eval","KoreanEscapeCode","ChineseEscapeCode","EnglishEscapeCode","JapaneseEscapeCode","rowData","retData","concat","WAIT_SEC_15","WAIT_SEC_60","START_PAUSE","LINE_SHOW_FAST_LT","LINE_SHOW_FAST_GT","PAUSE_SKIP","getTextCode","idx","match","note","list","commonEvent","reservedCommonEvent","re","join","getColor","getBaseColor","getUserCustomColor","obj","g","b","parseFloat","KOREAN_COLORS","청록","청록색","c_aqua","검은색","검정","c_black","파란색","파랑","c_blue","짙은회색","c_dkgray","자홍색","자홍","c_fuchsia","회색","c_gray","녹색","c_green","밝은녹색","라임","c_lime","밝은회색","c_ltgray","밤색","마룬","c_maroon","감청색","네이비","c_navy","황록색","올리브","c_olive","주황색","주황","오렌지","c_orange","보라색","보라","c_purple","빨간색","빨강","c_red","은색","은","c_silver","민트색","c_teal","흰색","흰","c_white","노란색","노랑","c_yellow","CHINESE_COLOR","水色","黑色","蓝色","深灰色","紫红色","灰色","绿色","浅绿色","浅灰色","栗色","绀青色","黄绿色","橙黄色","紫色","红色","银白色","水鸭色","白色","黄色","ENGLISH_COLOR","AQUA","BLACK","BLUE","DKGRAY","FUCHSIA","GRAY","GREEN","LIME","LTGRAY","MAROON","NAVY","OLIVE","ORANGE","PURPLE","RED","SILVER","TEAL","WHITE","YELLOW","JAPANESE_COLOR","アクア色","靑色","ふか灰色","紫紅色","綠色","黃綠","鼠色","群青色","ネイビー","黃綠色","オリーブ色","橙色","オレンジ色","赤色","レッド","銀色","ミント色","薄荷色","黃色","getKoreanColor","getChineseColor","getEnglishColor","getJapaneseColor","getBrowser","tem","ua","userAgent","M","version","appName","appVersion","splice","_isDirty","component","_components","emit","BaseComponent_1","_bWidth","_bHeight","onReady","temp","baseWidth","tempText","min","pad","numOfLines","standardPadding","calcBalloonRectHeight","pw","isChoice","maxChoices","choices","_choiceWindow","ox","oy","dx","dy","mx","canvasToLocalX","my","scaleY","ny","isActiveInBalloon","owner","setBalloonPlacement","setBalloonRect","updateSubBalloonElements","warn","$gameSystem","isSideView","parent","scene","_spriteset","_actorSprites","_enemySprites","tempBattlers","target","_actor","isAlive","_enemy","padY","_mainSprite","transform","updateTransform","tempFontSize","calcTextHeight","EventEmitter_1","EventEmitter","init","mounted","onDestroy","_listeners","eventName","Function","isNaN","nw","position","nx","newX","setOpacity","ballonOwnerType","updatePositionX","topY","isOpen","INSTANCE","startChar","endChar","len","fromCharCode","random","callbackFunction","currentCallback"],"mappings":"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","file":"RS_MessageSystem.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseComponent = void 0;\nconst Component_1 = require(\"./Component\");\n/**\n * @class BaseComponent\n * @description\n * 샌드박스 환경에서 MV 메소드를 호출하여 이전 버전에 대한 안전성을 제공합니다.\n */\nclass BaseComponent extends Component_1.Component {\n    constructor(props) {\n        super(props);\n    }\n    onReady(props) {\n        // if the message window is valid from passed props.\n        if (!(\"messageWindow\" in props)) {\n            console.error(\"messageWindow is not defined\");\n            return;\n        }\n        /**\n         * @type {Window_Message}\n         */\n        this._messageWindow = props.messageWindow;\n    }\n    // Getters\n    get messageWindow() {\n        return this._messageWindow;\n    }\n    get contents() {\n        return this._messageWindow.contents;\n    }\n    /**\n     * @returns {Window_NameBox}\n     */\n    get _nameWindow() {\n        return this._messageWindow._nameBoxWindow;\n    }\n    get _choiceWindow() {\n        return this._messageWindow._choiceListWindow\n            ? this._messageWindow._choiceListWindow\n            : {\n                windowWidth: () => 0,\n                windowHeight: () => 0,\n            };\n    }\n    save() {\n        // 'this._messageWindow?.save()'의 구현입니다.\n        // 하지만 save는 함수가 아닐 수도 있습니다.\n        // 타입의 안전성은 체크하지 않습니다.\n        this._messageWindow.save ? this._messageWindow.save() : null;\n    }\n    restore() {\n        // 'this._messageWindow?.restore()'의 구현입니다.\n        // 하지만 save는 함수가 아닐 수도 있습니다.\n        // 타입의 안전성은 체크하지 않습니다.\n        this._messageWindow.restore ? this._messageWindow.restore() : null;\n    }\n    standardPadding() {\n        // 패딩을 업데이트해야 합니다 (MZ에서 달라진 부분입니다)\n        // 꼭 체크할 필요는 없지만...\n        this._messageWindow.updatePadding();\n        const padding = this._messageWindow.padding || 12;\n        return padding;\n    }\n    textPadding() {\n        // textPadding()의 구현입니다.\n        return this._messageWindow.itemPadding() || 6;\n    }\n    newLineX() {\n        return this._messageWindow.newLineX();\n    }\n    fittingHeight(numLines) {\n        return this._messageWindow.fittingHeight(numLines);\n    }\n    drawTextEx(text) {\n        const box = this._messageWindow.textSizeEx(text);\n        return box.width;\n    }\n    lineHeight() {\n        return this._messageWindow.lineHeight();\n    }\n    /**\n     * TODO: 상속 시, 이 메소드를 오버라이드 하세요.\n     */\n    updatePlacement() { }\n    drawMessageFace() {\n        this._messageWindow.drawMessageFace();\n    }\n    set x(value) {\n        this._messageWindow.x = value;\n    }\n    set y(value) {\n        this._messageWindow.y = value;\n    }\n    set width(value) {\n        this._messageWindow.width = value;\n    }\n    set height(value) {\n        this._messageWindow.height = value;\n    }\n    get width() {\n        return this._messageWindow.width;\n    }\n    get _width() {\n        return this._messageWindow.width;\n    }\n    get height() {\n        return this._messageWindow.height;\n    }\n    get _height() {\n        return this._messageWindow.height;\n    }\n    canvasToLocalX(x) {\n        return x;\n    }\n    canvasToLocalY(y) {\n        return y;\n    }\n}\nexports.BaseComponent = BaseComponent;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/// <reference types=\"../types/my-types\" />\n/// <reference types=\"../types/lunalite-pixi-mz\" />\nvar Imported = (Imported || {});\nImported.RS_MessageSystem = true;\nconst RS_1 = require(\"./RS\");\nconst DependencyInjector_1 = require(\"./DependencyInjector\");\nconst BalloonWindowTransformComponent_1 = require(\"./BalloonWindowTransformComponent\");\nconst NameWindowPositionComponent_1 = require(\"./NameWindowPositionComponent\");\nconst ComponentExecutor_1 = require(\"./ComponentExecutor\");\n//============================================================================\n// Bitmap\n//============================================================================\nvar alias_Bitmap_initialize = Bitmap.prototype.initialize;\nBitmap.prototype.initialize = function (width, height) {\n    alias_Bitmap_initialize.call(this, width, height);\n    this.fontBold = false;\n    this.fontGradient = false;\n    this.highlightTextColor = null;\n};\nBitmap.prototype.setGradient = function (text, color1, color2, color3, tx, ty) {\n    var context = this._context;\n    var tWidth = this.measureTextWidth(text);\n    context.save();\n    var gradient = context.createLinearGradient(tx, 0, tx + tWidth, 0);\n    gradient.addColorStop(0, color1);\n    gradient.addColorStop(0.6, color2);\n    gradient.addColorStop(1, color3);\n    context.restore();\n    this._baseTexture.update();\n    return gradient;\n};\nBitmap.prototype.setGradientStyle = function (text, color1, color2, color3, tx, ty) {\n    var context = this._context;\n    var width = this.measureTextWidth(text);\n    var height = RS_1.RS.MessageSystem.Params.lineHeight;\n    var grd;\n    context.save();\n    var style = RS_1.RS.MessageSystem.Params.gradientStyle;\n    if (style !== \"radial\") {\n        if (style.contains(\"horizontal\")) {\n            grd = context.createLinearGradient(tx, 0, tx + width, 0);\n        }\n        else {\n            grd = context.createLinearGradient(tx, 0, 0, ty + height);\n        }\n    }\n    else {\n        var ws = width * 0.5;\n        var hs = height * 0.5;\n        grd = context.createRadialGradient(ws, hs, 0.0, ws, hs, ws);\n    }\n    if (style === \"radial\") {\n        grd.addColorStop(0.0, color1);\n        grd.addColorStop(1.0, color2);\n    }\n    else if (style.contains(\"axial\")) {\n        grd.addColorStop(0.0, color1);\n        grd.addColorStop(0.5, color2);\n        grd.addColorStop(1.0, color3);\n    }\n    else {\n        grd.addColorStop(0.0, color1);\n        grd.addColorStop(1.0, color2);\n    }\n    context.restore();\n    this._baseTexture.update();\n    return grd;\n};\nBitmap.prototype._makeFontNameText = function () {\n    return ((this.fontItalic ? \"Italic \" : \"\") +\n        (this.fontBold ? \"bold \" : \"\") +\n        this.fontSize +\n        \"px \" +\n        this.fontFace);\n};\nBitmap.prototype._drawTextBody = function (text, tx, ty, maxWidth) {\n    const context = this._context;\n    context.save(); // 드로잉 상태 저장\n    context.imageSmoothingEnabled =\n        RS_1.RS.MessageSystem.Params.fontSmoothingEnabled;\n    if (this.fontGradient) {\n        var gradient = this.setGradientStyle(text, RS_1.RS.MessageSystem.Params.gradientColor1, RS_1.RS.MessageSystem.Params.gradientColor2, RS_1.RS.MessageSystem.Params.gradientColor3, tx, ty);\n        context.fillStyle = gradient;\n    }\n    else {\n        context.fillStyle = this.textColor;\n    }\n    context.fillText(text, tx, ty, maxWidth);\n    context.fillStyle = this.textColor;\n    context.restore();\n};\n//============================================================================\n// Game_Message\n//============================================================================\nvar alias_Game_Message_clear = Game_Message.prototype.clear;\nGame_Message.prototype.clear = function () {\n    alias_Game_Message_clear.call(this);\n    this._waitTime = 0;\n    this._gradientText = \"\";\n    this._balloon = -2;\n    this._align = [];\n    this._balloonPatternHeight = 0;\n    this._lastAlign = -1;\n};\nGame_Message.prototype.setWaitTime = function (time) {\n    this._waitTime = time;\n};\nGame_Message.prototype.setGradientText = function (text) {\n    this._gradientText = text;\n};\nGame_Message.prototype.getWaitTime = function () {\n    return this._waitTime || 0;\n};\nGame_Message.prototype.getGradientText = function () {\n    return this._gradientText;\n};\nGame_Message.prototype.getMaxLine = function () {\n    return this._maxLine;\n};\nGame_Message.prototype.setMaxLine = function (maxLine) {\n    this._maxLine = maxLine;\n    RS_1.RS.MessageSystem.Params.numVisibleRows = maxLine;\n};\nGame_Message.prototype.setBalloon = function (n) {\n    this._balloon = n;\n};\nGame_Message.prototype.getBalloon = function (n) {\n    return this._balloon;\n};\nGame_Message.prototype.setAlign = function (n) {\n    this._align = this._align || [];\n    this._lastAlign = n; // 마지막 정렬 위치 기억\n    this._align.push(n);\n};\nGame_Message.prototype.getAlign = function (n) {\n    const last = this._align.shift();\n    if (last === undefined) {\n        return this._lastAlign;\n    }\n    return last;\n};\nGame_Message.prototype.clearAlignLast = function (n) {\n    this._lastAlign = -1;\n};\nGame_Message.prototype.setBalloonPatternHeight = function (value) {\n    this._balloonPatternHeight = value;\n};\nGame_Message.prototype.getBalloonPatternHeight = function () {\n    return this._balloonPatternHeight;\n};\n//============================================================================\n// Sprite_Battler\n//============================================================================\nSprite_Battler.prototype.screenX = function () {\n    return this.x || 0;\n};\nSprite_Battler.prototype.screenY = function () {\n    return this.y || 0;\n};\n//============================================================================\n// MessageDesc\n//============================================================================\nclass MessageDesc {\n    constructor() {\n        this.fontFace = \"Nanum Gothic\";\n        this.fontSize = 12;\n        this.fontBold = false;\n        this.fontItalic = false;\n        this.textColor = \"#000\";\n        this.outlineColor = \"#fff\";\n        this.outlineWidth = 1;\n        this.fontGradient = false;\n        this.highlightTextColor = null;\n        this.textSpeed = 1;\n        this._isSaved = false;\n    }\n    /**\n     *\n     * @param {Bitmap} contents\n     */\n    save(contents) {\n        this.fontFace = contents.fontFace;\n        this.fontSize = contents.fontSize;\n        this.fontBold = contents.fontBold;\n        this.fontItalic = contents.fontItalic;\n        this.textColor = contents.textColor;\n        this.outlineColor = contents.outlineColor;\n        this.outlineWidth = contents.outlineWidth;\n        this.fontGradient = contents.fontGradient;\n        this.highlightTextColor = contents.highlightTextColor;\n        if ($gameMessage) {\n            this.textSpeed = $gameMessage.getWaitTime();\n        }\n        this._isSaved = true;\n    }\n    restore(contents) {\n        if (!this._isSaved)\n            return;\n        if (!(contents instanceof Bitmap))\n            return;\n        contents.fontFace = this.fontFace;\n        contents.fontSize = this.fontSize;\n        contents.fontBold = this.fontBold;\n        contents.fontItalic = this.fontItalic;\n        contents.textColor = this.textColor;\n        contents.outlineColor = this.outlineColor;\n        contents.outlineWidth = this.outlineWidth;\n        contents.fontGradient = this.fontGradient;\n        contents.highlightTextColor = this.highlightTextColor;\n        if ($gameMessage) {\n            $gameMessage.setWaitTime(this.textSpeed);\n        }\n        this._isSaved = false;\n    }\n}\n//============================================================================\n// Window_Base\n//============================================================================\nWindow_Base.prototype.obtainEscapeCode = function (textState) {\n    var regExp = RS_1.RS.MessageSystem.Reg.defaultEscapeCode;\n    var arr = regExp.exec(textState.text.slice(textState.index));\n    if (arr) {\n        textState.index += arr[0].length;\n        return arr[0].toUpperCase();\n    }\n    else {\n        return \"\";\n    }\n};\n/**\n * 확장된 색상 변경 텍스트 코드 처리\n * \\색[빨강]과 웹색상 처리를 위한 정규 표현식 처리\n * @param {}} textState\n */\nWindow_Base.prototype.obtainNameColor = function (textState) {\n    var arr = /\\[(.+?)\\]/gi.exec(textState.text.slice(textState.index));\n    if (arr) {\n        textState.index += arr[0].length;\n        return RS_1.Color.gmColor(arr[1]);\n    }\n    else {\n        return ColorManager.textColor(0);\n    }\n};\nWindow_Base.prototype.changeTextColor = function (color) {\n    var c = parseInt(color);\n    // 색상 코드가 숫자인 경우\n    if (c > 0 && c < 32) {\n        color = ColorManager.textColor(color);\n    }\n    if (!this._isUsedTextWidthEx) {\n        this.contents.textColor = color;\n    }\n};\nvar alias_Window_Base_processEscapeCharacter = Window_Base.prototype.processEscapeCharacter;\nWindow_Base.prototype.processEscapeCharacter = function (code, textState) {\n    var tcGroup = RS_1.RS.MessageSystem.TextCodes.ENUM;\n    var textCode = RS_1.RS.MessageSystem.TextCodes.Main;\n    switch (code) {\n        case \"C\":\n            this.changeTextColor(this.textColor(this.obtainEscapeParam(textState)));\n            break;\n        case textCode[tcGroup.COLOR]:\n            this.changeTextColor(this.obtainNameColor(textState));\n            break;\n        case \"I\":\n        case textCode[tcGroup.ICON]:\n            this.processDrawIcon(this.obtainEscapeParam(textState), textState);\n            break;\n        case \"{\":\n        case textCode[tcGroup.INCREASE]:\n            this.makeFontBigger();\n            break;\n        case \"}\":\n        case textCode[tcGroup.DECREASE]:\n            this.makeFontSmaller();\n            break;\n        case \"AEND\":\n            $gameMessage.clearAlignLast();\n            break;\n        default:\n            alias_Window_Base_processEscapeCharacter.call(this, code, textState);\n            break;\n    }\n};\nvar alias_loadWindowskin = Window_Base.prototype.loadWindowskin;\nWindow_Base.prototype.loadWindowskin = function () {\n    alias_loadWindowskin.call(this);\n    this.windowskin.addLoadListener(() => {\n        RS_1.Color.baseColor = ColorManager.textColor(0);\n    });\n};\nWindow_Base.prototype.getFontFace = function () {\n    var langCode = RS_1.RS.MessageSystem.Params.langCode || navigator.language.slice(0, 2);\n    var fonts = RS_1.RS.MessageSystem.Params.fonts[langCode];\n    if (fonts) {\n        return fonts;\n    }\n    else {\n        return RS_1.RS.MessageSystem.Params.fonts.default;\n    }\n};\nWindow_Base.prototype.drawTextEx = function (text, x, y, width) {\n    this.save();\n    this.resetFontSettings();\n    const textState = this.createTextState(text, x, y, width);\n    this.processAllText(textState);\n    this.restore();\n    return textState.outputWidth;\n};\nWindow_Base.prototype.processAllText = function (textState) {\n    this._isUsedTextWidthEx = !textState.drawing;\n    while (textState.index < textState.text.length) {\n        this.processCharacter(textState);\n    }\n    this.flushTextState(textState);\n};\nWindow_Base.prototype.makeFontSmaller = function () {\n    if (this.contents.fontSize >= RS_1.RS.MessageSystem.Params.minFontSize) {\n        this.contents.fontSize -= 12;\n    }\n};\nWindow_Base.prototype.resetFontSettings = function () {\n    this.contents.fontFace = this.getFontFace();\n    this.contents.fontSize = RS_1.RS.MessageSystem.Params.fontSize;\n    this.contents.fontBold = false;\n    this.contents.fontItalic = false;\n    this.contents.outlineWidth = RS_1.RS.MessageSystem.Params.defaultOutlineWidth;\n    this.contents.outlineColor = RS_1.RS.MessageSystem.Params.defaultOutlineColor;\n    this.contents.fontGradient = false;\n    this.contents.highlightTextColor = null;\n    this.resetTextColor();\n};\nWindow_Base.prototype.makeFontBigger = function () {\n    if (this.contents.fontSize <= RS_1.RS.MessageSystem.Params.maxFontSize) {\n        this.contents.fontSize += 12;\n    }\n};\nWindow_Base.prototype.save = function () {\n    this._messageDesc = new MessageDesc();\n    this._messageDesc.save(this.contents);\n};\nWindow_Base.prototype.restore = function () {\n    if (!this._messageDesc)\n        return;\n    this._messageDesc.restore(this.contents);\n    this._messageDesc = undefined;\n};\nvar alias_Window_Base_convertEscapeCharacters = Window_Base.prototype.convertEscapeCharacters;\nWindow_Base.prototype.convertEscapeCharacters = function (text) {\n    const regGroup = RS_1.RS.MessageSystem.Reg.Group;\n    const tcGroup = RS_1.RS.MessageSystem.TextCodes.ENUM;\n    const textCode = RS_1.RS.MessageSystem.TextCodes.Main;\n    text = alias_Window_Base_convertEscapeCharacters.call(this, text);\n    text = text.replace(regGroup[tcGroup.VAR], function (...args) {\n        return $gameVariables.value(parseInt(args[1])).toString();\n    }.bind(this));\n    text = text.replace(regGroup[tcGroup.VAR], function (...args) {\n        return $gameVariables.value(parseInt(args[1])).toString();\n    }.bind(this));\n    text = text.replace(regGroup[tcGroup.PLAYER], (...args) => {\n        return this.actorName(parseInt(args[1]));\n    });\n    text = text.replace(regGroup[tcGroup.PARTY_MEMBER], (...args) => {\n        return this.partyMemberName(parseInt(args[1]));\n    });\n    text = text.replace(regGroup[tcGroup.NUM], function (...args) {\n        return args[1].toComma();\n    }.bind(this));\n    text = text.replace(regGroup[tcGroup.GOLD], TextManager.currencyUnit);\n    text = text.replace(regGroup[tcGroup.CLASSES], function (...args) {\n        return $dataClasses[parseInt(args[1])].name || \"\";\n    }.bind(this));\n    text = text.replace(regGroup[tcGroup.ITEM], function (...args) {\n        return $dataItems[parseInt(args[1])].name || \"\";\n    }.bind(this));\n    text = text.replace(regGroup[tcGroup.WEAPON], function (...args) {\n        return $dataWeapons[parseInt(args[1])].name || \"\";\n    }.bind(this));\n    text = text.replace(regGroup[tcGroup.ARMOR], function (...args) {\n        return $dataArmors[parseInt(args[1])].name || \"\";\n    }.bind(this));\n    text = text.replace(regGroup[tcGroup.ENEMY], function (...args) {\n        return $dataEnemies[parseInt(args[1])].name || \"\";\n    }.bind(this));\n    text = text.replace(regGroup[tcGroup.STATE], function (...args) {\n        return $dataStates[parseInt(args[1])].name || \"\";\n    }.bind(this));\n    text = text.replace(regGroup[tcGroup.SKILL], function (...args) {\n        return $dataSkills[parseInt(args[1])].name || \"\";\n    }.bind(this));\n    text = text.replace(regGroup[tcGroup.ALIGN_LEFT], function () {\n        return \"\\x1b\" + textCode[tcGroup.ALIGN] + \"[0]\";\n    }.bind(this));\n    text = text.replace(regGroup[tcGroup.ALIGN_CENTER], function () {\n        return \"\\x1b\" + textCode[tcGroup.ALIGN] + \"[1]\";\n    }.bind(this));\n    text = text.replace(regGroup[tcGroup.ALIGN_RIGHT], function () {\n        return \"\\x1b\" + textCode[tcGroup.ALIGN] + \"[2]\";\n    }.bind(this));\n    text = text.replace(regGroup[tcGroup.ALIGN], (...args) => {\n        if (!this._isUsedTextWidthEx) {\n            $gameMessage.setAlign(Number(args[1] || 0));\n        }\n        return \"\";\n    });\n    text = text.replace(/<\\/LEFT>|<\\/CENTER>|<\\/RIGHT>/gi, function () {\n        return regGroup[tcGroup.ALIGN_CLEAR].source;\n    }.bind(this));\n    return text;\n};\n/**\n * @deprecated\n */\nWindow_Base.prototype.textPadding = function () {\n    return this.itemPadding();\n};\nWindow_Base.prototype.newLineX = function (textState) {\n    return this.textPadding();\n};\nWindow_Base.prototype.processAlign = function (textState) {\n    textState = textState || this._textState;\n    // 아랍어 인가?\n    if (textState.rtl) {\n        return;\n    }\n    switch ($gameMessage.getAlign()) {\n        case 0:\n            this.setAlignLeft(textState);\n            break;\n        case 1:\n            this.setAlignCenter(textState);\n            break;\n        case 2:\n            this.setAlignRight(textState);\n            break;\n    }\n};\nvar alias_Window_Base_processNewLine_align = Window_Base.prototype.processNewLine;\nWindow_Base.prototype.processNewLine = function (textState) {\n    alias_Window_Base_processNewLine_align.call(this, textState);\n    this.processAlign(textState);\n};\nWindow_Base.prototype.setAlignLeft = function (textState) {\n    textState.x = this.newLineX(textState);\n    textState.startX = textState.x;\n};\nWindow_Base.prototype.setAlignCenter = function (textState) {\n    var padding = this.textPadding();\n    textState.x =\n        (this.newLineX(textState) + this.contentsWidth() + padding) / 2 -\n            textState.outputWidth / 2;\n    textState.startX = textState.x;\n};\nWindow_Base.prototype.setAlignRight = function (textState) {\n    var padding = this.textPadding();\n    textState.x = this.contentsWidth() - padding - textState.outputWidth;\n    textState.startX = textState.x;\n};\n//============================================================================\n// Window_Message\n//============================================================================\nWindow_Message.prototype.obtainTextSpeed = function (textState) {\n    var arr = /\\[(\\d+)\\]/.exec(textState.text.slice(textState.index));\n    if (arr) {\n        textState.index += arr[0].length;\n        return parseInt(arr[1]);\n    }\n    else {\n        return 0;\n    }\n};\nWindow_Message.prototype.obtainGradientText = function (textState) {\n    var arr = /^<(.+?)>/.exec(textState.text.slice(textState.index));\n    if (arr) {\n        textState.index += arr[0].length;\n        return String(arr[1]);\n    }\n    else {\n        return \"Empty Text\";\n    }\n};\nWindow_Message.prototype.obtainSoundName = function (textState) {\n    var arr = /\\<(.+?)\\>/.exec(textState.text.slice(textState.index));\n    if (arr) {\n        textState.index += arr[0].length;\n        return String(arr[1]);\n    }\n    else {\n        return \"\";\n    }\n};\nvar alias_Window_Message_processEscapeCharacter = Window_Message.prototype.processEscapeCharacter;\nWindow_Message.prototype.processEscapeCharacter = function (code, textState) {\n    var tcGroup = RS_1.RS.MessageSystem.TextCodes.ENUM;\n    var textCode = RS_1.RS.MessageSystem.TextCodes.Main;\n    switch (code) {\n        case textCode[tcGroup.TEXT_SPEED]:\n            $gameMessage.setWaitTime(this.obtainEscapeParam(textState));\n            break;\n        case textCode[tcGroup.TEXT_SIZE]:\n            this.setTextSize(this.obtainEscapeParam(textState));\n            break;\n        case textCode[tcGroup.OUTLINE_COLOR]:\n            this.setStrokeColor(this.obtainNameColor(textState));\n            break;\n        case textCode[tcGroup.INDENT]:\n            this.setTextIndent(textState);\n            break;\n        case textCode[tcGroup.OUTLINE_WIDTH]:\n            this.setStrokeWidth(this.obtainEscapeParam(textState));\n            break;\n        case textCode[tcGroup.BOLD]:\n            this.setTextBold(!this.contents.fontBold);\n            break;\n        case textCode[tcGroup.BOLD_START]:\n            this.setTextBold(true);\n            break;\n        case textCode[tcGroup.BOLD_END]:\n            this.setTextBold(false);\n            break;\n        case textCode[tcGroup.ITALIC]:\n            this.setTextItalic(!this.contents.fontItalic);\n            break;\n        case textCode[tcGroup.ITALIC_START]:\n            this.setTextItalic(true);\n            break;\n        case textCode[tcGroup.ITALIC_END]:\n            this.setTextItalic(false);\n            break;\n        case textCode[tcGroup.GRADIENT]:\n            this.setTextGradient(textState);\n            break;\n        case textCode[tcGroup.HIGHLIGHT_TEXT_COLOR]:\n            this.setHighlightTextColor(this.obtainNameColor(textState));\n            break;\n        case textCode[tcGroup.TAB]:\n            textState.x += Number(this.textWidth(\"A\") * RS_1.RS.MessageSystem.Params.TabSize);\n            break;\n        case textCode[tcGroup.CARRIAGE_RETURN]:\n            textState.x = Number(textState.startX || 0);\n            if (!this._isUsedTextWidthEx)\n                this.startWait(1);\n            break;\n        case textCode[tcGroup.PLAY_SE]:\n            if (!this._isUsedTextWidthEx)\n                this.playSe(this.obtainSoundName(textState));\n            break;\n        case textCode[tcGroup.SHOW_PICTURE]:\n            if (this._isUsedTextWidthEx)\n                break;\n            this.showPicture(this.obtainSoundName(textState));\n            this.startWait(15);\n        case textCode[tcGroup.HIDE_PICTURE]:\n            if (this._isUsedTextWidthEx)\n                break;\n            this.erasePicture(this.obtainEscapeParam(textState));\n            this.startWait(15);\n        case textCode[tcGroup.FACE]:\n            if (this._isUsedTextWidthEx)\n                break;\n            var params = this.obtainSoundName(textState).split(\",\");\n            // this.redrawFaceImage(textState, params[0], params[1], 0, 0);\n            this.startWait(1);\n            break;\n        default:\n            alias_Window_Message_processEscapeCharacter.call(this, code, textState);\n            break;\n    }\n};\nWindow_Message.prototype.setTextItalic = function (...args) {\n    this.contents.fontItalic = args[0];\n};\nWindow_Message.prototype.setTextBold = function (...args) {\n    this.contents.fontBold = args[0];\n};\nWindow_Message.prototype.setTextSize = function (...args) {\n    this.contents.fontSize = args[0].clamp(RS_1.RS.MessageSystem.Params.minFontSize, RS_1.RS.MessageSystem.Params.maxFontSize);\n};\nWindow_Message.prototype.setStrokeWidth = function (...args) {\n    this.contents.outlineWidth = args[0];\n};\nWindow_Message.prototype.setStrokeColor = function (...args) {\n    this.contents.outlineColor = args[0];\n};\nWindow_Message.prototype.setTextIndent = function (textState) {\n    textState.x += this.obtainEscapeParam(textState);\n};\nWindow_Message.prototype.setHighlightTextColor = function (...args) {\n    let color = args[0];\n    if (color === \"null\" || color === \"없음\") {\n        color = null;\n    }\n    this.contents.highlightTextColor = color;\n};\nWindow_Message.prototype.setTextGradient = function (textState) {\n    // TODO: 여기에서는 텍스트를 그리지 않는다.\n    // TODO: 그레디언트 모드임을 명시하고 flush 단계에서 한 번에 그려야 한다 (배경색도 마찬가지이다)\n    this.contents.fontGradient = true;\n};\nWindow_Message.prototype.playSe = function (seName) {\n    var realName = seName.trim();\n    var data = {\n        name: realName,\n        pan: 0,\n        pitch: 100,\n        volume: ConfigManager.seVolume,\n    };\n    AudioManager.playSe(data);\n};\nWindow_Message.prototype.showPicture = function (param) {\n    const raw = param.split(\",\").map((e) => {\n        return e.trim();\n    });\n    let params = [\n        Number(raw[0]),\n        raw[1],\n        Number(raw[2]),\n        Number(raw[3]),\n        Number(raw[4]),\n        100,\n        100,\n        255,\n        0,\n    ];\n    let ret = true;\n    // 모든 요소 검증\n    if (params) {\n        params.forEach(function (e, i, a) {\n            if (e === undefined || e === null) {\n                ret = false;\n            }\n        });\n    }\n    // 검증 결과가 참이라면 그림 표시\n    if (ret) {\n        $gameScreen.showPicture.apply($gameScreen, params);\n        return true;\n    }\n    return false;\n};\nWindow_Message.prototype.erasePicture = function (picId) {\n    if (typeof picId !== \"number\")\n        return;\n    $gameScreen.erasePicture(picId);\n};\n// 구조가 변경된 메서드\nWindow_Message.prototype.resetFontSettings = function () {\n    Window_Base.prototype.resetFontSettings.call(this);\n    // pause 아이콘 표시 위치 초기화\n    if (this._pauseSignSprite) {\n        this._pauseSignSprite.move(this._width / 2, this._height);\n        this._pauseSignSprite.scale.y = 1;\n    }\n    $gameMessage.setWaitTime(RS_1.RS.MessageSystem.Params.textSpeed);\n};\n// 새로 추가된 메서드\nWindow_Message.prototype.resetGradient = function (textState) {\n    this.contents.fontGradient = false;\n};\n// 폰트 사이즈 설정 메서드는 MZ에서 없다\nWindow_Message.prototype.numVisibleRows = function () {\n    return RS_1.RS.MessageSystem.Params.numVisibleRows;\n};\n/**\n * Create text state included px and py values for text word wrapping.\n */\nconst alias_Window_Message_createTextState = Window_Message.prototype.createTextState;\nWindow_Message.prototype.createTextState = function (text, x, y, width) {\n    let textState = alias_Window_Message_createTextState.call(this, text, x, y, width);\n    const px = textState.x;\n    const py = textState.y;\n    // mixin\n    Object.assign(textState, {\n        px,\n        py,\n    });\n    return textState;\n};\nWindow_Message.prototype.processWordWrap = function (textState, w, width, isValid) {\n    const px = textState.px;\n    if (Math.floor(px + w * 2) > width) {\n        if (isValid) {\n            this.processNewLine(textState);\n            if (this.needsNewPage(textState)) {\n                this.startPause();\n            }\n        }\n    }\n};\nconst alias_Window_Message_processNewLinePW = Window_Message.prototype.processNewLine;\nWindow_Message.prototype.processNewLine = function (textState) {\n    alias_Window_Message_processNewLinePW.call(this, textState);\n    // 내부 버퍼의 위치를 시작 지점으로 초기화한다.\n    textState.px = textState.startX || textState.x;\n};\n/**\n * ! Override\n * @param {Object} textState\n */\nWindow_Message.prototype.processCharacter = function (textState) {\n    const c = textState.text[textState.index++];\n    if (c.charCodeAt(0) < 0x20) {\n        this.flushTextState(textState);\n        this.processControlCharacter(textState, c);\n    }\n    else {\n        textState.buffer += c;\n        // 내부 버퍼의 위치를 누적 계산한다.\n        textState.px += this.textWidth(c);\n    }\n};\nconst alias_Window_Message_processCharacter = Window_Message.prototype.processCharacter;\nWindow_Message.prototype.processCharacter = function (textState) {\n    // 이전 텍스트의 길이를 계산한다.\n    let isDirty = false;\n    const preBuffer = textState.buffer || \"\";\n    let preLen = preBuffer.length;\n    alias_Window_Message_processCharacter.call(this, textState);\n    // 새로운 텍스트가 이후에 있는가?\n    // 그게 문자인지 제어 문자인지는 이 로직에선 알 수 없다.\n    const postBuffer = textState.buffer || \"\";\n    const postLen = postBuffer.length;\n    if (preLen !== postLen) {\n        isDirty = true;\n    }\n    if (isDirty) {\n        // 끝에 있는 글자를 가지고 온다.\n        // 하지만 제어 문자인지는 확인하지 않는다.\n        // 제어 문자 여부는 메인 로직에서 판단하게 둔다.\n        const c = textState.buffer.substr(textState.buffer.length - 1, 1);\n        this.processNormalCharacterProxy(textState, c);\n    }\n};\n/**\n * MZ에서는 processNormalCharacter의 구현이 없다.\n * 하지만, 자동 개행이나 사운드 재생 그리고 배경색 묘화를 위해 위치 계산이 필요하다.\n * 이 때문에 추가한 메서드이며, 텍스트의 묘화를 하진 않는다.\n * @param {*} textState\n * @param {*} c\n */\nWindow_Message.prototype.processNormalCharacterProxy = function (textState, c) {\n    // MZ에서는 텍스트 상태(textState)가 다음 제어 문자가 등장해야 flush 처리된다.\n    // 따라서 이곳에서는 텍스트가 그려질 수 없다.\n    const w = this.textWidth(c);\n    let width = this.contentsWidth();\n    // 일반 메시지 모드에서만 동작 한다.\n    let isValid = $gameMessage.getBalloon() === -2 &&\n        !this._isUsedTextWidthEx &&\n        RS_1.RS.MessageSystem.Params.isParagraphMinifier;\n    // 소수점 자리를 버려야 정확히 계산된다.\n    this.processWordWrap(textState, w, width, isValid);\n    const contents = this.contents;\n    const faceName = $gameMessage.faceName();\n    // if the faceName is not empty and the face direction is to right?\n    if (faceName !== \"\") {\n        width = contents.width - ImageManager.faceWidth;\n        isValid = RS_1.RS.MessageSystem.Params.faceDirection === 2;\n        this.processWordWrap(textState, w, width, isValid);\n    }\n    // 배경색의 위치를 계산하고 비트맵 인스턴스를 생성한다.\n    if (contents.highlightTextColor !== null) {\n        const contentW = Math.floor(w * 2) + 1.0;\n        const contentH = this.lineHeight();\n        // 배경 버퍼의 생성\n        this._backBuffer = {\n            buffer: new Bitmap(contentW, contentH),\n            textState: null,\n            isDirty: false,\n        };\n        const { px, py } = textState;\n        // 배경 버퍼는 내부 버퍼의 초기 위치로부터 계산된다.\n        this._backBuffer.buffer.fillAll(contents.highlightTextColor);\n        // 이 플래그가 활성화되어있다면 flushTextState에서 그리기 처리를 해야 한다.\n        this._backBuffer.isDirty = true;\n        this._backBuffer.textState = textState;\n    }\n};\nconst alias_Window_Message_flushTextState = Window_Message.prototype.flushTextState;\nWindow_Message.prototype.flushTextState = function (textState) {\n    // 기본 지연 시간 설정\n    if (!this._showFast &&\n        !this.isEndOfText(textState) &&\n        !this._isUsedTextWidthEx) {\n        this.startWait($gameMessage.getWaitTime() || 0);\n    }\n    // 배경색의 처리\n    if (!this._isUsedTextWidthEx &&\n        this._backBuffer &&\n        this._backBuffer.isDirty) {\n        if (textState.drawing) {\n            /**\n             * @type {Bitmap}\n             */\n            const bitmap = this._backBuffer.buffer;\n            const tx = textState.px;\n            const ty = textState.py;\n            const x = textState.x;\n            const y = textState.y;\n            const w = bitmap.width;\n            const h = bitmap.height;\n            this.contents.blt(bitmap, 0, 0, w, h, x, y);\n            this._backBuffer.isDirty = false;\n        }\n    }\n    alias_Window_Message_flushTextState.call(this, textState);\n};\n// [X] Window_Message.prototype.createSubWindows\n// [X] RS.MessageSystem.Params.extraSubWindows = [];\n// [X] Window_Message.prototype.subWindows\nWindow_Message.prototype.updateBigFaceOpacity = function () {\n    if (!this._faceContents) {\n        return;\n    }\n    let { faceOpacity } = RS_1.RS.MessageSystem.Params;\n    if (!faceOpacity)\n        faceOpacity = 255;\n    const value = faceOpacity.clamp(0, 255);\n    this._faceContents.opacity = value;\n};\nWindow_Message.prototype.fadeInOutFaceContents = function () {\n    if (!this._faceContents) {\n        return;\n    }\n    const isValid = this.isOpening() || this.isClosing();\n    if (isValid) {\n        const openness = (this.openness || 0).clamp(0, 255);\n        this._faceContents.scale.y = openness / 255;\n        this._faceContents.y =\n            (this._faceContents.height / 2) * (1 - this.openness / 255);\n    }\n};\nconst alias_Window_Message_checkToNotClose = Window_Message.prototype.checkToNotClose;\nWindow_Message.prototype.checkToNotClose = function () {\n    this.fadeInOutFaceContents();\n    alias_Window_Message_checkToNotClose.call(this);\n};\nWindow_Message.prototype.updatePlacement = function () {\n    // TODO: try-catch statement will be deleted later.\n    try {\n        const goldWindow = this._goldWindow;\n        this._positionType = $gameMessage.positionType();\n        // 말풍선 모드가 아니라면 X좌표를 화면 중앙에 맞춘다.\n        if ($gameMessage.getBalloon() === -2) {\n            this.x =\n                Graphics.boxWidth / 2 -\n                    this.width / 2 +\n                    RS_1.RS.MessageSystem.Params.windowOffset.x;\n            this.y =\n                (this._positionType * (Graphics.boxHeight - this.height)) / 2 +\n                    RS_1.RS.MessageSystem.Params.windowOffset.y;\n        }\n        else {\n            if (SceneManager._scene instanceof Scene_Map) {\n                (DependencyInjector_1.DependencyInjector.getComponent(\"BalloonWindowTransformComponent\")).updateBalloonPosition();\n                // this.updateBalloonPosition();\n            }\n        }\n        // 골드 윈도우의 위치 설정\n        if (goldWindow) {\n            const minGoldY = goldWindow.height;\n            this._goldWindow.y =\n                this.y > minGoldY ? 0 : Graphics.boxHeight - goldWindow.height;\n        }\n        // 투명도 업데이트\n        this.updateDefaultOpacity();\n        this.updateContentsOpacity();\n        this.updateBigFaceOpacity();\n        // 이름 윈도우 업데이트\n        // 얼굴 이미지의 Z-Index 업데이트\n        if ($gameMessage.faceName() !== \"\") {\n            const isBigFace = /^Big_/.exec($gameMessage.faceName());\n            const backIndex = 2;\n            if (RS_1.RS.MessageSystem.Params.faceSide) {\n                this.setFaceZIndex(isBigFace ? 0 : backIndex);\n            }\n            else {\n                this.setFaceZIndex(backIndex);\n            }\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n};\nconst alias_Window_Message_convertEscapeCharacters = Window_Message.prototype.convertEscapeCharacters;\nWindow_Message.prototype.convertEscapeCharacters = function (text) {\n    const tcGroup = RS_1.RS.MessageSystem.TextCodes.ENUM;\n    const textCode = RS_1.RS.MessageSystem.TextCodes.Main;\n    const regGroup = RS_1.RS.MessageSystem.Reg.Group;\n    text = alias_Window_Message_convertEscapeCharacters.call(this, text);\n    text = text.replace(regGroup[tcGroup.BOLD_START_CV], function () {\n        return regGroup[tcGroup.BOLD_START].source;\n    }.bind(this));\n    text = text.replace(regGroup[tcGroup.BOLD_END_CV], function () {\n        return regGroup[tcGroup.BOLD_END].source;\n    }.bind(this));\n    text = text.replace(regGroup[tcGroup.ITALIC_START_CV], function () {\n        return regGroup[tcGroup.ITALIC_START].source;\n    }.bind(this));\n    text = text.replace(regGroup[tcGroup.ITALIC_END_CV], function () {\n        return regGroup[tcGroup.ITALIC_END].source;\n    }.bind(this));\n    text = text.replace(regGroup[tcGroup.NAME], (...args) => {\n        let retName = args[1];\n        if (retName.endsWith(\":left\")) {\n            retName = retName.replace(\":left\", \"\");\n            RS_1.RS.MessageSystem.Params.namePositionTypeAtX = \"left\";\n        }\n        if (retName.endsWith(\":auto\")) {\n            retName = retName.replace(\":auto\", \"\");\n            RS_1.RS.MessageSystem.Params.namePositionTypeAtX = \"auto\";\n        }\n        if (retName.endsWith(\":center\")) {\n            retName = retName.replace(\":center\", \"\");\n            RS_1.RS.MessageSystem.Params.namePositionTypeAtX = \"center\";\n        }\n        if (retName.endsWith(\":opacity0\")) {\n            retName = retName.replace(\":opacity0\", \"\");\n            RS_1.RS.MessageSystem.Params.namePositionTypeAtX = \"opacity0\";\n        }\n        if (retName.endsWith(\":defaultOpacity\")) {\n            retName = retName.replace(\":defaultOpacity\", \"\");\n            RS_1.RS.MessageSystem.Params.namePositionTypeAtX = \"defaultOpacity\";\n        }\n        if (retName.endsWith(\":right\")) {\n            retName = retName.replace(\":right\", \"\");\n            RS_1.RS.MessageSystem.Params.namePositionTypeAtX = \"right\";\n        }\n        this._nameWindow.drawName(retName);\n        return \"\";\n    });\n    text = text.replace(regGroup[tcGroup.BALLOON], function () {\n        const value = Number(arguments[1] || -2);\n        if ($gameParty.inBattle()) {\n            $gameMessage.setBalloon(\n            // @ts-ignore\n            value < 0\n                ? \"ENEMIES : \" + Math.abs(value)\n                : \"ACTORS : \" + value);\n        }\n        else {\n            $gameMessage.setBalloon(value);\n        }\n        return \"\";\n    }.bind(this));\n    text = text.replace(regGroup[tcGroup.FRIENDLY_TROOPS], function () {\n        var value = Number(arguments[1] || 0);\n        $gameMessage.setBalloon(\n        // @ts-ignore\n        \"ACTORS : \" + value);\n        return \"\";\n    }.bind(this));\n    text = text.replace(regGroup[tcGroup.ENEMY_TROOPS], function () {\n        var value = Number(arguments[1] || 0);\n        $gameMessage.setBalloon(\n        // @ts-ignore\n        \"ENEMIES : \" + value);\n        return \"\";\n    }.bind(this));\n    text = text.replace(regGroup[tcGroup.FACE_DIRECTION], () => {\n        var value = Number(arguments[1] || 0);\n        if (!this._isUsedTextWidthEx) {\n            RS_1.RS.MessageSystem.Params.faceDirection = value;\n        }\n        return \"\";\n    });\n    return text;\n};\n// Window_Message.prototype.terminateMessage\nWindow_Message.prototype.setHeight = function (n) {\n    this.contents.clear();\n    $gameMessage.setMaxLine(n);\n    this.height = this.fittingHeight(n);\n    this.createContents();\n    this.updatePlacement();\n};\nconst alias_Window_Message_initialize = Window_Message.prototype.initialize;\nWindow_Message.prototype.initialize = function (rect) {\n    alias_Window_Message_initialize.call(this, rect);\n    $gameTemp.setMSHeightFunc(this.setHeight.bind(this));\n    this.setHeight(RS_1.RS.MessageSystem.Params.numVisibleRows);\n    this.createFaceContents();\n    this.on(\"removed\", this.removeEventHandler, this);\n    this.on(\"onLoadWindowskin\", this.onLoadWindowskin, this);\n    DependencyInjector_1.DependencyInjector.COMPONENTS = [];\n    DependencyInjector_1.DependencyInjector.COMPONENTS.push(BalloonWindowTransformComponent_1.BalloonWindowTransformComponent);\n    DependencyInjector_1.DependencyInjector.COMPONENTS.push(NameWindowPositionComponent_1.NameWindowPositionComponent);\n    DependencyInjector_1.DependencyInjector.inject(this);\n};\nconst alias_Window_Message_startMessage = Window_Message.prototype.startMessage;\nWindow_Message.prototype.startMessage = function () {\n    DependencyInjector_1.DependencyInjector.ready();\n    alias_Window_Message_startMessage.call(this);\n};\nWindow_Message.prototype.removeEventHandler = function () {\n    this.off(\"onLoadWindowskin\", this.onLoadWindowskin, this);\n};\n/**\n * TODO: ColorManager.textColor의 대체 구현.\n *\n * @param {Number} n\n * @returns\n */\nWindow_Message.prototype.textColor = function (n) {\n    const windowskin = this.windowskin;\n    if (!windowskin.isReady()) {\n        // Set the default text color if the windowskin is not ready.\n        return RS_1.Color.baseColor;\n    }\n    const px = 96 + (n % 8) * 12 + 6;\n    const py = 144 + Math.floor(n / 8) * 12 + 6;\n    return windowskin.getPixel(px, py);\n};\nWindow_Message.prototype.onLoadWindowskin = function () {\n    RS_1.Color.baseColor = this.textColor(0);\n    this.changeTextColor(RS_1.Color.baseColor);\n};\nWindow_Message.prototype.loadWindowskin = function () {\n    const bitmap = ImageManager.loadSystem(RS_1.RS.MessageSystem.Params.windowskin);\n    // if the windowskin is changed?\n    if (bitmap !== this.windowskin) {\n        this.windowskin = bitmap;\n        this._isDirtyWindowskin = false;\n        this.windowskin.addLoadListener(() => {\n            this._isDirtyWindowskin = true;\n        });\n        if (!this.contents) {\n            this.createContents();\n        }\n        // Set the default text color if the windowskin didn't load yet.\n        this.changeTextColor(RS_1.Color.baseColor);\n        if (!this.windowskin.isReady()) {\n            return setTimeout(() => this.loadWindowskin(), 10);\n        }\n    }\n};\nvar _Window_Message_updateLoading = Window_Message.prototype.updateLoading;\nWindow_Message.prototype.updateLoading = function () {\n    let ret = true;\n    if (this._isDirtyWindowskin) {\n        RS_1.Color.baseColor = ColorManager.textColor(0);\n        this.changeTextColor(RS_1.Color.baseColor);\n        this._isDirtyWindowskin = false;\n        ret = true;\n    }\n    return _Window_Message_updateLoading.call(this) && ret;\n};\nWindow_Message.prototype.needsNewPage = function (textState) {\n    return (!this.isEndOfText(textState) &&\n        textState.y + textState.height > this.contentsHeight());\n};\nWindow_Message.prototype.createFaceContents = function () {\n    this._faceContents = new Sprite();\n    this._faceContents.x = 0;\n    this._faceContents.y = 0;\n    this.addChildAt(this._faceContents, 2);\n    return this._faceContents;\n};\nWindow_Message.prototype.removeFaceContents = function () {\n    if (this._faceContents)\n        this.removeChild(this._faceContents);\n};\n/**\n * 큰 얼굴 이미지가 설정되었을 때 텍스트 시작 위치\n */\nWindow_Message.prototype.newLineX = function () {\n    const reg = /^Big_/i;\n    const faceName = $gameMessage.faceName();\n    const faceIndex = $gameMessage.faceIndex();\n    if (reg.exec(faceName)) {\n        var faceStartX = RS_1.RS.MessageSystem.Params.faceSide\n            ? 0\n            : RS_1.RS.MessageSystem.Params.textStartX;\n        return faceIndex > 0 ? 0 : faceStartX;\n    }\n    else {\n        if (RS_1.RS.MessageSystem.Params.faceDirection === 2)\n            return 0;\n        return faceName ? RS_1.RS.MessageSystem.Params.faceStartOriginX : 0;\n    }\n};\n// TODO: 큰 얼굴 이미지 구현 필요\n/**\n * @param {String} faceName\n */\nWindow_Message.prototype.isValidBigFace = function (faceName) {\n    var reg = /^Big_/i;\n    return reg.exec(faceName);\n};\n/**\n * TODO: deprecated\n */\nWindow_Message.prototype.updateNameWindow = function () { };\n/**\n * Window 구성 스프라이트 _windowBackSprite의 투명도를 조절합니다.\n * TODO: deprecated\n * @method standardBackOpacity\n */\nWindow_Message.prototype.standardBackOpacity = function () {\n    return RS_1.RS.MessageSystem.Params.backOpacity;\n};\n/**\n * Bitmap의 context.globalAlpha 값을 변경합니다.\n * @method translucentOpacity\n */\nWindow_Message.prototype.translucentOpacity = function () {\n    return RS_1.RS.MessageSystem.Params.translucentOpacity;\n};\n/**\n * 윈도우를 구성하는 모든 객체의 투명도를 변경합니다.\n * @method updateDefaultOpacity\n */\nWindow_Message.prototype.updateDefaultOpacity = function () {\n    this.opacity = RS_1.RS.MessageSystem.Params.defaultOpacity;\n};\n/**\n * Window 구성 스프라이트 _windowContentsSprite의 투명도를 변경합니다.\n * @method updateContentsOpacity\n */\nWindow_Message.prototype.updateContentsOpacity = function () {\n    this.contentsOpacity = RS_1.RS.MessageSystem.Params.contentsOpacity;\n};\nWindow_Message.prototype.getSpriteActors = function (sign) {\n    if (!$gameParty.members())\n        return null;\n    const max = $gameParty.members().length;\n    sign = sign.clamp(0, max);\n    return {\n        type: \"actor\",\n        id: sign - 1,\n    };\n};\nWindow_Message.prototype.getSpriteEnemies = function (sign) {\n    if (!$gameTroop.members())\n        return null;\n    const max = $gameTroop.members().length;\n    sign = sign.clamp(0, max);\n    return {\n        type: \"enemy\",\n        id: sign - 1,\n    };\n};\nWindow_Message.prototype.setupOwner = function (sign) {\n    switch (sign) {\n        case -1: // 플레이어\n            $gameMap.setMsgOwner($gamePlayer);\n            break;\n        case 0: // 이 이벤트\n            $gameMap.setMsgOwner($gameMap.getMsgEvent());\n            break;\n        default:\n            if (SceneManager._scene instanceof Scene_Battle) {\n                // 전투 중인가?\n                if (/(?:ENEMIES)[ ]*:(.*)/.test(sign.toString())) {\n                    // 적\n                    $gameMap.setMsgOwner(this.getSpriteEnemies(parseInt(RegExp.$1)));\n                }\n                if (/(?:ACTORS)[ ]*:(.*)/.test(sign.toString())) {\n                    // 아군\n                    $gameMap.setMsgOwner(this.getSpriteActors(parseInt(RegExp.$1)));\n                }\n            }\n            else {\n                // 맵 이벤트\n                $gameMap.setMsgOwner($gameMap.event(sign));\n            }\n            break;\n    }\n};\nconst alias_Window_Message_shouldBreakHere = Window_Message.prototype.shouldBreakHere;\nWindow_Message.prototype.shouldBreakHere = function (text) {\n    const isBreakCharacter = alias_Window_Message_shouldBreakHere.call(this, text);\n    if (isBreakCharacter) {\n        if (RS_1.RS.MessageSystem.Params.isPlayTextSound) {\n            const interval = RS_1.RS.MessageSystem.Params.textSoundInterval;\n            // prettier-ignore\n            if ((this._textSoundInterval--) <= 0) {\n                AudioManager.playStaticSe({\n                    name: RS_1.RS.MessageSystem.popParameter(\"Text Sound\", \"텍스트 효과음\"),\n                    pan: 0,\n                    pitch: 100,\n                    volume: 90,\n                });\n                this._textSoundInterval = interval;\n            }\n        }\n    }\n    return isBreakCharacter;\n};\n//============================================================================\n// Game_Interpreter\n//============================================================================\nGame_Interpreter.prototype.processMessageParams = function (eventId, index) {\n    const meta = (RS_1.RS.MessageSystem.getEventComments(eventId, index - 1));\n    if (meta[\"윈도우 스킨\"]) {\n        RS_1.RS.MessageSystem.Params.windowskin =\n            meta[\"윈도우 스킨\"].trim() || \"Window\";\n        ImageManager.loadSystem(RS_1.RS.MessageSystem.Params.windowskin);\n    }\n    if (meta[\"이름 윈도우 스킨\"]) {\n        RS_1.RS.MessageSystem.Params.windowskinForNameWindow =\n            meta[\"이름 윈도우 스킨\"].trim() || \"Window\";\n        ImageManager.loadSystem(RS_1.RS.MessageSystem.Params.windowskinForNameWindow);\n    }\n    if (meta[\"라인 높이\"]) {\n        RS_1.RS.MessageSystem.Params.lineHeight = parseInt(meta[\"라인 높이\"]);\n    }\n    if (meta[\"폰트 크기\"]) {\n        RS_1.RS.MessageSystem.Params.fontSize = parseInt(meta[\"폰트 크기\"]);\n    }\n    if (meta[\"라인\"]) {\n        RS_1.RS.MessageSystem.Params.numVisibleRows = parseInt(meta[\"라인\"]);\n    }\n    if (meta[\"텍스트 시작 X\"]) {\n        RS_1.RS.MessageSystem.Params.textStartX = parseInt(meta[\"텍스트 시작 X\"]);\n    }\n    if (meta[\"큰 페이스칩 OX\"]) {\n        RS_1.RS.MessageSystem.Params.faceOX = Number(meta[\"큰 페이스칩 OX\"]);\n    }\n    if (meta[\"큰 페이스칩 OY\"]) {\n        RS_1.RS.MessageSystem.Params.faceOY = Number(meta[\"큰 페이스칩 OY\"]);\n    }\n    if (meta[\"대화창 뒤에 얼굴 표시\"]) {\n        RS_1.RS.MessageSystem.Params.faceSide = Boolean(meta[\"대화창 뒤에 얼굴 표시\"] === \"true\");\n    }\n    if (meta[\"대화창 투명도\"]) {\n        RS_1.RS.MessageSystem.Params.defaultOpacity = parseInt(meta[\"대화창 투명도\"]);\n    }\n    if (meta[\"텍스트 효과음 재생 여부\"]) {\n        RS_1.RS.MessageSystem.Params.isPlayTextSound = Boolean(meta[\"텍스트 효과음 재생 여부\"] === \"true\");\n    }\n    if (meta[\"기본 텍스트 출력 속도\"]) {\n        RS_1.RS.MessageSystem.Params.textSpeed = Number(meta[\"기본 텍스트 출력 속도\"]);\n    }\n};\nGame_Interpreter.prototype.isValidMultiLine = function () {\n    const codes = [];\n    let prevCode = 401;\n    let lineCount = 0;\n    for (let i = 1; i < 8; i++) {\n        const currentCommand = this._list[this._index + i];\n        if (currentCommand) {\n            const code = currentCommand.code;\n            codes.push(code);\n            prevCode = code;\n            if ([101, 401].contains(code)) {\n                lineCount++;\n            }\n        }\n    }\n    if (codes.contains(102)) {\n        return false;\n    }\n    else if (codes.contains(103)) {\n        return false;\n    }\n    else if ($gameMessage.getMaxLine() <= 4) {\n        return false;\n    }\n    else if (lineCount <= 4) {\n        return false;\n    }\n    else if (RS_1.RS.MessageSystem.Params.choiceWindowStyle == \"RMXP\") {\n        return false;\n    }\n    else {\n        return true;\n    }\n};\n// Game_Interpreter.prototype.command101 = function () {\n//     if (!$gameMessage.isBusy()) {\n//         $gameMap.setMsgEvent(this.character(this._eventId > 0 ? 0 : -1));\n//         $gameMessage.setFaceImage(this._params[0], this._params[1]);\n//         $gameMessage.setBackground(this._params[2]);\n//         $gameMessage.setPositionType(this._params[3]);\n//         this.processMessageParams(this._eventId, this._index);\n//         if (this.isMultiLine()) {\n//             this.multiLineAddMessage();\n//         } else {\n//             while (this.nextEventCode() === 401) {\n//                 // Text data\n//                 this._index++;\n//                 $gameMessage.add(this.currentCommand().parameters[0]);\n//             }\n//         }\n//         switch (this.nextEventCode()) {\n//             case 102: // Show Choices\n//                 this._index++;\n//                 this.setupChoices(this.currentCommand().parameters);\n//                 break;\n//             case 103: // Input Number\n//                 this._index++;\n//                 this.setupNumInput(this.currentCommand().parameters);\n//                 break;\n//             case 104: // Select Item\n//                 this._index++;\n//                 this.setupItemChoice(this.currentCommand().parameters);\n//                 break;\n//         }\n//         this._index++;\n//         this.setWaitMode(\"message\");\n//     }\n//     return false;\n// };\nGame_Interpreter.prototype.multiLineAddMessage = function () {\n    this.initLineHeight();\n    while ($gameMessage._texts.length < $gameMessage.getMaxLine()) {\n        while (this.nextEventCode() === 401) {\n            this._index++;\n            $gameMessage.add(this.currentCommand().parameters[0]);\n            this.addLineHeight();\n            if (this._lineHeight >= $gameMessage.getMaxLine()) {\n                break;\n            }\n        }\n        if (this.nextEventCode() !== 101) {\n            break;\n        }\n    }\n    // 커맨드 코드 401번이 아직 남아있는 상황이라면,\n    // 다음 인덱스로 넘겨야 선택지가 제대로 동작한다.\n    while (this.nextEventCode() === 401) {\n        this._index++;\n    }\n};\nGame_Interpreter.prototype.initLineHeight = function () {\n    this._lineHeight = 0;\n};\nGame_Interpreter.prototype.isMultiLine = function () {\n    return this.isValidMultiLine();\n};\nGame_Interpreter.prototype.addLineHeight = function () {\n    this._lineHeight++;\n    if (this.nextEventCode() === 101) {\n        this._index++;\n    }\n};\n//============================================================================\n// Window_NameBox\n//============================================================================\nWindow_NameBox.prototype.updatePlacement = function () {\n    this.width = this.windowWidth();\n    this.height = this.windowHeight();\n    const messageWindow = this._messageWindow;\n    if ($gameMessage.isRTL()) {\n        this.x = messageWindow.x + messageWindow.width - this.width;\n    }\n    else {\n        this.x = messageWindow.x;\n    }\n    if (messageWindow.y > 0) {\n        this.y = messageWindow.y - this.height;\n    }\n    else {\n        this.y = messageWindow.y + messageWindow.height;\n    }\n};\n//============================================================================\n// Game_Temp\n//============================================================================\nGame_Temp.prototype.setMSHeightFunc = function (func) {\n    this._callMSHeightFunc = func;\n};\nGame_Temp.prototype.setMaxLine = function (n) {\n    if (this._callMSHeightFunc)\n        this._callMSHeightFunc(n);\n};\n//============================================================================\n// Game_Map\n//============================================================================\nvar alias_Game_Map_initialize = Game_Map.prototype.initialize;\nGame_Map.prototype.initialize = function () {\n    alias_Game_Map_initialize.call(this);\n    this._msgOwner = $gamePlayer;\n    this._msgEvent = 0;\n};\nGame_Map.prototype.getMsgOwner = function () {\n    return this._msgOwner;\n};\n/**\n * @method setMsgOwner\n * @param o {Game_Event | Game_Player}\n */\nGame_Map.prototype.setMsgOwner = function (o) {\n    this._msgOwner = o;\n    $gameMessage.setBalloonPatternHeight(this.tileHeight());\n};\nGame_Map.prototype.getMsgEvent = function () {\n    return this._msgEvent;\n};\nGame_Map.prototype.setMsgEvent = function (ev) {\n    this._msgEvent = ev;\n};\nRS_1.RS.MessageSystem.initSystem();\nconst executor = ComponentExecutor_1.ComponentExecutor.getInstance();\nexecutor\n    .add(\"main\", () => {\n    console.log(\"run\");\n})\n    .active(\"main\")\n    .executeAll();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Color = exports.RS = void 0;\nconst pluginParams = $plugins.filter((i) => {\n    return i.description.contains(\"<RS_MessageSystem>\");\n});\nconst pluginName = ((pluginParams.length > 0 && pluginParams[0].name));\nconst parameters = ((pluginParams.length > 0 && pluginParams[0].parameters));\nexports.RS = {};\nexports.RS.MessageSystem = exports.RS.MessageSystem || {};\nexports.RS.MessageSystem.jsonParse = function (str) {\n    const retData = JSON.parse(str, (k, v) => {\n        try {\n            return exports.RS.MessageSystem.jsonParse(v);\n        }\n        catch (e) {\n            return v;\n        }\n    });\n    return retData;\n};\n/**\n * @method popParameter\n */\nexports.RS.MessageSystem.popParameter = function (...args) {\n    const k = Object.keys(args);\n    let lastUsed = \"\";\n    while (k.length > 0) {\n        lastUsed = args[parseInt(k.pop())];\n        // @ts-ignore\n        if (parameters[lastUsed])\n            return parameters[lastUsed];\n    }\n    return \"\";\n};\nexports.RS.MessageSystem.Reg = {\n    Default: [],\n    Group: [],\n    Korean: [],\n    Chinese: [],\n    English: [],\n    Japanese: [],\n};\nvar MessageParams;\n(function (MessageParams) {\n    MessageParams[MessageParams[\"FACE_START_ORIGIN_X\"] = 168] = \"FACE_START_ORIGIN_X\";\n    MessageParams[MessageParams[\"NAME_WINDOW_WIDTH\"] = 140] = \"NAME_WINDOW_WIDTH\";\n    MessageParams[MessageParams[\"NAME_WINDOW_ROWS\"] = 1] = \"NAME_WINDOW_ROWS\";\n    MessageParams[MessageParams[\"FONT_SIZE\"] = 28] = \"FONT_SIZE\";\n    MessageParams[MessageParams[\"STD_PADDING\"] = 18] = \"STD_PADDING\";\n})(MessageParams || (MessageParams = {}));\nexports.RS.MessageSystem.Params = {\n    faceStartOriginX: MessageParams.FACE_START_ORIGIN_X,\n    nameWindowWidth: MessageParams.NAME_WINDOW_WIDTH,\n    nameWindowRows: MessageParams.NAME_WINDOW_ROWS,\n    FONT_SIZE: MessageParams.FONT_SIZE,\n    STD_PADDING: MessageParams.STD_PADDING,\n    isValidShakingChoice: false,\n    fontSize: Number(exports.RS.MessageSystem.popParameter(\"Font Size\", \"글꼴 크기\") || 28),\n    textSpeed: Number(exports.RS.MessageSystem.popParameter(\"Text Speed\", \"기본 텍스트 출력 속도\") ||\n        0),\n    minFontSize: Number(exports.RS.MessageSystem.popParameter(\"Text Min Size\", \"폰트 최소 크기\") || 24),\n    maxFontSize: Number(exports.RS.MessageSystem.popParameter(\"Text Max Size\", \"폰트 최대 크기\") || 96),\n    textStartX: Number(exports.RS.MessageSystem.popParameter(\"Text Start X\", \"텍스트 시작 X\")),\n    numVisibleRows: Number(exports.RS.MessageSystem.popParameter(\"numVisibleRows\", \"라인 갯수\") || 4),\n    gradientColor1: String(exports.RS.MessageSystem.popParameter(\"gradientColor1\", \"그레디언트 시작 색상\") || \"#FFFFFF\"),\n    gradientColor2: String(exports.RS.MessageSystem.popParameter(\"gradientColor2\", \"그레디언트 중간 색상\") || \"#F29661\"),\n    gradientColor3: String(exports.RS.MessageSystem.popParameter(\"gradientColor3\", \"그레디언트 끝 색상\") ||\n        \"#CC3D3D\"),\n    nameWindowX: Number(exports.RS.MessageSystem.popParameter(\"Name Window X\", \"이름 윈도우 X\") || 0),\n    nameWindowY: Number(exports.RS.MessageSystem.popParameter(\"Name Window Y\", \"이름 윈도우 Y\") || 0),\n    nameWindowStdPadding: Number(exports.RS.MessageSystem.popParameter(\"Name Window Inner Padding\", \"이름 윈도우 안쪽 여백\") || 18),\n    namePositionTypeAtX: exports.RS.MessageSystem.popParameter(\"Name Window Position\", \"이름 윈도우 위치\") || \"left\",\n    faceOX: Number(exports.RS.MessageSystem.popParameter(\"Big Face OX\", \"큰 페이스칩 OX\") || 0),\n    faceOY: Number(exports.RS.MessageSystem.popParameter(\"Big Face OY\", \"큰 페이스칩 OY\") || 0),\n    faceSide: Boolean(exports.RS.MessageSystem.popParameter(\"Show Big Face Back\", \"대화창 뒤에 얼굴 표시\") === \"true\" || false),\n    WIDTH: MessageParams.FONT_SIZE * 6 + MessageParams.STD_PADDING,\n    HEIGHT: MessageParams.FONT_SIZE + MessageParams.STD_PADDING / 2,\n    TabSize: Number(exports.RS.MessageSystem.popParameter(\"Tab Size\", \"탭 크기\")),\n    backOpacity: Number(exports.RS.MessageSystem.popParameter(\"back Opacity\", \"배경 그림의 투명도\")),\n    translucentOpacity: Number(exports.RS.MessageSystem.popParameter(\"translucent Opacity\", \"반투명도\")),\n    defaultOpacity: Number(exports.RS.MessageSystem.popParameter(\"default Opacity\", \"기본 투명도\")),\n    contentsOpacity: Number(exports.RS.MessageSystem.popParameter(\"contents Opacity\", \"내용의 투명도\")),\n    defaultOutlineWidth: Number(exports.RS.MessageSystem.popParameter(\"default outline width\", \"테두리 크기\")),\n    defaultOutlineColor: exports.RS.MessageSystem.popParameter(\"default outline Color\", \"테두리 색상\") ||\n        \"white\",\n    fonts: {\n        default: \"rmmz-mainfont\",\n    },\n};\n(() => {\n    const systemFonts = exports.RS.MessageSystem.jsonParse(parameters[\"systemFont\"]);\n    if (!exports.RS.MessageSystem.Params.fonts)\n        return;\n    // ! 여기서부터 변환 시작해야함\n    systemFonts.settings.forEach((i) => {\n        const params = {};\n        params[i.languageCode] = i.fontName;\n        Object.assign(exports.RS.MessageSystem.Params.fonts, params);\n    });\n})();\nObject.assign(exports.RS.MessageSystem.Params, {\n    isTempSpriteContainerVisibility: false,\n    lineHeight: 36,\n    windowOffset: new Point(0, 0),\n    fontSmoothingEnabled: true,\n    customFont: Boolean(exports.RS.MessageSystem.popParameter(\"Using Custom Font\", \"사용자 지정 폰트 사용 여부\") === \"true\"),\n    customFontName: String(exports.RS.MessageSystem.popParameter(\"Custom Font Name\", \"사용자 지정 폰트명\") || \"GameFont\"),\n    customFontSrc: String(exports.RS.MessageSystem.popParameter(\"Custom Font Src\", \"사용자 지정 폰트 경로\") || \"fonts/mplus-1m-regular.ttf\"),\n    windowskin: exports.RS.MessageSystem.popParameter(\"Default Windowskin\", \"기본 윈도우스킨\") || \"Window\",\n    windowskinForNameWindow: exports.RS.MessageSystem.popParameter(\"Name Windowskin\", \"이름 윈도우스킨\") ||\n        \"Window\",\n    choiceWindowStyle: String(exports.RS.MessageSystem.popParameter(\"Choice Style\", \"선택지 스타일\") ||\n        \"default\"),\n    defaultChoicePostion: parameters[\"Default Choice Position\"] || \"right\",\n    exTextColors: exports.RS.MessageSystem.jsonParse(exports.RS.MessageSystem.popParameter(\"Text Color\", \"텍스트 색상\")),\n    isPlayTextSound: Boolean(exports.RS.MessageSystem.popParameter(\"Text Sound ON/OFF\", \"텍스트 효과음 재생 여부\") === \"true\"),\n    pathTextSound: String(exports.RS.MessageSystem.popParameter(\"Text Sound\", \"텍스트 효과음\") ||\n        \"Cursor1.ogg\"),\n    textSoundEval1: exports.RS.MessageSystem.jsonParse(exports.RS.MessageSystem.popParameter(\"Text Sound Execution Condition\", \"텍스트 효과음 실행 조건\") || \"Math.randomInt(100) < 45\"),\n    textSoundEval2: exports.RS.MessageSystem.jsonParse(exports.RS.MessageSystem.popParameter(\"Text Sound Volume\", \"텍스트 효과음 볼륨\") || \"(0.4 + (RS.MessageSystem.randomNormal(0.8)[0])).clamp(0.0, 0.8)\"),\n    textSoundInterval: parseInt(exports.RS.MessageSystem.popParameter(\"Text Sound Interval\", \"텍스트 사운드 재생 간격\")),\n    textSoundPoolSize: parseInt(exports.RS.MessageSystem.popParameter(\"텍스트 사운드 풀 크기\", \"Text Sound Pool Size\") || 6),\n    langCode: exports.RS.MessageSystem.popParameter(\"언어 코드\", \"Language Code\") || \"ko\",\n    preloadWindowskins: JSON.parse(parameters[\"preload windowskin\"] || \"[]\"),\n    isParagraphMinifier: Boolean(parameters[\"Paragraph Minifier\"] === \"true\"),\n    gradientStyle: parameters[\"Gradient Style\"],\n    faceOpacity: parseInt(parameters[\"face Opacity\"] || 21),\n    faceDirection: parseInt(parameters[\"face Direction\"] || 0),\n});\n//============================================================================\n// Lazy Initialize Parameters (느린 초기화)\n//============================================================================\nvar alias_Game_Temp_initialize = Game_Temp.prototype.initialize;\nGame_Temp.prototype.initialize = function () {\n    alias_Game_Temp_initialize.call(this);\n    exports.RS.MessageSystem.Params.windowWidth =\n        eval(parameters[\"Window Width\"]) || Graphics.boxWidth;\n};\n//============================================================================\n// Multiple Language supports\n//============================================================================\nexports.RS.MessageSystem.Reg.KoreanEscapeCode =\n    /^[\\$\\.\\|\\^!><\\{\\}\\\\]|^[a-zA-Z가-힣]+[!]*/i;\nexports.RS.MessageSystem.Reg.ChineseEscapeCode =\n    /^[\\$\\.\\|\\^!><\\{\\}\\\\]|^[a-zA-Z一-鼣]+[!]*/i;\nexports.RS.MessageSystem.Reg.EnglishEscapeCode = /^[\\$\\.\\|\\^!><\\{\\}\\\\]|^[A-Z]+[!]*/i;\nexports.RS.MessageSystem.Reg.JapaneseEscapeCode =\n    /^[\\$\\.\\|\\^!><\\{\\}\\\\]|^[A-Z\\u3040-\\u309F\\u30A0-\\u30FF\\u3300-\\u33FF\\u4E00-\\u9FFF\\uFF00-\\uFFEF]+[!]*/i;\nexports.RS.MessageSystem.Reg.defaultEscapeCode =\n    /^[\\$\\.\\|\\^!><\\{\\}\\\\]|^[A-Z가-힣]+[!]*/i;\nexports.RS.MessageSystem.TextCodes = (function () {\n    const rowData = exports.RS.MessageSystem.popParameter(\"Text Code\", \"텍스트 코드\");\n    const data = JSON.parse(rowData);\n    const retData = {};\n    retData.Korean = [undefined].concat(JSON.parse(data.Korean));\n    retData.Chinese = [undefined].concat(JSON.parse(data.Chinese));\n    retData.English = [undefined].concat(JSON.parse(data.English));\n    retData.Japanese = [undefined].concat(JSON.parse(data.Japanese));\n    return retData;\n})();\nexports.RS.MessageSystem.TextCodes.Main = [];\nexports.RS.MessageSystem.TextCodes.ENUM = {\n    COLOR: 1,\n    TEXT_SPEED: 2,\n    OUTLINE_COLOR: 3,\n    OUTLINE_WIDTH: 4,\n    INDENT: 5,\n    BOLD: 6,\n    ITALIC: 7,\n    NAME: 8,\n    GRADIENT: 9,\n    PARTY_MEMBER: 10,\n    PLAYER: 11,\n    VAR: 12,\n    ICON: 13,\n    INCREASE: 14,\n    DECREASE: 15,\n    GOLD: 16,\n    BALLOON: 17,\n    ALIGN: 18,\n    NUM: 19,\n    TEXT_SIZE: 20,\n    TAB: 21,\n    CARRIAGE_RETURN: 22,\n    PLAY_SE: 23,\n    SHOW_PICTURE: 24,\n    HIDE_PICTURE: 25,\n    ITEM: 26,\n    WEAPON: 27,\n    ARMOR: 28,\n    CLASSES: 29,\n    ENEMY: 30,\n    STATE: 31,\n    SKILL: 32,\n    FACE: 33,\n    FRIENDLY_TROOPS: 34,\n    ENEMY_TROOPS: 35,\n    WAIT_SEC_15: 36,\n    WAIT_SEC_60: 37,\n    START_PAUSE: 38,\n    LINE_SHOW_FAST_LT: 39,\n    LINE_SHOW_FAST_GT: 40,\n    PAUSE_SKIP: 41,\n    BOLD_START: 42,\n    BOLD_END: 43,\n    ITALIC_START: 44,\n    ITALIC_END: 45,\n    ALIGN_LEFT: 46,\n    ALIGN_CENTER: 47,\n    ALIGN_RIGHT: 48,\n    BOLD_START_CV: 49,\n    BOLD_END_CV: 50,\n    ITALIC_START_CV: 51,\n    ITALIC_END_CV: 52,\n    ALIGN_CLEAR: 53,\n    HIGHLIGHT_TEXT_COLOR: 54,\n    FACE_DIRECTION: 55,\n};\n/**\n * 주어진 ID 값으로 텍스트 코드를 현지화하여 반환합니다.\n * @param {Number} idx\n */\nexports.RS.MessageSystem.getTextCode = function (idx) {\n    const langCode = exports.RS.MessageSystem.Params.langCode;\n    if (langCode.match(/ko/)) {\n        return exports.RS.MessageSystem.TextCodes[\"Korean\"][idx];\n    }\n    if (langCode.match(/zh/)) {\n        return exports.RS.MessageSystem.TextCodes[\"Chinese\"][idx];\n    }\n    if (langCode.match(/en/)) {\n        return exports.RS.MessageSystem.TextCodes[\"English\"][idx];\n    }\n    if (langCode.match(/ja/)) {\n        return exports.RS.MessageSystem.TextCodes[\"Japanese\"][idx];\n    }\n    return exports.RS.MessageSystem.TextCodes[\"English\"][idx];\n};\n/**\n * 노트 태그를 읽습니다.\n * @memberof RS.MessageSystem\n * @param {Number} eventId\n * @return {Object} meta\n */\nexports.RS.MessageSystem.getEventComments = function (eventId, index) {\n    let data = {\n        note: \"\",\n        meta: {},\n    };\n    try {\n        // 리스트를 가져옵니다.\n        let list = $gameMap.event(eventId).list();\n        // 바로 이전 인덱스에 노트 태그가 있었는 지 확인합니다.\n        if (index < 0)\n            index = 0;\n        // 부모 이벤트 없이 호출되는 공통 이벤트가 있는 지 확인합니다.\n        if (eventId <= 0) {\n            var commonEvent = $gameTemp.reservedCommonEvent();\n            if (commonEvent) {\n                list = commonEvent.list;\n                // 공통 이벤트는 한 번 설치된 후 클리어되므로 목록을 두 번 읽을 순 없으므로 예외 처리\n                if (!list) {\n                    return data;\n                }\n            }\n        }\n        let param = list[index];\n        // 코멘트를 읽어옵니다.\n        while (param && [108, 408].contains(param.code)) {\n            data.note += param.parameters[0] + \"\\r\\n\";\n            index--;\n            param = list[index];\n        }\n        if (param && param.code === 108) {\n            data.note += param.parameters[0] + \"\\r\\n\";\n            index--;\n            param = list[index];\n            while (param.code === 408) {\n                data.note += param.parameters[0] + \"\\r\\n\";\n                index--;\n                param = list[index];\n            }\n            if (param.code === 108) {\n                data.note += param.parameters[0] + \"\\r\\n\";\n            }\n        }\n        // 노트 태그를 추출합니다 (DataManager.extractMetadata의 변형입니다)\n        const re = /<([^<>:]+)(:?)([^>]*)>/g;\n        data.meta = {};\n        for (;;) {\n            const match = re.exec(data.note);\n            if (match) {\n                if (match[2] === \":\") {\n                    data.meta[match[1].trim()] = match[3];\n                }\n                else {\n                    data.meta[match[1].trim()] = true;\n                }\n            }\n            else {\n                break;\n            }\n        }\n    }\n    catch (e) {\n        // 리스트를 읽지 못할 경우 try-catch 문에 의해 예외 처리가 됩니다.\n        return {\n            note: \"\",\n            meta: {},\n        };\n    }\n    return data.meta;\n};\n(() => {\n    \"use strict\";\n    var regData = [\"Korean\", \"English\", \"Chinese\", \"Japanese\"];\n    regData.forEach(function (e, i, a) {\n        var tcGroup = exports.RS.MessageSystem.TextCodes[e];\n        tcGroup = tcGroup.map((e, i, a) => {\n            if (e === undefined)\n                return;\n            var data = [];\n            var ret = \"\";\n            for (var str of e) {\n                if (/[a-zA-Z]/i) {\n                    data.push(str);\n                    continue;\n                }\n                var text = str.charCodeAt().toString(16);\n                data.push(\"\\\\u\" + \"{\" + text + \"}\");\n            }\n            ret = data.join(\"\");\n            return ret;\n        });\n        exports.RS.MessageSystem.Reg[e][0] = undefined;\n        exports.RS.MessageSystem.Reg[e][1] = new RegExp(`(?:\\x1bC|\\x1b${tcGroup[1]})\\\\[(.+?)\\\\]`, \"gi\"); // 색\n        exports.RS.MessageSystem.Reg[e][2] = new RegExp(`\\x1b${tcGroup[2]}\\\\[(\\\\d+)\\\\]`, \"gi\"); // 속도\n        exports.RS.MessageSystem.Reg[e][3] = new RegExp(`\\x1b${tcGroup[3]}\\\\[(.+?)\\\\]`, \"gi\"); // 테두리색\n        exports.RS.MessageSystem.Reg[e][4] = new RegExp(`\\x1b${tcGroup[4]}\\\\[(\\\\d+)\\\\]`, \"gi\"); // 테두리크기\n        exports.RS.MessageSystem.Reg[e][5] = new RegExp(`\\x1b${tcGroup[5]}\\\\[(\\\\d+)\\\\]`, \"gi\"); // 들여쓰기\n        exports.RS.MessageSystem.Reg[e][6] = new RegExp(`\\x1b${tcGroup[6]}`, \"gi\"); // 굵게!\n        exports.RS.MessageSystem.Reg[e][7] = new RegExp(`\\x1b${tcGroup[7]}`, \"gi\"); // 이탤릭!\n        exports.RS.MessageSystem.Reg[e][8] = new RegExp(`\\x1b${tcGroup[8]}\\\\<(.+?)\\\\>`, \"gi\"); // 이름\n        exports.RS.MessageSystem.Reg[e][9] = new RegExp(`\\x1b${tcGroup[9]}\\\\<(.+)\\\\>`, \"gi\"); // 그레디언트\n        exports.RS.MessageSystem.Reg[e][10] = new RegExp(`(?:\\x1bP|\\x1b${tcGroup[10]})\\\\[(\\\\d+)\\\\]`, \"gi\"); // 파티원\n        exports.RS.MessageSystem.Reg[e][11] = new RegExp(`(?:\\x1bN|\\x1b${tcGroup[11]})\\\\[(\\\\d+)\\\\]`, \"gi\"); // 주인공\n        exports.RS.MessageSystem.Reg[e][12] = new RegExp(`(?:\\x1bV|\\x1b${tcGroup[12]})\\\\[(\\\\d+)\\\\]`, \"gi\"); // 변수\n        exports.RS.MessageSystem.Reg[e][13] = new RegExp(`(?:\\x1bI|\\x1b${tcGroup[13]})\\\\[(\\\\d+)\\\\]`, \"g\"); // 아이콘\n        exports.RS.MessageSystem.Reg[e][14] = new RegExp(`(?:\\x1b{|\\x1b${tcGroup[14]})`, \"gi\"); // 확대!\n        exports.RS.MessageSystem.Reg[e][15] = new RegExp(`(?:\\x1b}|\\x1b${tcGroup[15]})`, \"gi\"); // 축소!\n        exports.RS.MessageSystem.Reg[e][16] = new RegExp(`(?:\\x1bG|\\x1b${tcGroup[16]})`, \"gi\"); // 골드\n        exports.RS.MessageSystem.Reg[e][17] = new RegExp(`\\x1b${tcGroup[17]}\\\\[(.*?)\\\\]`, \"gi\"); // 말풍선\n        exports.RS.MessageSystem.Reg[e][18] = new RegExp(`\\x1b${tcGroup[18]}\\\\[(\\\\d+)\\\\]`, \"gi\"); // 정렬자\n        exports.RS.MessageSystem.Reg[e][19] = new RegExp(`\\x1b${tcGroup[19]}\\\\[(\\\\d+)\\\\]`, \"gi\"); // 숫자\n        exports.RS.MessageSystem.Reg[e][20] = new RegExp(`\\x1b${tcGroup[20]}\\\\[(\\\\d+)\\\\]`, \"gi\"); // 크기\n        exports.RS.MessageSystem.Reg[e][21] = new RegExp(`\\x1b${tcGroup[21]}`, \"gi\"); // r\n        exports.RS.MessageSystem.Reg[e][22] = new RegExp(`\\x1b${tcGroup[22]}`, \"gi\"); // t\n        exports.RS.MessageSystem.Reg[e][23] = new RegExp(`\\x1b${tcGroup[23]}\\\\<(.+?)\\\\>`, \"gi\"); // 효과음\n        exports.RS.MessageSystem.Reg[e][24] = new RegExp(`\\x1b${tcGroup[24]}\\\\<(.+?)\\\\>`, \"gi\"); // 그림 표시\n        exports.RS.MessageSystem.Reg[e][25] = new RegExp(`\\x1b${tcGroup[25]}\\\\[(\\\\d+)\\\\]`, \"gi\"); // 그림 제거\n        exports.RS.MessageSystem.Reg[e][26] = new RegExp(`(?:\\x1b${tcGroup[26]})\\\\[(\\\\d+)\\\\]`, \"g\"); // 아이템\n        exports.RS.MessageSystem.Reg[e][27] = new RegExp(`(?:\\x1b${tcGroup[27]})\\\\[(\\\\d+)\\\\]`, \"g\"); // 무기구\n        exports.RS.MessageSystem.Reg[e][28] = new RegExp(`(?:\\x1b${tcGroup[28]})\\\\[(\\\\d+)\\\\]`, \"g\"); // 방어구\n        exports.RS.MessageSystem.Reg[e][29] = new RegExp(`(?:\\x1b${tcGroup[29]})\\\\[(\\\\d+)\\\\]`, \"g\"); // 직업\n        exports.RS.MessageSystem.Reg[e][30] = new RegExp(`(?:\\x1b${tcGroup[30]})\\\\[(\\\\d+)\\\\]`, \"g\"); // 적군\n        exports.RS.MessageSystem.Reg[e][31] = new RegExp(`(?:\\x1b${tcGroup[31]})\\\\[(\\\\d+)\\\\]`, \"g\"); // 상태\n        exports.RS.MessageSystem.Reg[e][32] = new RegExp(`(?:\\x1b${tcGroup[32]})\\\\[(\\\\d+)\\\\]`, \"g\"); // 스킬\n        exports.RS.MessageSystem.Reg[e][33] = new RegExp(`\\x1b${tcGroup[33]}\\\\<(.*)\\\\>`, \"gi\"); // 얼굴\n        exports.RS.MessageSystem.Reg[e][34] = new RegExp(`(?:\\x1b${tcGroup[34]})\\\\[(\\\\d+)\\\\]`, \"gi\"); // 아군\n        exports.RS.MessageSystem.Reg[e][35] = new RegExp(`(?:\\x1b${tcGroup[35]})\\\\[(\\\\d+)\\\\]`, \"gi\"); // 적군\n        exports.RS.MessageSystem.Reg[e][36] = new RegExp(`\\x1b${tcGroup[36]}`, \"gi\"); // [.]\n        exports.RS.MessageSystem.Reg[e][37] = new RegExp(`\\x1b${tcGroup[37]}`, \"gi\"); // [|]\n        exports.RS.MessageSystem.Reg[e][38] = new RegExp(`\\x1b${tcGroup[38]}`, \"gi\"); // [!]\n        exports.RS.MessageSystem.Reg[e][39] = new RegExp(`\\x1b${tcGroup[39]}`, \"gi\"); // [<]\n        exports.RS.MessageSystem.Reg[e][40] = new RegExp(`\\x1b${tcGroup[40]}`, \"gi\"); // [>]\n        exports.RS.MessageSystem.Reg[e][41] = new RegExp(`\\x1b${tcGroup[41]}`, \"gi\"); // [\\^]\n        exports.RS.MessageSystem.Reg[e][42] = new RegExp(`\\x1b${tcGroup[42]}`, \"gi\"); // AS굵게!\n        exports.RS.MessageSystem.Reg[e][43] = new RegExp(`\\x1b${tcGroup[43]}`, \"gi\"); // AE굵게!\n        exports.RS.MessageSystem.Reg[e][44] = new RegExp(`\\x1b${tcGroup[44]}`, \"gi\"); // AS이탤릭!\n        exports.RS.MessageSystem.Reg[e][45] = new RegExp(`\\x1b${tcGroup[45]}`, \"gi\"); // AE이탤릭!\n        exports.RS.MessageSystem.Reg[e][46] = new RegExp(`(?:<${tcGroup[46]}>)`, \"gi\"); // LEFT\n        exports.RS.MessageSystem.Reg[e][47] = new RegExp(`(?:<${tcGroup[47]}>)`, \"gi\"); // CENTER\n        exports.RS.MessageSystem.Reg[e][48] = new RegExp(`(?:<${tcGroup[48]}>)`, \"gi\"); // RIGHT\n        exports.RS.MessageSystem.Reg[e][49] = new RegExp(`(?:<[${tcGroup[49]}]>)`, \"gi\"); // B\n        exports.RS.MessageSystem.Reg[e][50] = new RegExp(`(?:<\\/[${tcGroup[50]}]>)`, \"gi\"); // B\n        exports.RS.MessageSystem.Reg[e][51] = new RegExp(`(?:<[${tcGroup[51]}]>)`, \"gi\"); // I\n        exports.RS.MessageSystem.Reg[e][52] = new RegExp(`(?:<\\/[${tcGroup[52]}]>)`, \"gi\"); // I\n        exports.RS.MessageSystem.Reg[e][53] = new RegExp(`\\x1b${tcGroup[53]}`, \"gi\"); // AEND : ALIGN_CLEAR\n        exports.RS.MessageSystem.Reg[e][54] = new RegExp(`\\x1b${tcGroup[54]}\\\\[(.*)\\\\]`, \"gi\"); // \\배경색[색상] \\HC[색상]\n        exports.RS.MessageSystem.Reg[e][55] = new RegExp(`\\x1b${tcGroup[55]}\\\\[(\\\\d+)\\\\]`, \"gi\"); // \\FD\n    });\n})();\nexports.RS.MessageSystem.initSystem = function () {\n    var type = exports.RS.MessageSystem.Params.langCode;\n    var ret = false;\n    if (type.match(/ko/)) {\n        exports.RS.MessageSystem.Reg.Group = exports.RS.MessageSystem.Reg.Korean;\n        exports.RS.MessageSystem.Reg.defaultEscapeCode =\n            exports.RS.MessageSystem.Reg.KoreanEscapeCode;\n        exports.RS.MessageSystem.TextCodes.Main = exports.RS.MessageSystem.TextCodes.Korean;\n        ret = true;\n    }\n    if (type.match(/zh/)) {\n        exports.RS.MessageSystem.Reg.Group = exports.RS.MessageSystem.Reg.Chinese;\n        exports.RS.MessageSystem.Reg.defaultEscapeCode =\n            exports.RS.MessageSystem.Reg.ChineseEscapeCode;\n        exports.RS.MessageSystem.TextCodes.Main = exports.RS.MessageSystem.TextCodes.Chinese;\n        ret = true;\n    }\n    if (type.match(/en/)) {\n        exports.RS.MessageSystem.Reg.Group = exports.RS.MessageSystem.Reg.English;\n        exports.RS.MessageSystem.Reg.defaultEscapeCode =\n            exports.RS.MessageSystem.Reg.EnglishEscapeCode;\n        exports.RS.MessageSystem.TextCodes.Main = exports.RS.MessageSystem.TextCodes.English;\n        ret = true;\n    }\n    if (type.match(/ja/)) {\n        exports.RS.MessageSystem.Reg.Group = exports.RS.MessageSystem.Reg.Japanese;\n        exports.RS.MessageSystem.Reg.defaultEscapeCode =\n            exports.RS.MessageSystem.Reg.JapaneseEscapeCode;\n        exports.RS.MessageSystem.TextCodes.Main = exports.RS.MessageSystem.TextCodes.Japanese;\n        ret = true;\n    }\n    if (ret === false) {\n        exports.RS.MessageSystem.Reg.Group = exports.RS.MessageSystem.Reg.English;\n        exports.RS.MessageSystem.Reg.defaultEscapeCode =\n            exports.RS.MessageSystem.Reg.EnglishEscapeCode;\n        exports.RS.MessageSystem.TextCodes.Main = exports.RS.MessageSystem.TextCodes.English;\n    }\n};\nexports.Color = {};\nexports.Color.getColor = function (n) {\n    var r = n & 255;\n    var g = (n >> 8) & 255;\n    var b = (n >> 16) & 255;\n    var result = `rgba(${r},${g},${b},1)`;\n    return result;\n};\nexports.Color.baseColor = exports.Color.getColor(16777215);\nexports.Color.getBaseColor = function () {\n    return exports.Color.baseColor;\n};\nexports.Color.getUserCustomColor = function (str) {\n    \"use strict\";\n    var obj = exports.RS.MessageSystem.Params.exTextColors;\n    var ret = str;\n    if (!(typeof obj[0] === \"object\"))\n        return ret;\n    if (!obj[0].hasOwnProperty(\"Color Name\"))\n        return ret;\n    obj.forEach((e, i, arr) => {\n        if (e[\"Color Name\"] === str) {\n            var r = parseInt(e[\"Red\"]) || 0;\n            var g = parseInt(e[\"Green\"]) || 0;\n            var b = parseInt(e[\"Blue\"]) || 0;\n            var a = parseFloat(e[\"Alpha\"]) || 1.0;\n            ret = `rgba(${r},${g},${b},${a})`;\n        }\n    });\n    return ret;\n};\nconst KOREAN_COLORS = {\n    청록: \"rgba(0,255,255,1)\",\n    청록색: \"rgba(0,255,255,1)\",\n    c_aqua: \"rgba(0,255,255,1)\",\n    검은색: \"rgba(0,0,0,1)\",\n    검정: \"rgba(0,0,0,1)\",\n    c_black: \"rgba(0,0,0,1)\",\n    파란색: \"rgba(0,0,255,1)\",\n    파랑: \"rgba(0,0,255,1)\",\n    c_blue: \"rgba(0,0,255,1)\",\n    짙은회색: \"rgba(64,64,64,1)\",\n    c_dkgray: \"rgba(64,64,64,1)\",\n    자홍색: \"rgba(255,0,255,1)\",\n    자홍: \"rgba(255,0,255,1)\",\n    c_fuchsia: \"rgba(255,0,255,1)\",\n    회색: \"rgba(128,128,128,1)\",\n    c_gray: \"rgba(128,128,128,1)\",\n    녹색: \"rgba(0,128,0,1)\",\n    c_green: \"rgba(0,128,0,1)\",\n    밝은녹색: \"rgba(0,255,0,1)\",\n    라임: \"rgba(0,255,0,1)\",\n    c_lime: \"rgba(0,255,0,1)\",\n    밝은회색: \"rgba(192,192,192,1)\",\n    c_ltgray: \"rgba(192,192,192,1)\",\n    밤색: \"rgba(128,0,0,1)\",\n    마룬: \"rgba(128,0,0,1)\",\n    c_maroon: \"rgba(128,0,0,1)\",\n    감청색: \"rgba(0,0,128,1)\",\n    네이비: \"rgba(0,0,128,1)\",\n    c_navy: \"rgba(0,0,128,1)\",\n    황록색: \"rgba(128,128,0,1)\",\n    올리브: \"rgba(128,128,0,1)\",\n    c_olive: \"rgba(128,128,0,1)\",\n    주황색: \"rgba(255,160,64,1)\",\n    주황: \"rgba(255,160,64,1)\",\n    오렌지: \"rgba(255,160,64,1)\",\n    c_orange: \"rgba(255,160,64,1)\",\n    보라색: \"rgba(128,0,128,1)\",\n    보라: \"rgba(128,0,128,1)\",\n    c_purple: \"rgba(128,0,128,1)\",\n    빨간색: \"rgba(255,0,0,1)\",\n    빨강: \"rgba(255,0,0,1)\",\n    c_red: \"rgba(255,0,0,1)\",\n    은색: \"rgba(192,192,192,1)\",\n    은: \"rgba(192,192,192,1)\",\n    c_silver: \"rgba(192,192,192,1)\",\n    민트색: \"rgba(0,128,128,1)\",\n    c_teal: \"rgba(0,128,128,1)\",\n    흰색: \"rgba(255,255,255,1)\",\n    흰: \"rgba(255,255,255,1)\",\n    c_white: \"rgba(255,255,255,1)\",\n    노란색: \"rgba(255,255,0,1)\",\n    노랑: \"rgba(255,255,0,1)\",\n    c_yellow: \"rgba(255,255,0,1)\",\n};\nconst CHINESE_COLOR = {\n    水色: \"rgba(0,255,255,1)\",\n    c_aqua: \"rgba(0,255,255,1)\",\n    黑色: \"rgba(0,0,0,1)\",\n    c_black: \"rgba(0,0,0,1)\",\n    蓝色: \"rgba(0,0,255,1)\",\n    c_blue: \"rgba(0,0,255,1)\",\n    深灰色: \"rgba(64,64,64,1)\",\n    c_dkgray: \"rgba(64,64,64,1)\",\n    紫红色: \"rgba(255,0,255,1)\",\n    c_fuchsia: \"rgba(255,0,255,1)\",\n    灰色: \"rgba(128,128,128,1)\",\n    c_gray: \"rgba(128,128,128,1)\",\n    绿色: \"rgba(0,128,0,1)\",\n    c_green: \"rgba(0,128,0,1)\",\n    浅绿色: \"rgba(0,255,0,1)\",\n    c_lime: \"rgba(0,255,0,1)\",\n    浅灰色: \"rgba(192,192,192,1)\",\n    c_ltgray: \"rgba(192,192,192,1)\",\n    栗色: \"rgba(128,0,0,1)\",\n    c_maroon: \"rgba(128,0,0,1)\",\n    绀青色: \"rgba(0,0,128,1)\",\n    c_navy: \"rgba(0,0,128,1)\",\n    黄绿色: \"rgba(128,128,0,1)\",\n    c_olive: \"rgba(128,128,0,1)\",\n    橙黄色: \"rgba(255,160,64,1)\",\n    c_orange: \"rgba(255,160,64,1)\",\n    紫色: \"rgba(128,0,128,1)\",\n    c_purple: \"rgba(128,0,128,1)\",\n    红色: \"rgba(255,0,0,1)\",\n    c_red: \"rgba(255,0,0,1)\",\n    银白色: \"rgba(192,192,192,1)\",\n    c_silver: \"rgba(192,192,192,1)\",\n    水鸭色: \"rgba(0,128,128,1)\",\n    c_teal: \"rgba(0,128,128,1)\",\n    白色: \"rgba(255,255,255,1)\",\n    c_white: \"rgba(255,255,255,1)\",\n    黄色: \"rgba(255,255,0,1)\",\n    c_yellow: \"rgba(255,255,0,1)\",\n};\nconst ENGLISH_COLOR = {\n    AQUA: \"rgba(0,255,255,1)\",\n    c_aqua: \"rgba(0,255,255,1)\",\n    BLACK: \"rgba(0,0,0,1)\",\n    c_black: \"rgba(0,0,0,1)\",\n    BLUE: \"rgba(0,0,255,1)\",\n    c_blue: \"rgba(0,0,255,1)\",\n    DKGRAY: \"rgba(64,64,64,1)\",\n    c_dkgray: \"rgba(64,64,64,1)\",\n    FUCHSIA: \"rgba(255,0,255,1)\",\n    c_fuchsia: \"rgba(255,0,255,1)\",\n    GRAY: \"rgba(128,128,128,1)\",\n    c_gray: \"rgba(128,128,128,1)\",\n    GREEN: \"rgba(0,128,0,1)\",\n    c_green: \"rgba(0,128,0,1)\",\n    LIME: \"rgba(0,255,0,1)\",\n    c_lime: \"rgba(0,255,0,1)\",\n    LTGRAY: \"rgba(192,192,192,1)\",\n    c_ltgray: \"rgba(192,192,192,1)\",\n    MAROON: \"rgba(128,0,0,1)\",\n    c_maroon: \"rgba(128,0,0,1)\",\n    NAVY: \"rgba(0,0,128,1)\",\n    c_navy: \"rgba(0,0,128,1)\",\n    OLIVE: \"rgba(128,128,0,1)\",\n    c_olive: \"rgba(128,128,0,1)\",\n    ORANGE: \"rgba(255,160,64,1)\",\n    c_orange: \"rgba(255,160,64,1)\",\n    PURPLE: \"rgba(128,0,128,1)\",\n    c_purple: \"rgba(128,0,128,1)\",\n    RED: \"rgba(255,0,0,1)\",\n    c_red: \"rgba(255,0,0,1)\",\n    SILVER: \"rgba(192,192,192,1)\",\n    c_silver: \"rgba(192,192,192,1)\",\n    TEAL: \"rgba(0,128,128,1)\",\n    c_teal: \"rgba(0,128,128,1)\",\n    WHITE: \"rgba(255,255,255,1)\",\n    c_white: \"rgba(255,255,255,1)\",\n    YELLOW: \"rgba(255,255,0,1)\",\n    c_yellow: \"rgba(255,255,0,1)\",\n};\nconst JAPANESE_COLOR = {\n    水色: \"rgba(0,255,255,1)\",\n    アクア色: \"rgba(0,255,255,1)\",\n    c_aqua: \"rgba(0,255,255,1)\",\n    黑色: \"rgba(0,0,0,1)\",\n    c_black: \"rgba(0,0,0,1)\",\n    靑色: \"rgba(0,0,255,1)\",\n    c_blue: \"rgba(0,0,255,1)\",\n    ふか灰色: \"rgba(64,64,64,1)\",\n    c_dkgray: \"rgba(64,64,64,1)\",\n    紫紅色: \"rgba(255,0,255,1)\",\n    c_fuchsia: \"rgba(255,0,255,1)\",\n    灰色: \"rgba(128,128,128,1)\",\n    c_gray: \"rgba(128,128,128,1)\",\n    綠色: \"rgba(0,128,0,1)\",\n    c_green: \"rgba(0,128,0,1)\",\n    黃綠: \"rgba(0,255,0,1)\",\n    c_lime: \"rgba(0,255,0,1)\",\n    鼠色: \"rgba(192,192,192,1)\",\n    c_ltgray: \"rgba(192,192,192,1)\",\n    \"―色\": \"rgba(128,0,0,1)\",\n    c_maroon: \"rgba(128,0,0,1)\",\n    群青色: \"rgba(0,0,128,1)\",\n    ネイビー: \"rgba(0,0,128,1)\",\n    c_navy: \"rgba(0,0,128,1)\",\n    黃綠色: \"rgba(128,128,0,1)\",\n    オリーブ色: \"rgba(128,128,0,1)\",\n    c_olive: \"rgba(128,128,0,1)\",\n    橙色: \"rgba(255,160,64,1)\",\n    オレンジ色: \"rgba(255,160,64,1)\",\n    c_orange: \"rgba(255,160,64,1)\",\n    紫色: \"rgba(128,0,128,1)\",\n    c_purple: \"rgba(128,0,128,1)\",\n    赤色: \"rgba(255,0,0,1)\",\n    レッド: \"rgba(255,0,0,1)\",\n    c_red: \"rgba(255,0,0,1)\",\n    銀色: \"rgba(192,192,192,1)\",\n    c_silver: \"rgba(192,192,192,1)\",\n    ミント色: \"rgba(0,128,128,1)\",\n    薄荷色: \"rgba(0,128,128,1)\",\n    c_teal: \"rgba(0,128,128,1)\",\n    白色: \"rgba(255,255,255,1)\",\n    c_white: \"rgba(255,255,255,1)\",\n    黃色: \"rgba(255,255,0,1)\",\n    c_yellow: \"rgba(255,255,0,1)\",\n};\nexports.RS.MessageSystem.getKoreanColor = function (str) {\n    let color = KOREAN_COLORS[str];\n    if (color) {\n        return color;\n    }\n    if ([\"기본\", \"기본색\", \"c_normal\"].contains(str)) {\n        return exports.Color.getBaseColor();\n    }\n    return exports.Color.getUserCustomColor(str);\n};\nexports.RS.MessageSystem.getChineseColor = function (str) {\n    let color = CHINESE_COLOR[str];\n    if (color) {\n        return color;\n    }\n    if ([\"通常\", \"c_normal\"].contains(str)) {\n        return exports.Color.getBaseColor();\n    }\n    return exports.Color.getUserCustomColor(str);\n};\nexports.RS.MessageSystem.getEnglishColor = function (str) {\n    let color = ENGLISH_COLOR[str];\n    if (color) {\n        return color;\n    }\n    if (\"c_normal\" === str) {\n        return exports.Color.getBaseColor();\n    }\n    return exports.Color.getUserCustomColor(str);\n};\nexports.RS.MessageSystem.getJapaneseColor = function (str) {\n    let color = JAPANESE_COLOR[str];\n    if (color) {\n        return color;\n    }\n    if ([\"基本色\", \"c_normal\"].contains(str)) {\n        return exports.Color.getBaseColor();\n    }\n    return exports.Color.getUserCustomColor(str);\n};\nexports.RS.MessageSystem.getBrowser = function () {\n    /* Refer to https://stackoverflow.com/a/16938481 */\n    var ua = navigator.userAgent, tem, M = ua.match(/(opera|chrome|edge|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [];\n    if (/trident/i.test(M[1])) {\n        tem = /\\brv[ :]+(\\d+)/g.exec(ua) || [];\n        return {\n            name: \"IE\",\n            version: tem[1] || \"\",\n        };\n    }\n    if (M[1] === \"Chrome\") {\n        tem = ua.match(/\\bOPR\\/(\\d+)/);\n        if (tem != null) {\n            return {\n                name: \"Opera\",\n                version: tem[1],\n            };\n        }\n        tem = ua.match(/\\bEdge\\/(\\d+)/);\n        if (tem != null) {\n            return {\n                name: \"Edge\",\n                version: tem[1],\n            };\n        }\n    }\n    M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, \"-?\"];\n    if ((tem = ua.match(/version\\/(\\d+)/i)) != null) {\n        M.splice(1, 1, tem[1]);\n    }\n    return {\n        name: M[0],\n        version: M[1],\n    };\n};\nexports.Color.gmColor = function (str) {\n    const type = exports.RS.MessageSystem.Params.langCode;\n    if (type.match(/ko/)) {\n        return exports.RS.MessageSystem.getKoreanColor(str);\n    }\n    if (type.match(/zh/)) {\n        return exports.RS.MessageSystem.getChineseColor(str);\n    }\n    if (type.match(/en/)) {\n        return exports.RS.MessageSystem.getEnglishColor(str);\n    }\n    if (type.match(/ja/)) {\n        return exports.RS.MessageSystem.getJapaneseColor(str);\n    }\n    return exports.RS.MessageSystem.getEnglishColor(str);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DependencyInjector = void 0;\n/**\n * @static\n * @class DependencyInjector\n * @description\n * 이 클래스는 MZ에서 MV에 의존성을 갖는 메소드를 실행하는데 필요한 컴포넌트를 주입합니다.\n * 또한 해당 컴포넌트를 안전한 샌드박스 환경에서 실행시키기 위해 사용됩니다.\n * 샌드박스 환경이라함은 MZ에서도 오류 없이 안전하게 동작한다는 것을 의미합니다.\n */\nclass DependencyInjector {\n    /**\n     * inject all components inside the sandbox environment.\n     *\n     * @param messageWindow Specify the message window.\n     * @returns void\n     */\n    static inject(messageWindow) {\n        if (this._isDirty) {\n            console.log(\"components are already injected\");\n            return;\n        }\n        if (DependencyInjector.COMPONENTS) {\n            DependencyInjector.COMPONENTS.forEach((component) => {\n                console.log(component.name);\n                DependencyInjector._components[component.name] = new component({\n                    messageWindow,\n                });\n            });\n        }\n        this._isDirty = true;\n    }\n    /**\n     * get the component by name.\n     *\n     * @param name Specify the component name\n     * @returns BaseComponent\n     */\n    static getComponent(name) {\n        return DependencyInjector._components[name];\n    }\n    static ready() {\n        for (let name in this._components) {\n            this._components[name].emit(\"ready\");\n        }\n    }\n}\nexports.DependencyInjector = DependencyInjector;\nDependencyInjector.COMPONENTS = [];\nDependencyInjector._components = {};\nDependencyInjector._isDirty = false;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BalloonWindowTransformComponent = void 0;\nconst BaseComponent_1 = require(\"./BaseComponent\");\n/**\n * @class BalloonWindowTransformComponent\n * @description\n * 말풍선 윈도우의 위치를 조정하기 위한 컴포넌트입니다.\n */\nclass BalloonWindowTransformComponent extends BaseComponent_1.BaseComponent {\n    constructor() {\n        super(...arguments);\n        this._bWidth = 0;\n        this._bHeight = 0;\n        this._isUsedTextWidthEx = false;\n    }\n    onReady(props) {\n        super.onReady(props);\n        this._bWidth = 0;\n        this._bHeight = 0;\n        this._isUsedTextWidthEx = false;\n    }\n    /**\n     * 샌드박스 환경을 구성합니다.\n     *\n     * @param {String} text\n     * @returns {Number}\n     */\n    calcBalloonRect(text) {\n        let temp, baseWidth, tempText, height, min, pad, numOfLines;\n        // drawTextEx를 사용하기 전에 현재 상태를 저장한다.\n        this.save();\n        temp = text;\n        // 라인 갯수를 구하기 위해 텍스트를 줄바꿈 문자를 기준으로 나눈다.\n        tempText = text.slice(0);\n        tempText = tempText.split(/[\\r\\n]+/);\n        numOfLines = tempText.length;\n        pad = this.standardPadding() * 2;\n        // 높이를 구한다.\n        height = 0;\n        tempText.forEach((i) => (height += this.calcBalloonRectHeight(i)));\n        if (height <= 0) {\n            // 높이를 구할 수 없었다면,\n            height = this.fittingHeight(numOfLines);\n        }\n        else {\n            // 높이를 구했다면\n            height = height + pad;\n        }\n        const textPadding = this.textPadding();\n        // 폭을 계산한다.\n        let pw = 0;\n        for (var i = 0; i < numOfLines; i++) {\n            this._isUsedTextWidthEx = true;\n            const x = this.drawTextEx(tempText[i]);\n            this._isUsedTextWidthEx = false;\n            if (x >= pw) {\n                pw = x;\n            }\n        }\n        baseWidth = pw;\n        this._bWidth =\n            baseWidth + pad + textPadding || RS.MessageSystem.Params.WIDTH;\n        // 얼굴 이미지가 설정되어있다면 ?\n        if ($gameMessage.faceName() !== \"\") {\n            // 최소 높이를 설정한다.\n            min = this.fittingHeight(4);\n            // 기존 폭 값에 얼굴 이미지의 폭을 더한다.\n            this._bWidth += this.newLineX() + pad;\n            if (RS.MessageSystem.Params.faceDirection === 2) {\n                this._bWidth += ImageManager.faceWidth;\n            }\n            // 높이 값이 최소 높이보다 작으면, 최소 높이 값으로 설정한다.\n            if (height < min)\n                height = height.clamp(min, height + (min - height));\n        }\n        const type = RS.MessageSystem.Params.choiceWindowStyle;\n        // 선택지가 있고, XP 스타일로 설정했을 때\n        if (type === \"RMXP\" && $gameMessage.isChoice()) {\n            const maxLines = tempText.length;\n            const maxChoices = $gameMessage.choices().length;\n            const lineHeight = this.lineHeight();\n            // 선택지 갯수를 확장했을 수도 있지만, 4개로 가정한다.\n            height = height + maxChoices * lineHeight;\n            // 선택지 윈도우의 폭이 말풍선보다 크면 제한을 둔다.\n            if (this._choiceWindow.windowWidth() > this._bWidth) {\n                this._bWidth = this._choiceWindow.windowWidth();\n            }\n        }\n        this._bHeight = height;\n        // this.drawTextEx() 사용하기 이전 상태로 복구한다.\n        this.restore();\n    }\n    isActiveInBalloon() {\n        const isValidBalloon = $gameMessage.getBalloon() === -2;\n        if (isValidBalloon) {\n            this.updatePlacement();\n            return false;\n        }\n        return true;\n    }\n    setBalloonRect(data) {\n        const ox = RS.MessageSystem.Params.windowOffset.x;\n        const oy = RS.MessageSystem.Params.windowOffset.y;\n        this.x = data.dx + ox;\n        this.y = data.dy + oy;\n        this.width = this._bWidth;\n        this.height = this._bHeight;\n        if ($gameMessage.faceName() &&\n            RS.MessageSystem.Params.faceDirection === 2) {\n            this.drawMessageFace();\n        }\n    }\n    setBalloonPlacement(data) {\n        // 화면 좌측\n        if (!data)\n            return;\n        if (data.mx - this._bWidth / 2 < 0) {\n            data.dx = 0;\n            data.tx = this.canvasToLocalX(data.mx);\n        }\n        // 화면 우측\n        if (data.mx - this._bWidth / 2 > Graphics.boxWidth - this._bWidth) {\n            data.dx = Graphics.boxWidth - this._bWidth;\n            data.tx = this.canvasToLocalX(data.mx);\n        }\n        // 화면 상단\n        if (data.my - this._bHeight - data.tileHeight / 2 < 0) {\n            data.dy = data.my + data.tileHeight / 2;\n            data.scaleY = -1;\n            data.ty = this._height * data.scaleY + this._height;\n            data.ny =\n                this.y + this._bHeight + RS.MessageSystem.Params.nameWindowY;\n        }\n        // 화면 하단\n        if (data.my - this._bHeight > Graphics.boxHeight - this._bHeight) {\n            data.dy = Graphics.boxWidth - this._bHeight;\n            data.ty = this._height;\n        }\n        return data;\n    }\n    updateSubBalloonElements(data) {\n        // deprecated\n    }\n    updateBalloonPosition() {\n        let data = {};\n        if (!this.isActiveInBalloon())\n            return;\n        // 말풍선 소유자의 화면 좌표\n        const owner = $gameMap.getMsgOwner();\n        data.mx = owner.screenX();\n        data.my = owner.screenY();\n        data.tx = this._bWidth / 2;\n        data.ty = this._bHeight;\n        data.scaleY = 1;\n        data.tileHeight = $gameMessage.getBalloonPatternHeight();\n        data.dx = data.mx - this._bWidth / 2;\n        data.dy = data.my - this._bHeight - data.tileHeight;\n        data.ny =\n            this.y -\n                this._nameWindow.height -\n                RS.MessageSystem.Params.nameWindowY;\n        data = (this.setBalloonPlacement(Object.create(data)));\n        if (data.dx + RS.MessageSystem.Params.windowOffset.x !== this.x ||\n            data.dy + RS.MessageSystem.Params.windowOffset.y !== this.y ||\n            this._bWidth !== this.width ||\n            this._bHeight !== this.height) {\n            // 말풍선 위치 및 크기 설정\n            this.setBalloonRect(data);\n            // 멈춤 표시 스프라이트 위치 조정\n            this.updateSubBalloonElements(data);\n        }\n    }\n    updateBalloonPositionInBattle() {\n        if (!$gameParty.inBattle()) {\n            // 전투 씬인지 확인\n            console.warn(\"전투가 아닙니다\");\n            return;\n        }\n        if (!$gameSystem.isSideView()) {\n            // 사이드뷰 전투인지 확인\n            console.warn(\"사이드뷰 전투가 아닙니다.\");\n            return;\n        }\n        let data = {};\n        // 타겟의 화면 좌표 설정\n        let owner = $gameMap.getMsgOwner();\n        if (!owner) {\n            console.warn(\"owner 변수가 없습니다\");\n            return;\n        }\n        if (!owner.hasOwnProperty(\"type\")) {\n            console.warn(\"type 속성이 없습니다 : \" + owner);\n            return;\n        }\n        if (!owner.hasOwnProperty(\"id\")) {\n            console.warn(\"id 속성이 없습니다 : \" + owner);\n            return;\n        }\n        // 현재 씬이 전투 씬이 아닌 경우를 확인한다.\n        let scene = SceneManager._scene;\n        if (!(scene instanceof Scene_Battle)) {\n            console.warn(\"전투 장면이 아닙니다\");\n            return false;\n        }\n        let parent;\n        // 액터인가?\n        if (owner.type === \"actor\") {\n            parent = scene._spriteset._actorSprites; // 액터 스프라이트 군을 반환\n        }\n        else {\n            parent = scene._spriteset._enemySprites; // 적 스프라이트 군을 반환\n        }\n        // 타겟 스프라이트를 id 값으로 찾는다.\n        let tempBattlers = [];\n        tempBattlers = parent;\n        let target = tempBattlers[owner.id];\n        if (!target) {\n            console.warn(\"타겟이 없습니다\");\n            return;\n        }\n        // 이미 죽어있다면 메시지를 일반 메시지로 표시한다.\n        if ((owner.type === \"actor\" &&\n            !target._actor.isAlive()) ||\n            (owner.type === \"enemy\" && !target._enemy.isAlive())) {\n            return;\n        }\n        data.mx = target.x;\n        data.my = target.y;\n        data.padY =\n            owner.type === \"actor\"\n                ? target._mainSprite.bitmap.height / 6\n                : target.bitmap.height;\n        data.tx = this._width / 2;\n        data.ty = this._height;\n        data.scaleY = 1;\n        data.tileHeight = $gameMessage.getBalloonPatternHeight();\n        data.dx = data.mx - this._bWidth / 2;\n        data.dy = data.my - this._bHeight - data.tileHeight - data.padY;\n        data.ny =\n            this.y -\n                this._nameWindow.height -\n                RS.MessageSystem.Params.nameWindowY;\n        data = (this.setBalloonPlacement(Object.create(data)));\n        // 말풍선 위치 및 크기 설정\n        this.setBalloonRect(data);\n        // 멈춤 표시 스프라이트 위치 조정\n        this.updateSubBalloonElements(data);\n        if (this.transform)\n            this.updateTransform();\n    }\n    updateTransform() {\n        this.messageWindow.updateTransform();\n    }\n    calcBalloonRectHeight(text) {\n        // 상태 저장\n        this.save();\n        const messageWindow = this.messageWindow;\n        const tempFontSize = this.contents.fontSize;\n        const textState = messageWindow.createTextState(text, 0, 0, 0);\n        textState.text = messageWindow.convertEscapeCharacters(text);\n        textState.height = messageWindow.calcTextHeight(textState, false);\n        // 상태 복구\n        this.restore();\n        messageWindow.setTextSize(tempFontSize);\n        return textState.height;\n    }\n}\nexports.BalloonWindowTransformComponent = BalloonWindowTransformComponent;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Component = void 0;\nconst EventEmitter_1 = require(\"./EventEmitter\");\n/**\n * @class Component\n * @description\n * 컴포넌트를 구현하기 위한 클래스입니다.\n */\nclass Component extends EventEmitter_1.EventEmitter {\n    constructor(props) {\n        super();\n        this.init(props);\n    }\n    init(props) {\n        this.on(\"ready\", () => this.onReady(props));\n        this.on(\"mounted\", () => this.mounted(props));\n        this.on(\"destroy\", () => this.onDestroy());\n    }\n    ready() {\n        this.emit(\"ready\");\n    }\n    destroy() {\n        this.emit(\"destroy\");\n    }\n    execute() {\n        this.emit(\"mounted\");\n    }\n    onReady(props) { }\n    onDestroy() { }\n    mounted(props) { }\n}\nexports.Component = Component;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventEmitter = void 0;\n/**\n * @class EventEmitter\n * @description\n * 이벤트를 전달하기 위한 클래스입니다.\n */\nclass EventEmitter {\n    constructor(_listeners = {}) {\n        this._listeners = _listeners;\n        this._listeners = {};\n    }\n    on(eventName, func) {\n        if (!this._listeners[eventName]) {\n            this._listeners[eventName] = [];\n        }\n        if (!func) {\n            return;\n        }\n        if (func instanceof Function) {\n            this._listeners[eventName].push(func);\n        }\n    }\n    emit(eventName, ...args) {\n        if (!this._listeners[eventName]) {\n            return;\n        }\n        this._listeners[eventName].forEach((func) => {\n            if (!(func instanceof Function)) {\n                console.warn(\"호출된 이벤트 리스너가 함수가 아닙니다.\");\n                return;\n            }\n            func(...args);\n        });\n    }\n}\nexports.EventEmitter = EventEmitter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameWindowPositionComponent = void 0;\nconst BaseComponent_1 = require(\"./BaseComponent\");\n/**\n * @class NamwWindowPositionComponent\n * @description\n * 이름 윈도우의 X좌표를 재설정합니다.\n */\nclass NameWindowPositionComponent extends BaseComponent_1.BaseComponent {\n    setOpacity(value) {\n        let opacity = value;\n        if (typeof opacity !== \"number\") {\n            opacity = Number(opacity);\n        }\n        if (isNaN(opacity)) {\n            opacity = 255;\n        }\n        this._nameWindow.opacity = value;\n    }\n    updatePositionX() {\n        // 이름 윈도우가 없다면\n        if (!this._nameWindow) {\n            return;\n        }\n        const mx = this.x;\n        const w = this.width;\n        const nw = this._nameWindow.width;\n        const position = (RS.MessageSystem.Params.namePositionTypeAtX);\n        const nx = RS.MessageSystem.Params.nameWindowX;\n        let newX = mx + nx;\n        switch (position) {\n            case \"right\":\n                newX = mx + w - nw - nx;\n                break;\n            case \"center\":\n                newX = mx + w / 2 - nw / 2 - nx;\n                break;\n            case \"left\":\n                newX = mx + nx;\n                break;\n            case \"opacity0\":\n                this.setOpacity(0);\n                break;\n            case \"defaultOpacity\":\n                this.setOpacity(RS.MessageSystem.Params.defaultOpacity);\n                break;\n            case \"auto\":\n                newX = this.x + this.newLineX() + nx;\n                break;\n        }\n        this._nameWindow.x = newX;\n    }\n    updatePositionY() {\n        const ox = RS.MessageSystem.Params.windowOffset.x;\n        const oy = RS.MessageSystem.Params.windowOffset.y;\n        const positionType = $gameMessage.positionType();\n        const ballonOwnerType = $gameMessage.getBalloon();\n        this.updatePositionX();\n        // 메시지 윈도우가 상단이고, 말풍선 모드가 아니라면\n        if (positionType === 0 && ballonOwnerType === -2) {\n            // 최상단의 위치\n            const topY = 0;\n            this._nameWindow.y = topY + oy;\n            // 이름 윈도우가 열렸는 지 여부에 따라 메시지 윈도우의 Y 좌표를 설정합니다.\n            this.y = this._nameWindow.isOpen()\n                ? topY +\n                    this._nameWindow.height +\n                    RS.MessageSystem.Params.nameWindowY +\n                    oy\n                : topY + oy;\n        }\n        else {\n            this._nameWindow.y =\n                this.y -\n                    this._nameWindow.height -\n                    RS.MessageSystem.Params.nameWindowY;\n        }\n    }\n}\nexports.NameWindowPositionComponent = NameWindowPositionComponent;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ComponentExecutor = void 0;\n/**\n * @class ComponentExecutor\n * @author biud436\n */\nclass ComponentExecutor {\n    constructor() {\n        this._components = {};\n    }\n    static getInstance() {\n        return ComponentExecutor.INSTANCE;\n    }\n    add(name, func) {\n        if (name === \"\") {\n            let startChar = 97;\n            let endChar = 122;\n            let len = 7;\n            for (let i = 0; i < len; i++) {\n                name += String.fromCharCode(Math.floor(Math.random() * (endChar - startChar)) +\n                    startChar);\n            }\n        }\n        this._components[name] = {\n            callbackFunction: func,\n            active: false,\n        };\n        return this;\n    }\n    wrap(name, func) {\n        return this.add(name, func);\n    }\n    get(name) {\n        const prop = this._components[name];\n        return prop.callbackFunction;\n    }\n    active(name) {\n        const prop = this._components[name];\n        prop.active = true;\n        return this;\n    }\n    deactive(name) {\n        const prop = this._components[name];\n        prop.active = false;\n        return this;\n    }\n    executeAll() {\n        for (const key in this._components) {\n            const prop = this._components[key];\n            if (prop.active) {\n                const currentCallback = this.get(key);\n                if (currentCallback instanceof Function) {\n                    currentCallback();\n                }\n            }\n        }\n    }\n}\nexports.ComponentExecutor = ComponentExecutor;\nComponentExecutor.INSTANCE = new ComponentExecutor();\n"],"sourceRoot":""}