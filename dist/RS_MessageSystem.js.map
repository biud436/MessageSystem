{"version":3,"file":"RS_MessageSystem.js","mappings":"iIAIA,8BACI,MAAO,KACH,MAAMA,EAA0BC,OAAOC,UAAUC,WACjDF,OAAOC,UAAUC,WAAa,SAAUC,EAAeC,GACnDL,EAAwBM,KAAKC,KAAMH,EAAOC,GAC1CE,KAAKC,UAAW,EAChBD,KAAKE,cAAe,EACpBF,KAAKG,mBAAqB,IAC9B,EAEAT,OAAOC,UAAUS,YAAc,SAC3BC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,MAAMC,EAAUX,KAAKY,SACfC,EAASb,KAAKc,iBAAiBT,GACrCM,EAAQI,OACR,MAAMC,EAAWL,EAAQM,qBACrBR,EACA,EACAA,EAAKI,EACL,GASJ,OAPAG,EAASE,aAAa,EAAGZ,GACzBU,EAASE,aAAa,GAAKX,GAC3BS,EAASE,aAAa,EAAGV,GACzBG,EAAQQ,UAERnB,KAAKoB,aAAaC,SAEXL,CACX,EAEAtB,OAAOC,UAAU2B,iBAAmB,SAChCjB,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,MAAMC,EAAUX,KAAKY,SACff,EAAQG,KAAKc,iBAAiBT,GAC9BP,EAASyB,GAAGC,cAAcC,OAAOC,WACvC,IAAIC,EAEJhB,EAAQI,OAER,MAAMa,EAAQL,GAAGC,cAAcC,OAAOI,cAEtC,GAAc,WAAVD,EAEID,EADAC,EAAME,SAAS,cACTnB,EAAQM,qBAAqBR,EAAI,EAAGA,EAAKZ,EAAO,GAEhDc,EAAQM,qBAAqBR,EAAI,EAAG,EAAGC,EAAKZ,OAEnD,CACH,MAAMiC,EAAa,GAARlC,EACLmC,EAAc,GAATlC,EACX6B,EAAMhB,EAAQsB,qBAAqBF,EAAIC,EAAI,EAAKD,EAAIC,EAAID,E,CAmB5D,MAhBc,WAAVH,GACAD,EAAIT,aAAa,EAAKZ,GACtBqB,EAAIT,aAAa,EAAKX,IACfqB,EAAME,SAAS,UACtBH,EAAIT,aAAa,EAAKZ,GACtBqB,EAAIT,aAAa,GAAKX,GACtBoB,EAAIT,aAAa,EAAKV,KAEtBmB,EAAIT,aAAa,EAAKZ,GACtBqB,EAAIT,aAAa,EAAKX,IAG1BI,EAAQQ,UAERnB,KAAKoB,aAAaC,SAEXM,CACX,EAEAjC,OAAOC,UAAUuC,kBAAoB,WACjC,OACKlC,KAAKmC,WAAa,UAAY,KAC9BnC,KAAKC,SAAW,QAAU,IAC3BD,KAAKoC,SACL,MACApC,KAAKqC,QAEb,EAEA3C,OAAOC,UAAU2C,cAAgB,SAAUjC,EAAMI,EAAIC,EAAI6B,GACrD,MAAM5B,EAAUX,KAAKY,SAKrB,GAJAD,EAAQI,OACRJ,EAAQ6B,sBACJjB,GAAGC,cAAcC,OAAOgB,qBAExBzC,KAAKE,aAAc,CACnB,IAAIc,EAAWhB,KAAKsB,iBAChBjB,EACAkB,GAAGC,cAAcC,OAAOiB,eACxBnB,GAAGC,cAAcC,OAAOkB,eACxBpB,GAAGC,cAAcC,OAAOmB,eACxBnC,EACAC,GAEJC,EAAQkC,UAAY7B,C,MAEpBL,EAAQkC,UAAY7C,KAAK8C,UAE7BnC,EAAQoC,SAAS1C,EAAMI,EAAIC,EAAI6B,GAC/B5B,EAAQkC,UAAY7C,KAAK8C,UACzBnC,EAAQQ,SACZ,CAAC,CAET,C,8FC3HA,mCACI,MAAO,KAIH,MAAM6B,EAA2BC,aAAatD,UAAUuD,MACxDD,aAAatD,UAAUuD,MAAQ,WAC3BF,EAAyBjD,KAAKC,MAC9BA,KAAKmD,UAAY,EACjBnD,KAAKoD,cAAgB,GACrBpD,KAAKqD,UAAY,EACjBrD,KAAKsD,OAAS,GACdtD,KAAKuD,sBAAwB,EAC7BvD,KAAKwD,YAAc,CACvB,EAEAP,aAAatD,UAAU8D,YAAc,SAAUC,GAC3C1D,KAAKmD,UAAYO,CACrB,EAEAT,aAAatD,UAAUgE,gBAAkB,SAAUtD,GAC/CL,KAAKoD,cAAgB/C,CACzB,EAEA4C,aAAatD,UAAUiE,YAAc,WACjC,OAAO5D,KAAKmD,WAAa,CAC7B,EAEAF,aAAatD,UAAUkE,gBAAkB,WACrC,OAAO7D,KAAKoD,aAChB,EAEAH,aAAatD,UAAUmE,WAAa,WAChC,OAAO9D,KAAK+D,QAChB,EAEAd,aAAatD,UAAUqE,WAAa,SAAUC,GAC1CjE,KAAK+D,SAAWE,EAChB1C,GAAGC,cAAcC,OAAOyC,eAAiBD,CAC7C,EAEAhB,aAAatD,UAAUwE,WAAa,SAAUC,GAC1CpE,KAAKqD,SAAWe,CACpB,EAEAnB,aAAatD,UAAU0E,WAAa,SAAUD,GAC1C,OAAOpE,KAAKqD,QAChB,EAEAJ,aAAatD,UAAU2E,SAAW,SAAUF,GACxCpE,KAAKsD,OAAStD,KAAKsD,QAAU,GAC7BtD,KAAKwD,WAAaY,EAClBpE,KAAKsD,OAAOiB,KAAKH,EACrB,EAEAnB,aAAatD,UAAU6E,SAAW,SAAUJ,GACxC,MAAMK,EAAOzE,KAAKsD,OAAOoB,QACzB,YAAaC,IAATF,EACOzE,KAAKwD,WAETiB,CACX,EAEAxB,aAAatD,UAAUiF,eAAiB,SAAUR,GAC9CpE,KAAKwD,YAAc,CACvB,EAEAP,aAAatD,UAAUkF,wBAA0B,SAC7CC,GAEA9E,KAAKuD,sBAAwBuB,CACjC,EAEA7B,aAAatD,UAAUoF,wBAA0B,WAC7C,OAAO/E,KAAKuD,qBAChB,CAAC,CAET,C,yFC7EA,eACA,SAQA,4BACI,MAAO,KAIHyB,eAAerF,UAAUsF,QAAU,WAC/B,OAAOjF,KAAKkF,GAAK,CACrB,EAEAF,eAAerF,UAAUwF,QAAU,WAC/B,OAAOnF,KAAKoF,GAAK,CACrB,EAKA,MAAMC,EAcFC,cACItF,KAAKqC,SAAW,eAChBrC,KAAKoC,SAAW,GAChBpC,KAAKC,UAAW,EAChBD,KAAKmC,YAAa,EAClBnC,KAAK8C,UAAY,OACjB9C,KAAKuF,aAAe,OACpBvF,KAAKwF,aAAe,EACpBxF,KAAKE,cAAe,EACpBF,KAAKG,mBAAqB,KAC1BH,KAAKyF,UAAY,EAEjBzF,KAAK0F,UAAW,CACpB,CAEA3E,KAA4B4E,GACxB3F,KAAKqC,SAAWsD,EAAcC,SAASvD,SACvCrC,KAAKoC,UAAYuD,EAAcC,SAASxD,SACxCpC,KAAKC,SAAW0F,EAAcC,SAAS3F,SACvCD,KAAKmC,WAAawD,EAAcC,SAASzD,WACzCnC,KAAK8C,UAAY6C,EAAcC,SAAS9C,UACxC9C,KAAKuF,aAAeI,EAAcC,SAASL,aAC3CvF,KAAKwF,aAAeG,EAAcC,SAASJ,aAC3CxF,KAAKE,aAAeyF,EAAcC,SAAS1F,aAC3CF,KAAKG,mBACDwF,EAAcC,SAASzF,mBAEvB0F,eACA7F,KAAKyF,UAAYI,aAAajC,eAGlC5D,KAAK0F,UAAW,CACpB,CAEAvE,QAA+BwE,GACtB3F,KAAK0F,UACJC,EAAcC,oBAAoBlG,SACxCiG,EAAcC,SAASvD,SAAWrC,KAAKqC,SACvCsD,EAAcC,SAASxD,SAAWpC,KAAKoC,SACvCuD,EAAcC,SAAS3F,SAAWD,KAAKC,SACvC0F,EAAcC,SAASzD,WAAanC,KAAKmC,WACzCwD,EAAcC,SAAS9C,UAAY9C,KAAK8C,UACxC6C,EAAcC,SAASL,aAAevF,KAAKuF,aAC3CI,EAAcC,SAASJ,aAAexF,KAAKwF,aAC3CG,EAAcC,SAAS1F,aAAeF,KAAKE,aAC3CyF,EAAcC,SAASzF,mBACnBH,KAAKG,mBACL0F,cACAA,aAAapC,YAAYzD,KAAKyF,WAElCzF,KAAK0F,UAAW,EACpB,EAMJI,YAAYnG,UAAUoG,iBAAmB,SAAUC,GAC/C,MACMC,EADS1E,GAAGC,cAAc0E,IAAIC,kBACjBC,KAAKJ,EAAU3F,KAAKgG,MAAML,EAAUM,QACvD,OAAIL,GACAD,EAAUM,OAASL,EAAI,GAAGM,OACnBN,EAAI,GAAGO,eAEP,EAEf,EAOAV,YAAYnG,UAAU8G,gBAAkB,SAAUT,GAC9C,MAAMC,EAAM,cAAcG,KACtBJ,EAAU3F,KAAKgG,MAAML,EAAUM,QAEnC,OAAIL,GACAD,EAAUM,OAASL,EAAI,GAAGM,OACnB,EAAAG,MAAMC,QAAQV,EAAI,KAElBW,aAAa9D,UAAU,EAEtC,EAEAgD,YAAYnG,UAAUkH,gBAAkB,SAAUC,GAC9C,MAAMC,EAAIC,SAASF,GAEfC,EAAI,GAAKA,EAAI,KACbD,EAAQF,aAAa9D,UAAUgE,IAGnC9G,KAAK4F,SAAS9C,UAAYgE,CAE9B,EAEA,MAAMG,EACFnB,YAAYnG,UAAUuH,uBAC1BpB,YAAYnG,UAAUuH,uBAAyB,SAC3CC,EACAnB,GAEA,MAAMoB,EAAU7F,GAAGC,cAAc6F,UAAUC,KACrCC,EAAWhG,GAAGC,cAAc6F,UAAUG,KAC5C,OAAQL,GACJ,IAAK,IACDnH,KAAK6G,gBACD7G,KAAK8C,UACO9C,KAAKyH,kBAAkBzB,KAGvC,MACJ,KAAKuB,EAASH,EAAQM,OAClB1H,KAAK6G,gBACD7G,KAAKyG,gBAA2BT,IAEpC,MACJ,IAAK,IACL,KAAKuB,EAASH,EAAQO,MAClB3H,KAAK4H,gBACO5H,KAAKyH,kBAAkBzB,GAC/BA,GAEJ,MACJ,IAAK,IACL,KAAKuB,EAASH,EAAQS,UAClB7H,KAAK8H,iBACL,MACJ,IAAK,IACL,KAAKP,EAASH,EAAQW,UAClB/H,KAAKgI,kBACL,MACJ,IAAK,OACDnC,aAAajB,iBACb,MACJ,QACIqC,EAAyClH,KACrCC,KACAmH,EACAnB,GAIhB,EAEA,MAAMiC,EAAuBnC,YAAYnG,UAAUuI,eACnDpC,YAAYnG,UAAUuI,eAAiB,WACnCD,EAAqBlI,KAAKC,MAC1BA,KAAKmI,WAAWC,iBAAgB,KAC5B,EAAA1B,MAAM2B,UAAYzB,aAAa9D,UAAU,EAAE,GAEnD,EAEAgD,YAAYnG,UAAU2I,YAAc,WAChC,MAAMC,EACFhH,GAAGC,cAAcC,OAAO8G,UACxBC,UAAUC,SAASpC,MAAM,EAAG,GAEhC,OADc9E,GAAGC,cAAcC,OAAOiH,MAAMH,IAIjChH,GAAGC,cAAcC,OAAOiH,MAAMC,OAE7C,EAEA7C,YAAYnG,UAAUiJ,WAAa,SAAUvI,EAAM6E,EAAGE,EAAGvF,GACrDG,KAAKe,OACLf,KAAK6I,oBACL,MAAM7C,EAAYhG,KAAK8I,gBAAgBzI,EAAM6E,EAAGE,EAAGvF,GAGnD,OAFAG,KAAK+I,eAAe/C,GACpBhG,KAAKmB,UACE6E,EAAUgD,WACrB,EASAlD,YAAYnG,UAAUqI,gBAAkB,WAChChI,KAAK4F,SAASxD,UAAYb,GAAGC,cAAcC,OAAOwH,cAClDjJ,KAAK4F,SAASxD,UAAY,GAElC,EAEA0D,YAAYnG,UAAUkJ,kBAAoB,WACtC7I,KAAK4F,SAASvD,SAAWrC,KAAKsI,cAC9BtI,KAAK4F,SAASxD,SAAWb,GAAGC,cAAcC,OAAOW,SACjDpC,KAAK4F,SAAS3F,UAAW,EACzBD,KAAK4F,SAASzD,YAAa,EAC3BnC,KAAK4F,SAASJ,aACVjE,GAAGC,cAAcC,OAAOyH,oBAC5BlJ,KAAK4F,SAASL,aACVhE,GAAGC,cAAcC,OAAO0H,oBAE5BnJ,KAAK4F,SAAS1F,cAAe,EAC7BF,KAAK4F,SAASzF,mBAAqB,KACnCH,KAAKoJ,gBACT,EAEAtD,YAAYnG,UAAUmI,eAAiB,WAC/B9H,KAAK4F,SAASxD,UAAYb,GAAGC,cAAcC,OAAO4H,cAClDrJ,KAAK4F,SAASxD,UAAY,GAElC,EAEA0D,YAAYnG,UAAUoB,KAAO,WACzBf,KAAKsJ,aAAe,IAAIjE,EACxBrF,KAAKsJ,aAAavI,KAAKf,MACvBuJ,QAAQC,IAAIxJ,KAAKsJ,aACrB,EAEAxD,YAAYnG,UAAUwB,QAAU,WACvBnB,KAAKsJ,eACVtJ,KAAKsJ,aAAanI,QAAQnB,MAC1BA,KAAKsJ,kBAAe3E,EACxB,EAEA,MAAM8E,EACF3D,YAAYnG,UAAU+J,wBAC1B5D,YAAYnG,UAAU+J,wBAA0B,SAAUrJ,GACtD,MAAMsJ,EAAWpI,GAAGC,cAAc0E,IAAI0D,MAChCxC,EAAU7F,GAAGC,cAAc6F,UAAUC,KACrCC,EAAWhG,GAAGC,cAAc6F,UAAUG,KA4G5C,OAZAnH,GANAA,GANAA,GANAA,GANAA,GANAA,GANAA,GANAA,GANAA,GANAA,GANAA,GAJAA,GANAA,GANAA,GAHAA,GANAA,GARAA,GADAA,EAAOoJ,EAA0C1J,KAAKC,KAAMK,IAChDwJ,QACRF,EAASvC,EAAQ0C,KACjB,YAAaC,GACT,OAAOC,eACFlF,MAAMkC,SAAiB+C,EAAK,KAC5BE,UACT,EAAEC,KAAKlK,QAEC6J,QACRF,EAASvC,EAAQ0C,KACjB,YAAaC,GACT,OAAOC,eAAelF,MAAMkC,SAAS+C,EAAK,KAAKE,UACnD,EAAEC,KAAKlK,QAEC6J,QAAQF,EAASvC,EAAQ+C,SAAS,IAAIJ,IACvC/J,KAAKoK,UAAUpD,SAAS+C,EAAK,QAE5BF,QACRF,EAASvC,EAAQiD,eACjB,IAAIN,IACO/J,KAAKsK,gBAAgBtD,SAAS+C,EAAK,QAGtCF,QACRF,EAASvC,EAAQmD,KACjB,YAAaR,GACT,OAAOA,EAAK,GAAGS,SACnB,EAAEN,KAAKlK,QAEC6J,QACRF,EAASvC,EAAQqD,MACjBC,YAAYC,eAEJd,QACRF,EAASvC,EAAQwD,SACjB,YAAab,GACT,OAAOc,aAAa7D,SAAS+C,EAAK,KAAKe,MAAQ,EACnD,EAAEZ,KAAKlK,QAEC6J,QACRF,EAASvC,EAAQ2D,MACjB,YAAahB,GACT,OAAOiB,WAAWhE,SAAS+C,EAAK,KAAKe,MAAQ,EACjD,EAAEZ,KAAKlK,QAEC6J,QACRF,EAASvC,EAAQ6D,QACjB,YAAalB,GACT,OAAOmB,aAAalE,SAAS+C,EAAK,KAAKe,MAAQ,EACnD,EAAEZ,KAAKlK,QAEC6J,QACRF,EAASvC,EAAQ+D,OACjB,YAAapB,GACT,OAAOqB,YAAYpE,SAAS+C,EAAK,KAAKe,MAAQ,EAClD,EAAEZ,KAAKlK,QAEC6J,QACRF,EAASvC,EAAQiE,OACjB,YAAatB,GACT,OAAOuB,aAAatE,SAAS+C,EAAK,KAAKe,MAAQ,EACnD,EAAEZ,KAAKlK,QAEC6J,QACRF,EAASvC,EAAQmE,OACjB,YAAaxB,GACT,OAAOyB,YAAYxE,SAAS+C,EAAK,KAAKe,MAAQ,EAClD,EAAEZ,KAAKlK,QAEC6J,QACRF,EAASvC,EAAQqE,OACjB,YAAa1B,GACT,OAAO2B,YAAY1E,SAAS+C,EAAK,KAAKe,MAAQ,EAClD,EAAEZ,KAAKlK,QAEC6J,QACRF,EAASvC,EAAQuE,YACjB,WACI,MAAO,IAASpE,EAASH,EAAQwE,OAAS,KAC9C,EAAE1B,KAAKlK,QAEC6J,QACRF,EAASvC,EAAQyE,cACjB,WACI,MAAO,IAAStE,EAASH,EAAQwE,OAAS,KAC9C,EAAE1B,KAAKlK,QAEC6J,QACRF,EAASvC,EAAQ0E,aACjB,WACI,MAAO,IAASvE,EAASH,EAAQwE,OAAS,KAC9C,EAAE1B,KAAKlK,QAEC6J,QAAQF,EAASvC,EAAQwE,QAAQ,IAAI7B,KACxC/J,KAAK+L,oBACNlG,aAAavB,SAAS0H,OAAOjC,EAAK,IAAM,IAErC,OAECF,QACR,kCACA,WACI,OAAOF,EAASvC,EAAQ6E,aAAaC,MACzC,EAAEhC,KAAKlK,MAGf,EAKA8F,YAAYnG,UAAUwM,YAAc,WAChC,OAAOnM,KAAKoM,aAChB,EAEAtG,YAAYnG,UAAU0M,SAAW,SAAUrG,GACvC,OAAOhG,KAAKmM,aAChB,EAEArG,YAAYnG,UAAU2M,aAAe,SAAUtG,GAK3C,KAJAA,EAAYA,GAAahG,KAAKuM,YAEHC,IAM3B,OAAQ3G,aAAarB,YACjB,KAAK,EACDxE,KAAKyM,aAAazG,GAClB,MACJ,KAAK,EACDhG,KAAK0M,eAAe1G,GACpB,MACJ,KAAK,EACDhG,KAAK2M,cAAc3G,GAG/B,EAEA,MAAM4G,EACF9G,YAAYnG,UAAUkN,eAC1B/G,YAAYnG,UAAUkN,eAAiB,SAAU7G,GAC7C4G,EAAuC7M,KAAKC,KAAMgG,GAClDhG,KAAKsM,aAAwBtG,EACjC,EAEAF,YAAYnG,UAAU8M,aAAe,SAAUzG,GAC3CA,EAAUd,EAAIlF,KAAKqM,SAASrG,GAC5BA,EAAU8G,OAAS9G,EAAUd,CACjC,EAEAY,YAAYnG,UAAU+M,eAAiB,SAAU1G,GAC7C,MAAM+G,EAAU/M,KAAKmM,cACrBnG,EAAUd,GACLlF,KAAKqM,SAASrG,GAAahG,KAAKgN,gBAAkBD,GAC/C,EACJ/G,EAAUgD,YAAc,EAC5BhD,EAAU8G,OAAS9G,EAAUd,CACjC,EAEAY,YAAYnG,UAAUgN,cAAgB,SAAU3G,GAC5C,MAAM+G,EAAU/M,KAAKmM,cACrBnG,EAAUd,EACNlF,KAAKgN,gBAAkBD,EAAU/G,EAAUgD,YAC/ChD,EAAU8G,OAAS9G,EAAUd,CACjC,EAKA+H,eAAetN,UAAUuN,gBAAkB,SAAUlH,GACjD,MAAMC,EAAM,YAAYG,KAAKJ,EAAU3F,KAAKgG,MAAML,EAAUM,QAC5D,OAAIL,GACAD,EAAUM,OAASL,EAAI,GAAGM,OACnBS,SAASf,EAAI,KAEb,CAEf,EAEAgH,eAAetN,UAAUwN,mBAAqB,SAAUnH,GACpD,MAAMC,EAAM,WAAWG,KAAKJ,EAAU3F,KAAKgG,MAAML,EAAUM,QAC3D,OAAIL,GACAD,EAAUM,OAASL,EAAI,GAAGM,OACnB6G,OAAOnH,EAAI,KAEX,YAEf,EAEAgH,eAAetN,UAAU0N,gBAAkB,SAAUrH,GACjD,MAAMC,EAAM,YAAYG,KAAKJ,EAAU3F,KAAKgG,MAAML,EAAUM,QAC5D,OAAIL,GACAD,EAAUM,OAASL,EAAI,GAAGM,OACnB6G,OAAOnH,EAAI,KAEX,EAEf,EAEA,MAAMqH,EACFL,eAAetN,UAAUuH,uBAC7B+F,eAAetN,UAAUuH,uBAAyB,SAC9CC,EACAnB,GAEA,MAAMoB,EAAU7F,GAAGC,cAAc6F,UAAUC,KACrCC,EAAWhG,GAAGC,cAAc6F,UAAUG,KAC5C,OAAQL,GACJ,KAAKI,EAASH,EAAQmG,YAClB1H,aAAapC,YACDzD,KAAKyH,kBAAkBzB,IAEnC,MACJ,KAAKuB,EAASH,EAAQoG,WAClBxN,KAAKyN,YAAoBzN,KAAKyH,kBAAkBzB,IAChD,MACJ,KAAKuB,EAASH,EAAQsG,eAClB1N,KAAK2N,eACD3N,KAAKyG,gBAA2BT,IAEpC,MACJ,KAAKuB,EAASH,EAAQwG,QAClB5N,KAAK6N,cAAyB7H,GAC9B,MACJ,KAAKuB,EAASH,EAAQ0G,eAClB9N,KAAK+N,eACO/N,KAAKyH,kBAA6BzB,IAE9C,MACJ,KAAKuB,EAASH,EAAQ4G,MAClBhO,KAAKiO,aAAajO,KAAK4F,SAAS3F,UAChC,MACJ,KAAKsH,EAASH,EAAQ8G,YAClBlO,KAAKiO,aAAY,GACjB,MACJ,KAAK1G,EAASH,EAAQ+G,UAClBnO,KAAKiO,aAAY,GACjB,MACJ,KAAK1G,EAASH,EAAQgH,QAClBpO,KAAKqO,eAAerO,KAAK4F,SAASzD,YAClC,MACJ,KAAKoF,EAASH,EAAQkH,cAClBtO,KAAKqO,eAAc,GACnB,MACJ,KAAK9G,EAASH,EAAQmH,YAClBvO,KAAKqO,eAAc,GACnB,MACJ,KAAK9G,EAASH,EAAQoH,UAClBxO,KAAKyO,gBAA2BzI,GAChC,MACJ,KAAKuB,EAASH,EAAQsH,sBAClB1O,KAAK2O,sBACD3O,KAAKyG,gBAA2BT,IAEpC,MACJ,KAAKuB,EAASH,EAAQwH,KACN5I,EAAWd,GAAK8G,OACxBhM,KAAK6O,UAAU,KAAOtN,GAAGC,cAAcC,OAAOqN,SAElD,MACJ,KAAKvH,EAASH,EAAQ2H,iBACN/I,EAAWd,EAAI8G,OACtBhG,EAAwB8G,QAAU,GAElC9M,KAAK+L,oBAAoB/L,KAAKgP,UAAU,GAC7C,MACJ,KAAKzH,EAASH,EAAQ6H,SACbjP,KAAK+L,oBACN/L,KAAKkP,OAAOlP,KAAKqN,gBAA2BrH,IAChD,MACJ,KAAKuB,EAASH,EAAQ+H,cAClB,GAAInP,KAAK+L,mBAAoB,MAC7B/L,KAAKoP,YACDpP,KAAKqN,gBAA2BrH,IAEpChG,KAAKgP,UAAU,IACnB,KAAKzH,EAASH,EAAQiI,cAClB,GAAIrP,KAAK+L,mBAAoB,MAC7B/L,KAAKsP,aACOtP,KAAKyH,kBAAkBzB,IAEnChG,KAAKgP,UAAU,IACnB,KAAKzH,EAASH,EAAQmI,MAClB,GAAIvP,KAAK+L,mBAAoB,MAChB/L,KAAKqN,gBACHrH,GACbwJ,MAAM,KAERxP,KAAKgP,UAAU,GACf,MACJ,QACI1B,EAA4CvN,KACxCC,KACAmH,EACAnB,GAIhB,EAEAiH,eAAetN,UAAU0O,cAAgB,YAAatE,GAClD/J,KAAK4F,SAASzD,WAAa4H,EAAK,EACpC,EAEAkD,eAAetN,UAAUsO,YAAc,YAAalE,GAChD/J,KAAK4F,SAAS3F,SAAW8J,EAAK,EAClC,EAEAkD,eAAetN,UAAU8N,YAAc,YAAa1D,GAChD/J,KAAK4F,SAASxD,SAAW2H,EAAK,GAAG0F,MAC7BlO,GAAGC,cAAcC,OAAOwH,YACxB1H,GAAGC,cAAcC,OAAO4H,YAEhC,EAEA4D,eAAetN,UAAUoO,eAAiB,YAAahE,GACnD/J,KAAK4F,SAASJ,aAAeuE,EAAK,EACtC,EAEAkD,eAAetN,UAAUgO,eAAiB,YAAa5D,GACnD/J,KAAK4F,SAASL,aAAewE,EAAK,EACtC,EAEAkD,eAAetN,UAAUkO,cAAgB,SAAU7H,GAC/C,MAAMlB,EAAQkC,SAAiBhH,KAAKyH,kBAAkBzB,IACtDA,EAAUd,GAAKJ,CACnB,EAEAmI,eAAetN,UAAUgP,sBAAwB,YAC1C5E,GAEH,IAAIjD,EAAaiD,EAAK,GACR,SAAVjD,GAA8B,OAAVA,IACpBA,EAAQ,MAEZ9G,KAAK4F,SAASzF,mBAAqB2G,CACvC,EAEAmG,eAAetN,UAAU8O,gBAAkB,SAAUzI,GAGjDhG,KAAK4F,SAAS1F,cAAe,CACjC,EAEA+M,eAAetN,UAAUuP,OAAS,SAAUQ,GACxC,MACMC,EAAiC,CACnC7E,KAFa4E,EAAOE,OAGpBC,IAAK,EACLC,MAAO,IACPC,OAAcC,cAAeC,UAEjCC,aAAahB,OAAOS,EACxB,EAEA1C,eAAetN,UAAUyP,YAAc,SAAUe,GAC7C,MAAMC,EAAMD,EAAMX,MAAM,KAAKa,KAAKC,GACvBA,EAAEV,SAGb,IAAIW,EAAS,CACTvE,OAAOoE,EAAI,IACXA,EAAI,GACJpE,OAAOoE,EAAI,IACXpE,OAAOoE,EAAI,IACXpE,OAAOoE,EAAI,IACX,IACA,IACA,IACA,GAEAI,GAAM,EAWV,OARID,GACAA,EAAOE,SAAQ,CAACH,EAAGI,EAAGC,KACdL,UACAE,GAAM,E,MAKdA,IACAI,YAAYxB,YAAYyB,MAAMD,YAAkBL,IACzC,EAGf,EAEAtD,eAAetN,UAAU2P,aAAe,SAAUwB,GACzB,iBAAVA,GACXF,YAAYtB,aAAawB,EAC7B,EAGA7D,eAAetN,UAAUkJ,kBAAoB,WACzC/C,YAAYnG,UAAUkJ,kBAAkB9I,KAAKC,MAGzCA,KAAK+Q,mBACL/Q,KAAK+Q,iBAAiBC,KAAKhR,KAAKiR,OAAS,EAAGjR,KAAKkR,SACjDlR,KAAK+Q,iBAAiBI,MAAM/L,EAAI,GAGpCS,aAAapC,YAAYlC,GAAGC,cAAcC,OAAOgE,UACrD,EAGAwH,eAAetN,UAAUyR,cAAgB,SAAUpL,GAC/ChG,KAAK4F,SAAS1F,cAAe,CACjC,EAGA+M,eAAetN,UAAUuE,eAAiB,WACtC,OAAO3C,GAAGC,cAAcC,OAAOyC,cACnC,EAKA,MAAMmN,EACFpE,eAAetN,UAAUmJ,gBAC7BmE,eAAetN,UAAUmJ,gBAAkB,SACvCzI,EACA6E,EACAE,EACAvF,GAEA,IAAImG,EAAYqL,EAAqCtR,KACjDC,KACAK,EACA6E,EACAE,EACAvF,GAGJ,MAAMyR,EAAKtL,EAAUd,EACfqM,EAAKvL,EAAUZ,EAQrB,OALAoM,OAAOC,OAAOzL,EAAW,CACrBsL,KACAC,OAGGvL,CACX,EAEAiH,eAAetN,UAAU+R,gBAAkB,SACvC1L,EACA2L,EACA9R,EACA+R,GAEA,MAAMN,EAAuBtL,EAAUsL,GAEnCO,KAAKC,MAAMR,EAAS,EAAJK,GAAS9R,GACrB+R,IACA5R,KAAK6M,eAAe7G,GAChBhG,KAAK+R,aAAa/L,IAClBhG,KAAKgS,aAIrB,EAEA,MAAMC,EACFhF,eAAetN,UAAUkN,eAC7BI,eAAetN,UAAUkN,eAAiB,SAAU7G,GAChDiM,EAAsClS,KAAKC,KAAMgG,GAErCA,EAAWsL,GACnBtL,EAAU8G,QAAsB9G,EAAWd,EAG3ClF,KAAKkS,aAAelS,KAAKkS,YAAYC,SACfnS,KAAKkS,YAAYlM,SAE/C,EAMAiH,eAAetN,UAAUyS,iBAAmB,SAAUpM,GAClD,MAAMe,EAAIf,EAAU3F,KAAK2F,EAAUM,SAC/BS,EAAEsL,WAAW,GAAK,IAClBrS,KAAKsS,eAAetM,GACpBhG,KAAKuS,wBAAwBvM,EAAWe,KAExCf,EAAUwM,QAAUzL,EAGpBf,EAAUsL,IAAMtR,KAAK6O,UAAU9H,GAEvC,EAEA,MAAM0L,EACFxF,eAAetN,UAAUyS,iBAC7BnF,eAAetN,UAAUyS,iBAAmB,SAAUpM,GAElD,IAAImM,GAAU,EAEVO,GADc1M,EAAUwM,QAAU,IACfjM,OAYvB,GAVAkM,EAAsC1S,KAAKC,KAAMgG,GAM7C0M,KAFe1M,EAAUwM,QAAU,IACZjM,SAEvB4L,GAAU,GAGVA,EAAS,CAIT,MAAMpL,EAAIf,EAAUwM,OAAOG,OACvB3M,EAAUwM,OAAOjM,OAAS,EAC1B,GAEJvG,KAAK4S,4BAA4B5M,EAAWe,E,CAEpD,EASAkG,eAAetN,UAAUiT,4BAA8B,SACnD5M,EACAe,GAIA,MAAM4K,EAAI3R,KAAK6O,UAAU9H,GACzB,IAAIlH,EAAQG,KAAKgN,gBAGjB,MAAM6F,GAAuD,IAA/BhN,aAAaxB,aACrCyO,EAAoB9M,EAAU+M,QACpC,IAAInB,EACAiB,GACAC,GACAvR,GAAGC,cAAcC,OAAOuR,oBAG5BhT,KAAK0R,gBAAgB1L,EAAW2L,EAAG9R,EAAO+R,GAE1C,MAAMhM,EAAW5F,KAAK4F,SAYtB,GARiB,KAHAC,aAAaoN,aAI1BpT,EAAQ+F,EAAS/F,MAAQqT,aAAaC,UACtCvB,EAAoD,IAA1CrQ,GAAGC,cAAcC,OAAO2R,cAClCpT,KAAK0R,gBAAgB1L,EAAW2L,EAAG9R,EAAO+R,IAIgB,OAAhChM,EAASzF,mBACZ,CACvB,MAAMkT,EAAWxB,KAAKC,MAAU,EAAJH,GAAS,EAC/B2B,EAAWtT,KAAK0B,cAGhB,GAAE4P,EAAE,GAAEC,GAAkBvL,EAG9BhG,KAAKkS,YAAc,CACfM,OAAQ,IAAI9S,OAAO2T,EAAUC,GAC7BtN,UAAWA,EACXmM,SAAS,EACTjN,EAAGoM,EACHlM,EAAGmM,GAIPvR,KAAKkS,YAAYM,OAAOe,QACZ3N,EAASzF,oBAGrBH,KAAKkS,YAAYC,SAAU,EAC3BnS,KAAKkS,YAAYlM,UAAYA,C,CAErC,EAEA,MAAMwN,EACFvG,eAAetN,UAAU2S,eAC7BrF,eAAetN,UAAU2S,eAAiB,SACtCtM,GAEA,MAAMyN,EAAYzN,EAAU+M,QACtBW,GACD1T,KAAK2T,YAAc3T,KAAK4T,YAAY5N,IAAcyN,EACjDI,EACFJ,GAAazT,KAAKkS,aAAelS,KAAKkS,YAAYC,QAUtD,GARIuB,GACA1T,KAAKgP,UAAUnJ,aAAajC,eAAiB,GAO7CiQ,GAA2BJ,EAAW,CACtC,MAAMK,EAAa9T,KAAKkS,YAClB6B,EAASD,EAAWtB,OAG1B,GAFsBsB,EAAW9N,UAEfuL,KAAOvL,EAAUZ,EAG/B,OAFApF,KAAKkS,YAAYC,SAAU,OAC3BqB,EAAoCzT,KAAKC,KAAMgG,GAG1C8N,EAAW5O,EACX4O,EAAW1O,EACVY,EAAUd,EACVc,EAAUZ,EACVyM,KAAKmC,IAAIhU,KAAKiU,WAAYpC,KAAKC,MAAMiC,EAAOlU,QAC5CgS,KAAKmC,IAAIhU,KAAKkU,YAAarC,KAAKC,MAAMiC,EAAOjU,SAWvDE,KAAKkS,YAAYC,SAAU,C,CAG/BqB,EAAoCzT,KAAKC,KAAMgG,EACnD,EAKAiH,eAAetN,UAAUwU,qBAAuB,SAC5CnO,GACD,EAEHiH,eAAetN,UAAUyU,qBAAuB,WAC5C,IAAKpU,KAAKqU,cACN,OAEJ,IAAI,YAAEC,GAAgB/S,GAAGC,cAAcC,OAClC6S,IAAaA,EAAc,KAChC,MAAMxP,EAAQwP,EAAY7E,MAAM,EAAG,KACnCzP,KAAKqU,cAAcE,QAAUzP,CACjC,EAEAmI,eAAetN,UAAU6U,sBAAwB,WAC7C,GAAKxU,KAAKqU,gBAIMrU,KAAKyU,aAAezU,KAAK0U,aAC5B,CACT,MAAMC,GAAY3U,KAAK2U,UAAY,GAAGlF,MAAM,EAAG,KAC/CzP,KAAKqU,cAAclD,MAAM/L,EAAIuP,EAAW,IACxC3U,KAAKqU,cAAcjP,EACdpF,KAAKqU,cAAcvU,OAAS,GAAM,EAAIE,KAAK2U,SAAW,I,CAEnE,EAEA,MAAMC,EACF3H,eAAetN,UAAUkV,gBAC7B5H,eAAetN,UAAUkV,gBAAkB,WACvC7U,KAAKwU,wBACLI,EAAqC7U,KAAKC,KAC9C,EAEAiN,eAAetN,UAAUmV,sBAAwB,WAE7C,MAAMC,EACF,EAAAC,mBAAmBC,aACf,mCAGJF,GACAA,EAAUD,uBAElB,EAEA7H,eAAetN,UAAUuV,qBAAuB,WAC5C,MAAMC,EAAiBC,MAAMD,iBACvBE,EAAQF,EACRG,OAAOC,WACPD,OAAOE,OAAOC,WACdC,EAAQP,EACRG,OAAOK,YACPL,OAAOE,OAAOI,YACdrT,EAAWvC,KAAKH,MAChBgW,EAAY7V,KAAKF,OAEvB,MAAO,CACHuV,QACAK,QACAnT,WACAsT,YACAC,KAAMJ,EAAQG,EACdE,KAAMV,EAAQ9S,EAEtB,EAEA0K,eAAetN,UAAUqW,gBAAkB,WACvC,MAAMC,EAAajW,KAAKkW,YAClBC,GAAoD,IAA/BtQ,aAAaxB,aAClC+R,EAAoBC,aAAaC,kBAAkBC,UAIzD,GAHAvW,KAAKwW,cAAgB3Q,aAAa4Q,eAG9BN,EAAoB,CACpB,MAAM,SAAE5T,EAAQ,UAAEsT,EAAS,KAAEE,EAAI,KAAED,GAC/B9V,KAAKkV,uBAEHwB,EACFC,SAAS9W,MAAQ,EACjB0C,EAAW,EACXhB,GAAGC,cAAcC,OAAOmV,aAAa1R,EACnC2R,EACD7W,KAAKwW,eAAiBG,SAAS7W,OAAS+V,GAAc,EACvDtU,GAAGC,cAAcC,OAAOmV,aAAaxR,EAEzCpF,KAAKkF,EAAI2M,KAAKmC,IAAI0C,EAAUX,GAC5B/V,KAAKoF,EAAIyM,KAAKmC,IAAI6C,EAAUf,E,MAExBM,GACApW,KAAK8U,wBAKb,GAAImB,EAAY,CACZ,MAAMa,EAAWb,EAAWnW,OAC5BE,KAAKkW,YAAY9Q,EACbpF,KAAKoF,EAAI0R,EAAW,EAAIH,SAAS7W,OAASmW,EAAWnW,M,CAa7D,GATAE,KAAK+W,uBACL/W,KAAKgX,wBACLhX,KAAKoU,uBAO2B,KAA5BvO,aAAaoN,WAAmB,CAChC,MAAMgE,EAAY,QAAQ7Q,KAAKP,aAAaoN,YACtCiE,EAAY,EAEd3V,GAAGC,cAAcC,OAAO0V,SACxBnX,KAAKoX,cAAcH,EAAY,EAAIC,GAEnClX,KAAKoX,cAAcF,E,CAG/B,EAEAjK,eAAetN,UAAU0X,mBAAqB,WAC1C,OAAOrX,KAAKqU,cAAcN,QAAU/T,KAAKqM,WAAa,CAC1D,EAEAY,eAAetN,UAAUyX,cAAgB,SAAUE,EAAS,GACxD,MAAMC,EAASvX,KAAKuX,OACdC,EAAajW,GAAGC,cAAcC,OAAO0V,SAEvCI,GAAUC,GACVxX,KAAKyX,cAAczX,KAAKqU,cAAeiD,EAE/C,EAEArK,eAAetN,UAAU+X,gBAAkB,WACnC1X,KAAKqU,cAAcN,SAEnB/T,KAAKqU,cAAcN,OAAS,KAEpC,EAEA,MAAM4D,EACF1K,eAAetN,UAAU+J,wBAC7BuD,eAAetN,UAAU+J,wBAA0B,SAAUrJ,GACzD,MAAM+G,EAAU7F,GAAGC,cAAc6F,UAAUC,KAErCqC,GADWpI,GAAGC,cAAc6F,UAAUG,KAC3BjG,GAAGC,cAAc0E,IAAI0D,OA0GtC,OA9CAvJ,GA/BAA,GANAA,GANAA,GANAA,GANAA,GAJAA,EAAOsX,EAA6C5X,KAChDC,KACAK,IAEQwJ,QACRF,EAASvC,EAAQwQ,eACjB,WACI,OAAOjO,EAASvC,EAAQ8G,YAAYhC,MACxC,EAAEhC,KAAKlK,QAEC6J,QACRF,EAASvC,EAAQyQ,aACjB,WACI,OAAOlO,EAASvC,EAAQ+G,UAAUjC,MACtC,EAAEhC,KAAKlK,QAEC6J,QACRF,EAASvC,EAAQ0Q,iBACjB,WACI,OAAOnO,EAASvC,EAAQkH,cAAcpC,MAC1C,EAAEhC,KAAKlK,QAEC6J,QACRF,EAASvC,EAAQ2Q,eACjB,WACI,OAAOpO,EAASvC,EAAQmH,YAAYrC,MACxC,EAAEhC,KAAKlK,QAEC6J,QAAQF,EAASvC,EAAQ4Q,OAAO,IAAIjO,KAC5C,IAAIkO,EAAUlO,EAAK,GA4BnB,OA1BIkO,EAAQC,SAAS,WACjBD,EAAUA,EAAQpO,QAAQ,QAAS,IACnCtI,GAAGC,cAAcC,OAAO0W,oBAAsB,QAE9CF,EAAQC,SAAS,WACjBD,EAAUA,EAAQpO,QAAQ,QAAS,IACnCtI,GAAGC,cAAcC,OAAO0W,oBAAsB,QAE9CF,EAAQC,SAAS,aACjBD,EAAUA,EAAQpO,QAAQ,UAAW,IACrCtI,GAAGC,cAAcC,OAAO0W,oBAAsB,UAE9CF,EAAQC,SAAS,eACjBD,EAAUA,EAAQpO,QAAQ,YAAa,IACvCtI,GAAGC,cAAcC,OAAO0W,oBAAsB,YAE9CF,EAAQC,SAAS,qBACjBD,EAAUA,EAAQpO,QAAQ,kBAAmB,IAC7CtI,GAAGC,cAAcC,OAAO0W,oBACpB,kBAEJF,EAAQC,SAAS,YACjBD,EAAUA,EAAQpO,QAAQ,SAAU,IACpCtI,GAAGC,cAAcC,OAAO0W,oBAAsB,SAElDnY,KAAKoY,eAAeC,QAAQJ,GACrB,EAAE,KAEDpO,QACRF,EAASvC,EAAQkR,SACjB,WACI,MAAMxT,EAAQkH,OAAOuM,UAAU,KAAO,GAWtC,OAVIC,WAAWC,WACX5S,aAAa1B,WAETW,EAAQ,EACF,aAAe+M,KAAK6G,IAAI5T,GACxB,YAAcA,GAGxBe,aAAa1B,WAAWW,GAErB,EACX,EAAEoF,KAAKlK,OAEXK,EAAOA,EAAKwJ,QACRF,EAASvC,EAAQuR,iBACjB,WACI,MAAM7T,EAAQkH,OAAOuM,UAAU,IAAM,GAKrC,OAJA1S,aAAa1B,WAET,YAAcW,GAEX,EACX,EAAEoF,KAAKlK,OAEXK,EAAOA,EAAKwJ,QACRF,EAASvC,EAAQwR,cACjB,WACI,MAAM9T,EAAQkH,OAAOuM,UAAU,IAAM,GAKrC,OAJA1S,aAAa1B,WAET,aAAeW,GAEZ,EACX,EAAEoF,KAAKlK,OAEJK,EAAKwJ,QAAQF,EAASvC,EAAQyR,iBAAiB,KAClD,MAAM/T,EAAQkH,OAAOuM,UAAU,IAAM,GAIrC,OAHKvY,KAAK+L,qBACNxK,GAAGC,cAAcC,OAAO2R,cAAgBtO,GAErC,EAAE,GAGjB,EAGAmI,eAAetN,UAAUmZ,UAAY,SAAU1U,GAC3CpE,KAAK4F,SAAS1C,QACd2C,aAAa7B,WAAWI,GACxBpE,KAAKF,OAASE,KAAK+Y,cAAc3U,GACjCpE,KAAKgZ,iBACLhZ,KAAKgW,iBACT,EAEA,MAAMiD,EACFhM,eAAetN,UAAUC,WAC7BqN,eAAetN,UAAUC,WAAa,SAAUsZ,GAC5CD,EAAgClZ,KAAKC,KAAMkZ,GAC3CC,UAAUC,gBAAgBpZ,KAAK8Y,UAAU5O,KAAKlK,OAC9CA,KAAK8Y,UAAUvX,GAAGC,cAAcC,OAAOyC,gBACvClE,KAAKqZ,qBACLrZ,KAAKsZ,GAAG,UAAWtZ,KAAKuZ,mBAAoBvZ,MAC5CA,KAAKsZ,GAAG,mBAAoBtZ,KAAKwZ,iBAAkBxZ,KACvD,EAEAiN,eAAetN,UAAU8Z,gBAAkB,SAAUpZ,GAE7C,EAAA2U,mBAAmBC,aACf,mCAGEwE,gBAAgBpZ,EAC9B,EAEA,MAAMqZ,EAA+BzM,eAAetN,UAAUga,QAC9D1M,eAAetN,UAAUga,QAAU,SAAU3T,GACzChG,KAAKoX,gBACLpX,KAAK0X,kBACL1X,KAAKkI,iBACLlI,KAAK4Z,KAAK,oBACV5Z,KAAK6Z,YAAYhU,aAAaxB,cAC9BqV,EAA6B3Z,KAAKC,KAAMgG,EAC5C,EAEAiH,eAAetN,UAAUma,8BAAgC,WACrD,MAAM/E,EACF,EAAAC,mBAAmBC,aACf,mCAGJF,GACAA,EAAU+E,+BAElB,EAEA7M,eAAetN,UAAUka,YAAc,SAAUE,IAE/B,IAAVA,GAKJ/Z,KAAKga,WAAWD,GAEM1D,aAAaC,kBAAkB2D,aAGjDja,KAAK8Z,gCAEL9Z,KAAK8U,yBAXL9U,KAAKka,qBAab,EAMIjN,eAAetN,UAAUwa,aAC7BlN,eAAetN,UAAUwa,aAAe,WACpC,MAAM9Z,EAAOwF,aAAauU,UACpBpU,EAAYhG,KAAK8I,gBAAgBzI,EAAM,EAAG,EAAG,GACnD2F,EAAUd,EAAIlF,KAAKqM,SAASrG,GAC5BA,EAAU8G,OAAS9G,EAAUd,EAC7BlF,KAAKuM,WAAavG,EAGlB,IAAIqU,EAAWrU,EAAU3F,KAAKgG,MAAM,IAED,IAA/BR,aAAaxB,cACb9C,GAAGC,cAAcC,OAAOuR,sBAExBqH,EAAWA,EAASxQ,QAAQ,YAAa,MAG7C7J,KAAKyZ,gBAAgBY,GAErBra,KAAK2Z,QAAQ3Z,KAAKuM,YAGlBvM,KAAKka,oBAAoB,YAEzBla,KAAKgW,kBACLhW,KAAKsa,mBACLta,KAAKua,OACLva,KAAKoY,eAAeoC,OACxB,EAEAvN,eAAetN,UAAU8a,qBAAuB,WAC5C,OAAOC,cAAc/a,UAAUgb,mBACnC,EAEA1N,eAAetN,UAAUib,YAAc,WAEnC,OADa5a,KAAKya,uBACN5a,KAChB,EAEAoN,eAAetN,UAAUkb,aAAe,WAEpC,OADa7a,KAAKya,uBACN3a,MAChB,EAEAmN,eAAetN,UAAUua,oBAAsB,YACxCnQ,GAEH,MAAM+Q,IAA0B/Q,EAAKxD,OAAS,GAExCwU,EAAgB1E,aAAaC,kBAAkB2D,aACrD,IAAKa,GAAgBC,EACjB,OAGJ,MAAM3W,EAAIyB,aAAa4Q,eACjBuE,EAAKzZ,GAAGC,cAAcC,OAAOmV,aAAa1R,EAC1C+V,EAAK1Z,GAAGC,cAAcC,OAAOmV,aAAaxR,EAE1C8V,EAAa,CACfrb,MAAOG,KAAK4a,cACZ9a,OAAQE,KAAK6a,gBAEX3V,EAAIyR,SAAS9W,MAAQ,EAAIqb,EAAWrb,MAAQ,EAAImb,EAChD5V,EAAKhB,GAAKuS,SAAS7W,OAASob,EAAWpb,QAAW,EAAImb,EACtDpb,EAAQqb,EAAWrb,MACnBC,EAASob,EAAWpb,OAEtBoF,IAAMlF,KAAKkF,IAAGlF,KAAKkF,EAAIA,GACvBE,IAAMpF,KAAKoF,IAAGpF,KAAKoF,EAAIA,GACvBvF,IAAUG,KAAKH,OAASC,IAAWE,KAAKF,SACxCE,KAAKH,MAAQA,EACbG,KAAKF,OAASA,GAGdgb,GACAK,SAASC,YAAYC,YAE7B,EAEApO,eAAetN,UAAU4Z,mBAAqB,WAC1CvZ,KAAKsb,IAAI,mBAAoBtb,KAAKwZ,iBAAkBxZ,KACxD,EAQAiN,eAAetN,UAAUmD,UAAY,SAAUsB,GAC3C,MAAM+D,EAAanI,KAAKmI,WACxB,IAAKA,EAAWoT,UAEZ,OAAO,EAAA7U,MAAM2B,UAEjB,MAAMiJ,EAAK,GAAMlN,EAAI,EAAK,GAAK,EACzBmN,EAAK,IAA0B,GAApBM,KAAKC,MAAM1N,EAAI,GAAU,EAC1C,OAAO+D,EAAWqT,SAASlK,EAAIC,EACnC,EAEAtE,eAAetN,UAAU6Z,iBAAmB,WACxC,EAAA9S,MAAM2B,UAAYrI,KAAK8C,UAAU,GACjC9C,KAAK6G,gBAAgB,EAAAH,MAAM2B,UAC/B,EAEA4E,eAAetN,UAAUuI,eAAiB,WACtC,MAAM6L,EAASb,aAAauI,WACxBla,GAAGC,cAAcC,OAAO0G,YAI5B,GAAI4L,IAAW/T,KAAKmI,aAChBnI,KAAKmI,WAAa4L,EAClB/T,KAAK0b,oBAAqB,EAC1B1b,KAAKmI,WAAWC,iBAAgB,KAC5BpI,KAAK0b,oBAAqB,CAAI,IAE7B1b,KAAK4F,UACN5F,KAAKgZ,iBAGThZ,KAAK6G,gBAAgB,EAAAH,MAAM2B,YAEtBrI,KAAKmI,WAAWoT,WACjB,OAAOI,YAAW,IAAM3b,KAAKkI,kBAAkB,GAG3D,EAEA,MAAM0T,EACF3O,eAAetN,UAAUkc,cAC7B5O,eAAetN,UAAUkc,cAAgB,WACrC,IAAIrL,GAAM,EAQV,OANIxQ,KAAK0b,qBACL,EAAAhV,MAAM2B,UAAYzB,aAAa9D,UAAU,GACzC9C,KAAK6G,gBAAgB,EAAAH,MAAM2B,WAC3BrI,KAAK0b,oBAAqB,EAC1BlL,GAAM,GAEHoL,EAA8B7b,KAAKC,OAASwQ,CACvD,EAEAvD,eAAetN,UAAUoS,aAAe,SAAU/L,GAC9C,OACKhG,KAAK4T,YAAY5N,IAClBA,EAAUZ,EAAIY,EAAUlG,OAASE,KAAK8b,gBAE9C,EAEA7O,eAAetN,UAAU0Z,mBAAqB,WAM1C,OALArZ,KAAKqU,cAAgB,IAAI0H,OACzB/b,KAAKqU,cAAcnP,EAAI,EACvBlF,KAAKqU,cAAcjP,EAAI,EAEvBpF,KAAKgc,WAAWhc,KAAKqU,cAAe,GAC7BrU,KAAKqU,aAChB,EAEApH,eAAetN,UAAUsc,mBAAqB,WACtCjc,KAAKqU,eAAerU,KAAKkc,YAAYlc,KAAKqU,cAClD,EAKApH,eAAetN,UAAU0M,SAAW,WAChC,MACM4G,EAAWpN,aAAaoN,WACxBkJ,EAAYtW,aAAasW,YAC/B,GAHY,SAGJ/V,KAAK6M,GAAW,CACpB,IAAImJ,EAAa7a,GAAGC,cAAcC,OAAO0V,SACnC,EACA5V,GAAGC,cAAcC,OAAO4a,WAC9B,OAAOF,EAAY,EAAI,EAAIC,C,CAI3B,OAD8C,IAA1C7a,GAAGC,cAAcC,OAAO2R,cAEjB,EAEJH,EAAW1R,GAAGC,cAAcC,OAAO6a,iBAAmB,CAErE,EAMArP,eAAetN,UAAU4c,eAAiB,SAAUtJ,GAEhD,MADY,SACD7M,KAAK6M,EACpB,EAKAhG,eAAetN,UAAU6c,iBAAmB,WAAa,EAOzDvP,eAAetN,UAAU8c,oBAAsB,WAC3C,OAAOlb,GAAGC,cAAcC,OAAOib,WACnC,EAMAzP,eAAetN,UAAUgd,mBAAqB,WAC1C,OAAOpb,GAAGC,cAAcC,OAAOkb,kBACnC,EAMA1P,eAAetN,UAAUoX,qBAAuB,WAC5C/W,KAAKuU,QAAUhT,GAAGC,cAAcC,OAAOmb,cAC3C,EAMA3P,eAAetN,UAAUqX,sBAAwB,WAC7ChX,KAAK6c,gBAAkBtb,GAAGC,cAAcC,OAAOob,eACnD,EAEA5P,eAAetN,UAAUmd,gBAAkB,SACvC/C,GAEA,IAAKvB,WAAWuE,UAAW,OAAO,KAClC,MAAMC,EAAMxE,WAAWuE,UAAUxW,OAGjC,MAAO,CACH0W,KAAM,QACNC,IAJJnD,EAAOA,EAAKtK,MAAM,EAAGuN,IAIN,EAEnB,EAEA/P,eAAetN,UAAUwd,iBAAmB,SACxCpD,GAEA,IAAKqD,WAAWL,UAAW,OAAO,KAClC,MAAMC,EAAMI,WAAWL,UAAUxW,OAGjC,MAAO,CACH0W,KAAM,QACNC,IAJJnD,EAAOA,EAAKtK,MAAM,EAAGuN,IAIN,EAEnB,EAEA/P,eAAetN,UAAUqa,WAAa,SAAUD,GAC5C,OAAQA,GACJ,KAAM,EACFoB,SAASC,YAAYC,aACrB,MACJ,KAAK,EACDF,SAASC,YAAwBD,SAASkC,eAC1C,MACJ,QACQhH,aAAaC,kBAAkB2D,cAE3B,uBAAuBqD,KAAKvD,EAAK9P,aAEjCkR,SAASC,YACLpb,KAAKmd,iBAAiBnW,SAASuW,OAAOC,MAG1C,sBAAsBF,KAAKvD,EAAK9P,aAEhCkR,SAASC,YACLpb,KAAK8c,gBAAgB9V,SAASuW,OAAOC,OAK7CrC,SAASC,YAAYD,SAASsC,MAAM1D,IAIpD,EAEA,MAAM2D,EACFzQ,eAAetN,UAAUge,gBAC7B1Q,eAAetN,UAAUge,gBAAkB,SAAUtd,GACjD,MAAMud,EAAmBF,EAAqC3d,KAC1DC,KACAK,GAGJ,GAAIud,GACIrc,GAAGC,cAAcC,OAAOoc,gBAAiB,CACzC,MAAMC,EAAWvc,GAAGC,cAAcC,OAAOsc,kBAErC/d,KAAKge,sBAAwB,IAC7B9N,aAAa+N,aAAuC,CAChDnT,KAAMvJ,GAAGC,cAAc0c,aACnB,aACA,WAEJrO,IAAK,EACLC,MAAO,IACPC,OAAQ,KAEZ/P,KAAKge,mBAAqBF,E,CAKtC,OAAOF,CACX,EAKAO,iBAAiBxe,UAAUye,qBAAuB,SAC9CC,EACA/X,GAEA,MAAMgY,EACF/c,GAAGC,cAAc+c,iBAAiBF,EAAS/X,EAAQ,GAEnDgY,EAAK,YACL/c,GAAGC,cAAcC,OAAO0G,WACpBmW,EAAK,UAAU1O,QAAU,SAC7BsD,aAAauI,WAAWla,GAAGC,cAAcC,OAAO0G,aAEhDmW,EAAK,eACL/c,GAAGC,cAAcC,OAAO+c,wBACpBF,EAAK,aAAa1O,QAAU,SAChCsD,aAAauI,WACTla,GAAGC,cAAcC,OAAO+c,0BAG5BF,EAAK,WACL/c,GAAGC,cAAcC,OAAOC,WAAasF,SACjCsX,EAAK,WAGTA,EAAK,WACL/c,GAAGC,cAAcC,OAAOW,SAAW4E,SAASsX,EAAK,WAEjDA,EAAK,QACL/c,GAAGC,cAAcC,OAAOyC,eAAiB8C,SAASsX,EAAK,QAEvDA,EAAK,cACL/c,GAAGC,cAAcC,OAAO4a,WAAarV,SACjCsX,EAAK,cAGTA,EAAK,eACL/c,GAAGC,cAAcC,OAAOgd,OAASzS,OAAOsS,EAAK,eAE7CA,EAAK,eACL/c,GAAGC,cAAcC,OAAOid,OAAS1S,OAAOsS,EAAK,eAE7CA,EAAK,kBACL/c,GAAGC,cAAcC,OAAO0V,SAAWwH,QACN,SAAzBL,EAAK,kBAGTA,EAAK,aACL/c,GAAGC,cAAcC,OAAOmb,eAAiB5V,SACrCsX,EAAK,aAGTA,EAAK,mBACL/c,GAAGC,cAAcC,OAAOoc,gBAAkBc,QACZ,SAA1BL,EAAK,mBAGTA,EAAK,kBACL/c,GAAGC,cAAcC,OAAOgE,UAAYuG,OAChCsS,EAAK,iBAGjB,EAEAH,iBAAiBxe,UAAUif,iBAAmB,WAC1C,MAAMC,EAAQ,GACd,IAAIC,EAAW,IACXC,EAAY,EAChB,IAAK,IAAIrO,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,MAAMsO,EAAiBhf,KAAKif,MAAMjf,KAAKkf,OAASxO,GAChD,GAAIsO,EAAgB,CAChB,MAAM7X,EAAO6X,EAAe7X,KAC5B0X,EAAMta,KAAK4C,GACX2X,EAAW3X,EACP,CAAC,IAAK,KAAKrF,SAASqF,IACpB4X,G,EAIZ,QAAIF,EAAM/c,SAAS,MAER+c,EAAM/c,SAAS,MAEf+D,aAAa/B,cAAgB,GAE7Bib,GAAa,GAEgC,QAA7Cxd,GAAGC,cAAcC,OAAO0d,kBAKvC,EAEAhB,iBAAiBxe,UAAUyf,WAAa,SAAU7O,GAC9C,GAAI1K,aAAawZ,SACb,OAAO,EAWX,GARAlE,SAASmE,YAAYtf,KAAKuf,UAAUvf,KAAKwf,SAAW,EAAI,GAAK,IAC7D3Z,aAAa4Z,aAAalP,EAAO,GAAIA,EAAO,IAC5C1K,aAAa6Z,cAAcnP,EAAO,IAClC1K,aAAa8Z,gBAAgBpP,EAAO,IACpC1K,aAAa+Z,eAAerP,EAAO,IAEnCvQ,KAAKoe,qBAAqBpe,KAAKwf,SAAUxf,KAAKkf,QAE1Clf,KAAK6f,cACL7f,KAAK8f,2BAEL,KAAgC,MAAzB9f,KAAK+f,iBAER/f,KAAKkf,SACLrZ,aAAama,IAAIhgB,KAAKgf,iBAAiBiB,WAAW,IAI1D,OAAQjgB,KAAK+f,iBACT,KAAK,IACD/f,KAAKkf,SACLlf,KAAKkgB,aAAalgB,KAAKgf,iBAAiBiB,YACxC,MACJ,KAAK,IACDjgB,KAAKkf,SACLlf,KAAKmgB,cAAcngB,KAAKgf,iBAAiBiB,YACzC,MACJ,KAAK,IACDjgB,KAAKkf,SACLlf,KAAKogB,gBAAgBpgB,KAAKgf,iBAAiBiB,YAInD,OADAjgB,KAAKqgB,YAAY,YACV,CACX,EAEAlC,iBAAiBxe,UAAUmgB,oBAAsB,WAG7C,IAFA9f,KAAKsgB,iBAEEza,aAAa0a,OAAOha,OAASV,aAAa/B,cAAc,CAC3D,KAAgC,MAAzB9D,KAAK+f,kBACR/f,KAAKkf,SACLrZ,aAAama,IAAIhgB,KAAKgf,iBAAiBiB,WAAW,IAClDjgB,KAAKwgB,kBACDxgB,KAAKygB,aAAe5a,aAAa/B,iBAIzC,GAA6B,MAAzB9D,KAAK+f,gBACL,K,CAMR,KAAgC,MAAzB/f,KAAK+f,iBACR/f,KAAKkf,QAEb,EAEAf,iBAAiBxe,UAAU2gB,eAAiB,WACxCtgB,KAAKygB,YAAc,CACvB,EAEAtC,iBAAiBxe,UAAUkgB,YAAc,WACrC,OAAO7f,KAAK4e,kBAChB,EAEAT,iBAAiBxe,UAAU6gB,cAAgB,WACvCxgB,KAAKygB,cACwB,MAAzBzgB,KAAK+f,iBACL/f,KAAKkf,QAEb,EAKAwB,eAAe/gB,UAAUqW,gBAAkB,WACvChW,KAAKH,MAAQG,KAAK4a,cAClB5a,KAAKF,OAASE,KAAK6a,eACnB,MAAMlV,EAAgB3F,KAAK2gB,eACvB9a,aAAa+a,QACb5gB,KAAKkF,EAAIS,EAAcT,EAAIS,EAAc9F,MAAQG,KAAKH,MAEtDG,KAAKkF,EAAIS,EAAcT,EAEvBS,EAAcP,EAAI,EAClBpF,KAAKoF,EAAIO,EAAcP,EAAIpF,KAAKF,OAEhCE,KAAKoF,EAAIO,EAAcP,EAAIO,EAAc7F,MAEjD,EAKA+gB,UAAUlhB,UAAUyZ,gBAAkB,SAAU0H,GAC5C9gB,KAAK+gB,kBAAoBD,CAC7B,EAEAD,UAAUlhB,UAAUqE,WAAa,SAAUI,GACnCpE,KAAK+gB,mBAAmB/gB,KAAK+gB,kBAAkB3c,EACvD,EAKA,MAAM4c,EAA4BC,SAASthB,UAAUC,WACrDqhB,SAASthB,UAAUC,WAAa,WAC5BohB,EAA0BjhB,KAAKC,MAC/BA,KAAKkhB,UAAY7F,YACjBrb,KAAKmhB,UAAY,CACrB,EAEAF,SAASthB,UAAUyhB,YAAc,WAC7B,OAAOphB,KAAKkhB,SAChB,EAMAD,SAASthB,UAAUyb,YAAc,SAAUiG,GACvCrhB,KAAKkhB,UAAYG,EACjBxb,aAAahB,wBAAwB7E,KAAKshB,aAC9C,EAEAL,SAASthB,UAAU0d,YAAc,WAC7B,OAAOrd,KAAKmhB,SAChB,EAEAF,SAASthB,UAAU2f,YAAc,SAAUiC,GACvCvhB,KAAKmhB,UAAYI,CACrB,EAKA,MAAMC,EACF9G,cAAc/a,UAAU8hB,iBAC5B/G,cAAc/a,UAAU8hB,iBAAmB,WACvCD,EAAiDzhB,KAAKC,MACtD,MAAM2F,EAAgB3F,KAAK2gB,eAC3B,EAAA3L,mBAAmB0M,oBAAoB/b,GACvC,EAAAqP,mBAAmB2M,OACvB,EAEAjH,cAAc/a,UAAUgb,kBAAoB,WACxC,MAAMiH,EAAKjL,SAAS9W,MACdgiB,EAAK7hB,KAAK8hB,iBAAiB,GAAG,GAAS,EACvCC,GAAMpL,SAAS7W,OAAS8hB,GAAM,EAEpC,OAAO,IAAII,UAAUD,EADV,EACkBH,EAAIC,EACrC,EAEA,MAAMI,EAAgCvH,cAAc/a,UAAUuiB,UAC9DxH,cAAc/a,UAAUuiB,UAAY,WAChCD,EAA8BliB,KAAKC,MACnC,EAAAgV,mBAAmBmN,oBACvB,EAEA5gB,GAAGC,cAAc4gB,aAGb7gB,GAAGC,cAAcC,OAAO4gB,QACxBhM,aAAaiM,eACDC,GAAGC,OAAOC,MAClBC,OAAOpN,OAAOC,WAAa,EAAG,K,CAG9C,C,0GC7yDA,eAoDA,MAAaoN,UAAwC,EAAAC,cAArD,c,oBACY,KAAAC,QAAkB,EAClB,KAAAC,SAAmB,CA8Y/B,CA3YIC,QAAQC,GACJC,MAAMF,QAAQC,GACdhjB,KAAK6iB,QAAU7iB,KAAKH,MACpBG,KAAK8iB,SAAW9iB,KAAKF,MACzB,CAQA2Z,gBAAgBpZ,GAiFZL,KAAKe,OAEL,CAII,MAAMmY,EAAOlZ,KAAKkjB,WAAW7iB,GACvB0M,EAAU/M,KAAKmjB,kBACrBnjB,KAAK6iB,QAAU3J,EAAKrZ,MAAkB,EAAVkN,EAC5B/M,KAAK8iB,SAAWjR,KAAKmL,IACjB9D,EAAKpZ,OAAmB,EAAViN,EACd/M,KAAK+Y,cAAc,G,CAI3B/Y,KAAKmB,SACT,CAEA+hB,WAAW7iB,GACPL,KAAK2F,cAAcoG,oBAAqB,EACxC,MAAMmN,EAAOlZ,KAAK2F,cAAcud,WAAW7iB,GAG3C,OAFAL,KAAK2F,cAAcoG,oBAAqB,EAEjCmN,CACX,CAKAlD,kBACIhW,KAAK2F,cAAcqQ,iBACvB,CAEAoN,oBAEI,SADwD,IAA/Bvd,aAAaxB,eAElCrE,KAAKgW,kBACE,GAGf,CAEAqN,eAAe1T,GACX,MAAMsD,EAAWpN,aAAaoN,WACxBG,EAAgB7R,GAAGC,cAAcC,OAAO2R,cAExC4H,EAAKzZ,GAAGC,cAAcC,OAAOmV,aAAa1R,EAC1C+V,EAAK1Z,GAAGC,cAAcC,OAAOmV,aAAaxR,EAChDpF,KAAKkF,EAAIyK,EAAK2T,GAAKtI,EACnBhb,KAAKoF,EAAIuK,EAAK4T,GAAKtI,EACnBjb,KAAKH,MAAQG,KAAK6iB,QAClB7iB,KAAKF,OAASE,KAAK8iB,SAEf7P,GAA8B,IAAlBG,GACZpT,KAAKwjB,iBAEb,CAEAC,oBAAoB9T,GACLgH,SAAS9W,MACT8W,SAAS7W,OADpB,MAEM4jB,EAAK/M,SAASgN,SACdC,EAAKjN,SAASkN,UAIpB,GAFAta,QAAQC,IAAI,2BAA6Bsa,KAAKC,UAAUpU,IAEnDA,EA2BL,OA1BIA,EAAKqU,GAAKhkB,KAAK6iB,QAAU,EAAI,IAC7BlT,EAAK2T,GAAK,EACV3T,EAAKlP,GAAKT,KAAKikB,eAAetU,EAAKqU,KAInCrU,EAAKqU,GAAKhkB,KAAK6iB,QAAU,EAAIa,EAAK1jB,KAAK6iB,UACvClT,EAAK2T,GAAKI,EAAK1jB,KAAK6iB,QACpBlT,EAAKlP,GAAKT,KAAKikB,eAAetU,EAAKqU,KAInCrU,EAAKuU,GAAKlkB,KAAK8iB,SAAWnT,EAAK2R,WAAa,EAAI,IAChD3R,EAAK4T,GAAK5T,EAAKuU,GAAKvU,EAAK2R,WAAa,EACtC3R,EAAKwU,QAAU,EACfxU,EAAKjP,GAAKV,KAAKkR,QAAUvB,EAAKwU,OAASnkB,KAAKkR,QAC5CvB,EAAKyU,GACDpkB,KAAKoF,EAAIpF,KAAK8iB,SAAWvhB,GAAGC,cAAcC,OAAO4iB,aAIrD1U,EAAKuU,GAAKlkB,KAAK8iB,SAAWc,EAAK5jB,KAAK8iB,WACpCnT,EAAK4T,GAAKK,EAAK5jB,KAAK8iB,SACpBnT,EAAKjP,GAAKV,KAAKkR,SAGZvB,CACX,CAOA2U,yBAAyB3U,GACrB,MAAMoB,EAAmB/Q,KAAK2F,cAAcoL,iBACxCA,IACAA,EAAiBC,KAAKrB,EAAKlP,GAAIkP,EAAKjP,IACpCqQ,EAAiBI,MAAM/L,EAAIuK,EAAKwU,QAEpCnkB,KAAKukB,YAAYnf,EAAIuK,EAAKyU,EAC9B,CAEAI,iBAMI,OAJIxkB,KAAKoF,EACLpF,KAAKukB,YAAYzkB,OACjByB,GAAGC,cAAcC,OAAO4iB,aAEX,CACrB,CAoBAvP,wBACIvL,QAAQC,IACJ,mEAGJ,IAAImG,EAAwB,CAAC,EAE7B,IAAK3P,KAAKojB,oBAAqB,OAG/B,MAAMqB,EAAwBtJ,SAASiG,cAEvC,IAAKqD,EAED,MADAlb,QAAQmb,KAAKvJ,SAASiG,eAChB,IAAIuD,MAAM,kBAGpBhV,EAAKqU,GAAKS,EAAMxf,UAChB0K,EAAKuU,GAAKO,EAAMtf,UAEhBoE,QAAQC,IAAI,QAASmG,EAAKqU,GAAIrU,EAAKuU,IAEnCvU,EAAKlP,GAAKT,KAAK6iB,QAAU,EACzBlT,EAAKjP,GAAKV,KAAK8iB,SACfnT,EAAKwU,OAAS,EACdxU,EAAK2R,WAAazb,aAAad,0BAC/B4K,EAAK2T,GAAK3T,EAAKqU,GAAKhkB,KAAK6iB,QAAU,EACnClT,EAAK4T,GAAK5T,EAAKuU,GAAKlkB,KAAK8iB,SAAWnT,EAAK2R,WACzC3R,EAAKyU,GAAKpkB,KAAKwkB,iBAEfjb,QAAQC,IAAIsa,KAAKC,UAAUpU,IAE3BA,EAAwB3P,KAAKyjB,oBAAoB9T,GAG7CA,EAAK2T,GAAK/hB,GAAGC,cAAcC,OAAOmV,aAAa1R,IAAMlF,KAAKkF,GAC1DyK,EAAK4T,GAAKhiB,GAAGC,cAAcC,OAAOmV,aAAaxR,IAAMpF,KAAKoF,GAC1DpF,KAAK6iB,UAAY7iB,KAAKH,OACtBG,KAAK8iB,WAAa9iB,KAAKF,SAGvBE,KAAKqjB,eAAe1T,GAGpB3P,KAAKskB,yBAAyB3U,GAEtC,CAEAmK,gCACI,IAAKtB,WAAWC,WAGZ,YADAlP,QAAQmb,KAAK,YAGjB,IAAKE,YAAYC,aAGb,YADAtb,QAAQmb,KAAK,kBAIjB,IAAI/U,EAAwB,CAAC,EAGzB8U,EAAQtJ,SAASiG,cACrB,IAAKqD,EAED,YADAlb,QAAQmb,KAAK,kBAGjB,IAAKD,EAAMK,eAAe,QAEtB,YADAvb,QAAQmb,KAAK,mBAAqBD,GAGtC,IAAKA,EAAMK,eAAe,MAEtB,YADAvb,QAAQmb,KAAK,iBAAmBD,GAKpC,IAMIlN,EANAwN,EAAQ1O,aAAaC,OACzB,KAAMyO,aAAiB9K,cAEnB,OADA1Q,QAAQmb,KAAK,gBACN,EAOPnN,EADe,UAAfkN,EAAMxH,KACG8H,EAAMC,WAAWC,cAEjBF,EAAMC,WAAWE,cAI9B,IAAIC,EAAe,GACnBA,EAAe5N,EACf,IAAI6N,EAASD,EAAaV,EAAMvH,IAC3BkI,EAOe,UAAfX,EAAMxH,OACamI,EAAQC,OAAOC,WACnB,UAAfb,EAAMxH,OAAoCmI,EAAQG,OAAOD,YAK9D3V,EAAKqU,GAAKoB,EAAOlgB,EACjByK,EAAKuU,GAAKkB,EAAOhgB,EAEjBuK,EAAK6V,KACc,UAAff,EAAMxH,KACCmI,EAAwBK,YAAY1R,OAAOjU,OAAS,EACrDslB,EAAOrR,OAAOjU,OAExB6P,EAAKlP,GAAKT,KAAKiR,OAAS,EACxBtB,EAAKjP,GAAKV,KAAKkR,QAEfvB,EAAKwU,OAAS,EACdxU,EAAK2R,WAAazb,aAAad,0BAE/B4K,EAAK2T,GAAK3T,EAAKqU,GAAKhkB,KAAK6iB,QAAU,EACnClT,EAAK4T,GAAK5T,EAAKuU,GAAKlkB,KAAK8iB,SAAWnT,EAAK2R,WAAa3R,EAAK6V,KAE3D7V,EAAKyU,GACDpkB,KAAKoF,EACLpF,KAAKukB,YAAYzkB,OACjByB,GAAGC,cAAcC,OAAO4iB,YAE5B1U,EAAwB3P,KAAKyjB,oBAAoB9T,GAGjD3P,KAAKqjB,eAAe1T,GAGpB3P,KAAKskB,yBAAyB3U,GAE1B3P,KAAK0lB,WAAW1lB,KAAK2lB,mBA3CrBpc,QAAQmb,KAAK,WA4CrB,CAEAiB,kBACI3lB,KAAK2F,cAAcggB,iBACvB,CAEAC,sBAAsBvlB,GAElBL,KAAKe,OAEL,MAAM4E,EAAgB3F,KAAK2F,cACrBkgB,EAAe7lB,KAAK4F,SAASxD,SAE7B4D,EAAYL,EAAcmD,gBAAgBzI,EAAM,EAAG,EAAG,GAQ5D,OAPA2F,EAAU3F,KAAOsF,EAAc+D,wBAAwBrJ,GACvD2F,EAAUlG,OAAS6F,EAAcmgB,eAAe9f,GAAW,GAG3DhG,KAAKmB,UAELwE,EAAc8H,YAAYoY,GACnB7f,EAAUlG,MACrB,EA/YJ,mC,wFCpDA,eAOA,MAAa8iB,UAAsB,EAAAmD,UAG/BzgB,YAAY0d,GACRC,MAAMD,EACV,CAEAD,QAAQC,GAEE,kBAAmBA,GAKzBzZ,QAAQC,IAAI,0BAKZxJ,KAAK2gB,eAAiBqC,EAAMrd,eATxB4D,QAAQyc,MAAM,+BAUtB,CAGIrgB,oBACA,OAAO3F,KAAK2gB,cAChB,CAEI/a,eACA,OAAO5F,KAAK2gB,eAAe/a,QAC/B,CAKI2e,kBAEA,IADuBvkB,KAAK2gB,eAAevI,eAEvC,MAAM,IAAIuM,MACN,iDAIR,OAAO3kB,KAAK2gB,eAAevI,cAC/B,CAEI6N,oBACA,OAAOjmB,KAAK2gB,eAAeuF,kBACrBlmB,KAAK2gB,eAAeuF,kBACpB,CACItL,YAAa,IAAM,EACnBC,aAAc,IAAM,EAElC,CAEA9Z,OACIf,KAAK2gB,eAAe5f,MACxB,CAEAI,UACInB,KAAK2gB,eAAexf,SACxB,CAEAgiB,kBAMI,OAHAnjB,KAAK2gB,eAAewF,gBACJnmB,KAAK2gB,eAAe5T,SAAW,EAGnD,CAEAZ,cAEI,OAAOnM,KAAK2gB,eAAevU,eAAiB,CAChD,CAEAC,WACI,OAAOrM,KAAK2gB,eAAetU,UAC/B,CAEA0M,cAAcqN,GACV,OAAOpmB,KAAK2gB,eAAe5H,cAAcqN,EAC7C,CAEAxd,WAAWvI,GAEP,OADYL,KAAK2gB,eAAeuC,WAAW7iB,GAChCR,KACf,CAEA6B,aACI,OAAO1B,KAAK2gB,eAAejf,YAC/B,CAKAsU,kBAAmB,CAEnBwN,kBACIxjB,KAAK2gB,eAAe6C,iBACxB,CAEIte,MAAEJ,GACF9E,KAAK2gB,eAAezb,EAAIJ,CAC5B,CAEIM,MAAEN,GACF9E,KAAK2gB,eAAevb,EAAIN,CAC5B,CAEIjF,UAAMiF,GACN9E,KAAK2gB,eAAe9gB,MAAQiF,CAChC,CAEIhF,WAAOgF,GACP9E,KAAK2gB,eAAe7gB,OAASgF,CACjC,CAEIjF,YACA,OAAOG,KAAK2gB,eAAe9gB,KAC/B,CAEIoR,aACA,OAAOjR,KAAK2gB,eAAe9gB,KAC/B,CAEIC,aACA,OAAOE,KAAK2gB,eAAe7gB,MAC/B,CAEIoR,cACA,OAAOlR,KAAK2gB,eAAe7gB,MAC/B,CAEAmkB,eAAe/e,GACX,OAAOA,CACX,CAEAmhB,eAAejhB,GACX,OAAOA,CACX,EA5IJ,iB,sGCPA,eAOA,MAAakhB,UAAoC,EAAA1D,cAC7C2D,WAAWzhB,GACP,IAAIyP,EAAUzP,EACS,iBAAZyP,IACPA,EAAUvI,OAAOuI,IAEjBiS,MAAMjS,KACNA,EAAU,KAEdvU,KAAKukB,YAAYhQ,QAAUzP,CAC/B,CAEA2hB,kBAEI,IAAKzmB,KAAKukB,YACN,OAGJ,MAAMP,EAAKhkB,KAAKkF,EACVyM,EAAI3R,KAAKH,MACT0iB,EAAKviB,KAAKukB,YAAY1kB,MAEtB6mB,EACFnlB,GAAGC,cAAcC,OAA0B,oBAGzCklB,EAAKplB,GAAGC,cAAcC,OAAOmlB,YAEnC,IAAIC,EAAO7C,EAAK2C,EAEhB,OAAQD,GACJ,IAAK,QACDG,EAAO7C,EAAKrS,EAAI4Q,EAAKoE,EACrB,MACJ,IAAK,SACDE,EAAO7C,EAAKrS,EAAI,EAAI4Q,EAAK,EAAIoE,EAC7B,MACJ,IAAK,OACDE,EAAO7C,EAAK2C,EACZ,MACJ,IAAK,WACD3mB,KAAKumB,WAAW,GAChB,MACJ,IAAK,iBACDvmB,KAAKumB,WAAWhlB,GAAGC,cAAcC,OAAOmb,gBACxC,MACJ,IAAK,OACDiK,EAAO7mB,KAAKkF,EAAIlF,KAAKqM,WAAasa,EAI1C3mB,KAAKukB,YAAYrf,EAAI2hB,CACzB,CAEAC,kBACevlB,GAAGC,cAAcC,OAAOmV,aAAa1R,EAAhD,MACM+V,EAAK1Z,GAAGC,cAAcC,OAAOmV,aAAaxR,EAC1CqR,EAAe5Q,aAAa4Q,eAC5BsQ,EAAkBlhB,aAAaxB,aAKrC,GAHArE,KAAKymB,kBAGgB,IAAjBhQ,IAA2C,IAArBsQ,EAAwB,CAE9C,MAAMC,EAAO,EAEbhnB,KAAKukB,YAAYnf,EAAI4hB,EAAO/L,EAG5Bjb,KAAKoF,EAAIpF,KAAKukB,YAAY0C,SACpBD,EACAhnB,KAAKukB,YAAYzkB,OACjByB,GAAGC,cAAcC,OAAO4iB,YACxBpJ,EACA+L,EAAO/L,C,MAEbjb,KAAKukB,YAAYnf,EACbpF,KAAKoF,EACLpF,KAAKukB,YAAYzkB,OACjByB,GAAGC,cAAcC,OAAO4iB,WAEpC,EAlFJ,+B,oFCPA,eAYA,MAAa0B,UAAkB,EAAAmB,aAI3B5hB,YAAY0d,GACRC,QACAjjB,KAAKmnB,KAAKnE,EACd,CAEAmE,KAAKnE,GACDhjB,KAAKgjB,MAAQA,EAEbhjB,KAAKsZ,GAAG,SAAU0J,GAAyBhjB,KAAK+iB,QAAQC,KACxDhjB,KAAKsZ,GAAG,WAAY0J,GAAyBhjB,KAAKonB,QAAQpE,KAC1DhjB,KAAKsZ,GAAG,WAAY0J,GAAyBhjB,KAAKqnB,aACtD,CAEA1F,QACI3hB,KAAK4Z,KAAK,QAAS5Z,KAAKgjB,MAC5B,CAEAsE,UACItnB,KAAK4Z,KAAK,UAAW5Z,KAAKgjB,MAC9B,CAEAuE,UACIvnB,KAAK4Z,KAAK,UAAW5Z,KAAKgjB,MAC9B,CAEAD,QAAQC,GAAuB,CAC/BqE,YAAa,CACbD,QAAQpE,GAAuB,EA/BnC,a,+DCAA,MAAqBwE,EAIVC,qBAIH,OAHKD,EAAkBE,WACnBF,EAAkBE,SAAW,IAAIF,GAE9BA,EAAkBE,QAC7B,CAEA,cATQ,KAAAC,YAA2C,CAAC,CAS9B,CAEf3H,IAAIlV,EAAcgW,GACrB,GAAa,KAAThW,EAAa,CACb,IAAI8c,EAAY,GACZC,EAAU,IACVC,EAAM,EAEV,IAAK,IAAIpX,EAAI,EAAGA,EAAIoX,EAAKpX,IACrB5F,GAAQsC,OAAO2a,aACXlW,KAAKC,MAAMD,KAAKmW,UAAYH,EAAUD,IAClCA,E,CAUhB,OALA5nB,KAAK2nB,YAAY7c,GAAqB,CAClCmd,iBAAkBnH,EAClBoH,QAAQ,GAGLloB,IACX,CAEOmoB,KAAKrd,EAAcgW,GACtB,OAAO9gB,KAAKggB,IAAIlV,EAAMgW,EAC1B,CAEO2B,IAAI3X,GAGP,OAFa9K,KAAK2nB,YAAY7c,GAElBmd,gBAChB,CAEOC,OAAOpd,GAKV,OAJa9K,KAAK2nB,YAAY7c,GAEzBod,QAAS,EAEPloB,IACX,CAEOooB,SAAStd,GAKZ,OAJa9K,KAAK2nB,YAAY7c,GAEzBod,QAAS,EAEPloB,IACX,CAEO2hB,MAAM7W,GACT,OAAO9K,KAAKkoB,OAAOpd,EACvB,CAEOud,aACH,IACI,IAAK,MAAMC,KAAOtoB,KAAK2nB,YAGnB,GAFa3nB,KAAK2nB,YAAYW,GAErBJ,OAAQ,CACb,MAAMK,EAAkBvoB,KAAKyiB,IAAI6F,GAE7BC,aAA2BC,UAC3BD,G,EAId,MAAOjY,GACL/G,QAAQC,IAAI8G,E,CAEpB,EAjFJ,W,6FCXA,eACA,SAEA,SA0CA,MAAa0E,EAWFyS,2BAA2B9hB,GAE9BqP,EAAmB2L,eAAiBhb,EACpCqP,EAAmByT,OAAO9iB,EAC9B,CAEO8hB,4BACCzS,EAAmB0T,WACnB1T,EAAmB2L,oBAAiBhc,EACpCqQ,EAAmB2T,gBAAahkB,EAChCqQ,EAAmB0T,UAAW,EAEtC,CAQQjB,cAAc9hB,GACdqP,EAAmB0T,SACnBnf,QAAQC,IAAI,oCAKhBwL,EAAmB2T,WAAa,CAC5B,IAAI,EAAAhG,gCAAgC,CAAEhd,kBACtC,IAAI,EAAA2gB,4BAA4B,CAAE3gB,mBAGtCqP,EAAmB0T,UAAW,EAClC,CAQOjB,oBACH3c,GASA,OAJckK,EAAmB2T,WAAYC,QAAQtY,GAC1CA,aAAa0E,EAAmB6T,kBAAkB/d,KAGhDge,KACjB,CAEArB,yBAAyB3c,GACrB,OAAQA,GACJ,IAAK,kCACD,OAAO,EAAA6X,gCACX,IAAK,8BACD,OAAO,EAAA2D,4BACX,QACI,OAAO,EAAA1D,cAEnB,CAEO6E,eACCzS,EAAmB2T,YACnB3T,EAAmB2T,WAAWlY,SAASsE,IACnCA,EAAU4M,OAAO,GAG7B,EAlFJ,uBAMkB,EAAAgG,YAA4C,CAAC,EAC5C,EAAAe,UAAoB,C,qFCrCvC,qBACEpjB,YAAoByjB,EAA8B,CAAC,GAA/B,KAAAA,WAAAA,EAClB/oB,KAAK+oB,WAAa,CAAC,CACrB,CASAzP,GAAG0P,EAAuBlI,GACnB9gB,KAAK+oB,WAAWC,KACnBhpB,KAAK+oB,WAAWC,GAAa,IAG1BlI,GAIDA,aAAgB0H,UAClBxoB,KAAK+oB,WAAWC,GAAWzkB,KAAKuc,EAEpC,CASAlH,KAAKoP,KAA0Bjf,GACxB/J,KAAK+oB,WAAWC,IAIrBhpB,KAAK+oB,WAAWC,GAAWvY,SAASqQ,IAC5BA,aAAgB0H,SAKtB1H,KAAQ/W,GAJNR,QAAQmb,KAAK,yBAIF,GAEjB,E,sHCMF,MAAMuE,aAAeC,SAASN,QAAQlY,GAC3BA,EAAEyY,YAAYrnB,SAAS,wBAG5BsnB,WACDH,aAAa1iB,OAAS,GAAK0iB,aAAa,GAAGne,KAE1CmV,WACDgJ,aAAa1iB,OAAS,GAAK0iB,aAAa,GAAGhJ,WAG1C1e,GAAS,CACXC,cAA8B,CAAC,GAyCnC,IAAK6nB,cAtCL9nB,GAAGC,cAAc8nB,UAAY,SAAUC,GASnC,OARgBzF,KAAK0F,MAAMD,GAAK,CAACE,EAAGC,KAChC,IACI,OAAOnoB,GAAGC,cAAc8nB,UAAUI,E,CACpC,MAAOpZ,GACL,OAAOoZ,C,IAKnB,EAKAnoB,GAAGC,cAAc0c,aAAe,YAAanU,GACzC,MAAM0f,EAAIjY,OAAOmY,KAAK5f,GACtB,IAAI6f,EAAW,GAEf,KAAOH,EAAEljB,OAAS,GAId,GAHAqjB,EAAW7f,EAAK/C,SAAiByiB,EAAEX,QAG/B7I,WAAW2J,GAAW,OAAO3J,WAAW2J,GAGhD,MAAO,EACX,EAEAroB,GAAGC,cAAc0E,IAAM,CACnB2jB,QAAS,GACTjgB,MAAO,GACPkgB,OAAQ,GACRC,QAAS,GACTC,QAAS,GACTC,SAAU,IAGd,SAAKZ,GACD,mDACA,+CACA,2CACA,8BACA,iCACH,CAND,CAAKA,gBAAAA,cAAa,KAQlB9nB,GAAGC,cAAcC,OAAS,CACtB6a,iBAAkB+M,cAAca,oBAChCC,gBAAiBd,cAAce,kBAC/BC,eAAgBhB,cAAciB,iBAC9BC,UAAWlB,cAAckB,UACzBC,YAAanB,cAAcmB,YAC3BC,sBAAsB,EACtBroB,SAAU4J,OACNzK,GAAGC,cAAc0c,aAAa,YAAa,UAAY,IAE3DzY,UAAWuG,OACPzK,GAAGC,cAAc0c,aAAa,aAAc,iBACxC,GAERjV,YAAa+C,OACTzK,GAAGC,cAAc0c,aAAa,gBAAiB,aAAe,IAElE7U,YAAa2C,OACTzK,GAAGC,cAAc0c,aAAa,gBAAiB,aAAe,IAElE7B,WAAYrQ,OACRzK,GAAGC,cAAc0c,aAAa,eAAgB,aAElDha,eAAgB8H,OACZzK,GAAGC,cAAc0c,aAAa,iBAAkB,UAAY,GAEhExb,eAAgB0K,OACZ7L,GAAGC,cAAc0c,aACb,iBACA,gBACC,WAETvb,eAAgByK,OACZ7L,GAAGC,cAAc0c,aACb,iBACA,gBACC,WAETtb,eAAgBwK,OACZ7L,GAAGC,cAAc0c,aAAa,iBAAkB,eAC5C,WAER0I,YAAa5a,OACTzK,GAAGC,cAAc0c,aAAa,gBAAiB,aAAe,GAElEmG,YAAarY,OACTzK,GAAGC,cAAc0c,aAAa,gBAAiB,aAAe,GAElEwM,qBAAsB1e,OAClBzK,GAAGC,cAAc0c,aACb,4BACA,iBACC,IAET/F,oBACI5W,GAAGC,cAAc0c,aACb,uBACA,cACC,OACTO,OAAQzS,OACJzK,GAAGC,cAAc0c,aAAa,cAAe,cAAgB,GAEjEQ,OAAQ1S,OACJzK,GAAGC,cAAc0c,aAAa,cAAe,cAAgB,GAEjE/G,SAAUwH,QAIA,SAHNpd,GAAGC,cAAc0c,aACb,qBACA,kBACY,GAEpByM,MAAiC,EAA1BtB,cAAckB,UAAgBlB,cAAcmB,YACnDI,OAAQvB,cAAckB,UAAYlB,cAAcmB,YAAc,EAC9D1b,QAAS9C,OAAOzK,GAAGC,cAAc0c,aAAa,WAAY,SAC1DxB,YAAa1Q,OACTzK,GAAGC,cAAc0c,aAAa,eAAgB,eAElDvB,mBAAoB3Q,OAChBzK,GAAGC,cAAc0c,aAAa,sBAAuB,SAEzDtB,eAAgB5Q,OACZzK,GAAGC,cAAc0c,aAAa,kBAAmB,WAErDrB,gBAAiB7Q,OACbzK,GAAGC,cAAc0c,aAAa,mBAAoB,YAEtDhV,oBAAqB8C,OACjBzK,GAAGC,cAAc0c,aAAa,wBAAyB,WAE3D/U,oBACI5H,GAAGC,cAAc0c,aAAa,wBAAyB,WACvD,QACJxV,MAAO,CACHC,QAAS,iBAEbkiB,iCAAiC,EACjCnpB,WAAY,GACZkV,aAAc,IAAIkU,OAAO,GAAI,GAC7BroB,sBAAsB,EACtBsoB,WAAYpM,QAIF,SAHNpd,GAAGC,cAAc0c,aACb,oBACA,oBAGR8M,eAAgB5d,OACZ7L,GAAGC,cAAc0c,aACb,mBACA,eACC,YAET+M,cAAe7d,OACX7L,GAAGC,cAAc0c,aACb,kBACA,iBACC,8BAET/V,WACI5G,GAAGC,cAAc0c,aACb,qBACA,aACC,SACTM,wBACIjd,GAAGC,cAAc0c,aAAa,kBAAmB,aACjD,SACJiB,kBAAmB/R,OACf7L,GAAGC,cAAc0c,aAAa,eAAgB,YAC1C,WAERgN,qBAAsBjL,WAAW,4BAA8B,QAC/DkL,aAAc5pB,GAAGC,cAAc8nB,UAC3B/nB,GAAGC,cAAc0c,aAAa,aAAc,WAEhDL,gBAAiBc,QAIP,SAHNpd,GAAGC,cAAc0c,aACb,oBACA,kBAGRkN,cAAehe,OACX7L,GAAGC,cAAc0c,aAAa,aAAc,YACxC,eAERmN,eAAgB9pB,GAAGC,cAAc8nB,UAC7B/nB,GAAGC,cAAc0c,aACb,iCACA,kBACC,4BAEToN,eAAgB/pB,GAAGC,cAAc8nB,UAC7B/nB,GAAGC,cAAc0c,aACb,oBACA,eACC,mEAETH,kBAAmB/W,SACfzF,GAAGC,cAAc0c,aACb,sBACA,kBAGRqN,kBAAmBvkB,SACfzF,GAAGC,cAAc0c,aACb,eACA,yBACC,GAET3V,SACIhH,GAAGC,cAAc0c,aAAa,QAAS,kBAAoB,KAC/DsN,mBAAoB1H,KAAK0F,MAAMvJ,WAAW,uBAAyB,MACnEjN,oBAAqB2L,QAA6C,SAArCsB,WAAW,uBACxCpe,cAAeoe,WAAW,kBAC1B3L,YAAatN,SAASiZ,WAAW,iBAAmB,IACpD7M,cAAepM,SAASiZ,WAAW,mBAAqB,GACxDoC,MACWjN,MAAMqW,UAAYrW,MAAMsW,cAAc,SAIrD,MACI,MAAMC,EAAiCpqB,GAAGC,cAAc8nB,UACpDrJ,WAAuB,YAEtB1e,GAAGC,cAAcC,OAAOiH,OAG7BijB,EAAYC,SAASnb,SAASC,IAC1B,MAAMH,EAAuC,CAAC,EAC9CA,EAAOG,EAAEmb,cAAgBnb,EAAEob,SAC3Bta,OAAOC,OAAOlQ,GAAGC,cAAcC,OAAOiH,MAAa6H,EAAO,GAEjE,EAZD,GAkBA,IAAIwb,2BAA6BlL,UAAUlhB,UAAUC,WACrDihB,UAAUlhB,UAAUC,WAAa,WAC7BmsB,2BAA2BhsB,KAAKC,MAChCuB,GAAGC,cAAcC,OAAOmZ,YACpBoR,KAAK/L,WAAW,kBAAoBtJ,SAASgN,QACrD,EAMApiB,GAAGC,cAAc0E,IAAI+lB,iBACjB,0CACJ1qB,GAAGC,cAAc0E,IAAIgmB,kBACjB,0CACJ3qB,GAAGC,cAAc0E,IAAIimB,kBAAoB,oCACzC5qB,GAAGC,cAAc0E,IAAIkmB,mBACjB,qGACJ7qB,GAAGC,cAAc0E,IAAIC,kBACjB,uCAEJ5E,GAAGC,cAAc6F,UAAY,WACzB,MAAMglB,EAAU9qB,GAAGC,cAAc0c,aAAa,YAAa,UACrDvO,EAAOmU,KAAK0F,MAAM6C,GAClBC,EAAoB,CAAC,EAO3B,OALAA,EAAQxC,OAAS,MAACnlB,GAAW4nB,OAAOzI,KAAK0F,MAAM7Z,EAAKma,SACpDwC,EAAQvC,QAAU,MAACplB,GAAW4nB,OAAOzI,KAAK0F,MAAM7Z,EAAKoa,UACrDuC,EAAQtC,QAAU,MAACrlB,GAAW4nB,OAAOzI,KAAK0F,MAAM7Z,EAAKqa,UACrDsC,EAAQrC,SAAW,MAACtlB,GAAW4nB,OAAOzI,KAAK0F,MAAM7Z,EAAKsa,WAE/CqC,CACV,CAX4B,GAa7B/qB,GAAGC,cAAc6F,UAAUG,KAAO,GAElCjG,GAAGC,cAAc6F,UAAUC,KAAO,CAC9BI,MAAO,EACP6F,WAAY,EACZG,cAAe,EACfI,cAAe,EACfF,OAAQ,EACRI,KAAM,EACNI,OAAQ,EACR4J,KAAM,EACNxJ,SAAU,EACVnE,aAAc,GACdF,OAAQ,GACRL,IAAK,GACLnC,KAAM,GACNE,SAAU,GACVE,SAAU,GACV0C,KAAM,GACN6N,QAAS,GACT1M,MAAO,GACPrB,IAAK,GACLiD,UAAW,GACXoB,IAAK,GACLG,gBAAiB,GACjBE,QAAS,GACTE,aAAc,GACdE,aAAc,GACdtE,KAAM,GACNE,OAAQ,GACRE,MAAO,GACPP,QAAS,GACTS,MAAO,GACPE,MAAO,GACPE,MAAO,GACP8D,KAAM,GACNoJ,gBAAiB,GACjBC,aAAc,GACd4T,YAAa,GACbC,YAAa,GACbC,YAAa,GACbC,kBAAmB,GACnBC,kBAAmB,GACnBC,WAAY,GACZ3e,WAAY,GACZC,SAAU,GACVG,aAAc,GACdC,WAAY,GACZ5C,WAAY,GACZE,aAAc,GACdC,YAAa,GACb8L,cAAe,GACfC,YAAa,GACbC,gBAAiB,GACjBC,cAAe,GACf9L,YAAa,GACbyC,qBAAsB,GACtBmK,eAAgB,IAOpBtX,GAAGC,cAAcsrB,YAAc,SAAUC,GACrC,MAAMxkB,EAAWhH,GAAGC,cAAcC,OAAO8G,SAEzC,OAAIA,EAASykB,MAAM,MACRzrB,GAAGC,cAAc6F,UAAkB,OAAE0lB,GAE5CxkB,EAASykB,MAAM,MACRzrB,GAAGC,cAAc6F,UAAmB,QAAE0lB,GAE7CxkB,EAASykB,MAAM,MACRzrB,GAAGC,cAAc6F,UAAmB,QAAE0lB,GAE7CxkB,EAASykB,MAAM,MACRzrB,GAAGC,cAAc6F,UAAoB,SAAE0lB,GAE3CxrB,GAAGC,cAAc6F,UAAmB,QAAE0lB,EACjD,EAQAxrB,GAAGC,cAAc+c,iBAAmB,SAAUF,EAAiB/X,GAC3D,IAAIqJ,EAAyB,CACzBsd,KAAM,GACN3O,KAAM,CAAC,GAEX,IAEI,IAAI4O,EAAO/R,SAASsC,MAAMY,GAAS6O,OAMnC,GAHI5mB,EAAQ,IAAGA,EAAQ,GAGnB+X,GAAW,EAAG,CACd,IAAI8O,EAAchU,UAAUiU,sBAC5B,GAAID,IACAD,EAAOC,EAAYD,MAEdA,GACD,OAAOvd,C,CAKnB,IAAIQ,EAAQ+c,EAAK5mB,GAGjB,KAAO6J,GAAS,CAAC,IAAK,KAAKrO,SAASqO,EAAMhJ,OACtCwI,EAAKsd,MAAQ9c,EAAM8P,WAAW,GAAK,OAEnC9P,EAAQ+c,IADR5mB,GAIJ,GAAI6J,GAAwB,MAAfA,EAAMhJ,KAAc,CAM7B,IALAwI,EAAKsd,MAAQ9c,EAAM8P,WAAW,GAAK,OAGnC9P,EAAQ+c,IADR5mB,GAGsB,MAAf6J,EAAMhJ,MACTwI,EAAKsd,MAAQ9c,EAAM8P,WAAW,GAAK,OAEnC9P,EAAQ+c,IADR5mB,GAIe,MAAf6J,EAAMhJ,OACNwI,EAAKsd,MAAQ9c,EAAM8P,WAAW,GAAK,O,CAK3C,MAAMoN,EAAK,0BAEX,IADA1d,EAAK2O,KAAO,CAAC,IACJ,CACL,MAAM0O,EAAQK,EAAGjnB,KAAKuJ,EAAKsd,MAC3B,IAAID,EAOA,MANiB,MAAbA,EAAM,GACNrd,EAAK2O,KAAK0O,EAAM,GAAGpd,QAAUod,EAAM,GAEnCrd,EAAK2O,KAAK0O,EAAM,GAAGpd,SAAU,C,EAM3C,MAAOU,GAEL,MAAO,CACH2c,KAAM,GACN3O,KAAM,CAAC,E,CAGf,OAAO3O,EAAK2O,IAChB,EAIkB,CAAC,SAAU,UAAW,UAAW,YACvC7N,SAAQ,SAAUH,EAAGI,EAAGC,GAC5B,IAAIvJ,EAAU7F,GAAGC,cAAc6F,UAAUiJ,GACzClJ,EAAUA,EAAQiJ,KAAI,CAACC,EAAQI,EAAWC,KACtC,QAAUhM,IAAN2L,EAAJ,CACA,IAAIX,EAAO,GAEX,IAAK,IAAI4Z,KAAOjZ,EAERX,EAAKpL,KAAKglB,GAOlB,OADM5Z,EAAK2d,KAAK,GAXW,CAYjB,IAEd/rB,GAAGC,cAAc0E,IAAIoK,GAAG,QAAK3L,EAC7BpD,GAAGC,cAAc0E,IAAIoK,GAAG,GAAK,IAAIiN,OAC7B,UAAgBnW,EAAQ,iBACxB,MAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,GAAK,IAAIiN,OAC7B,IAAOnW,EAAQ,iBACf,MAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,GAAK,IAAIiN,OAC7B,IAAOnW,EAAQ,gBACf,MAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,GAAK,IAAIiN,OAC7B,IAAOnW,EAAQ,iBACf,MAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,GAAK,IAAIiN,OAC7B,IAAOnW,EAAQ,iBACf,MAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,GAAK,IAAIiN,OAAO,IAAOnW,EAAQ,KAAM,MAC7D7F,GAAGC,cAAc0E,IAAIoK,GAAG,GAAK,IAAIiN,OAAO,IAAOnW,EAAQ,KAAM,MAC7D7F,GAAGC,cAAc0E,IAAIoK,GAAG,GAAK,IAAIiN,OAC7B,IAAOnW,EAAQ,gBACf,MAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,GAAK,IAAIiN,OAC7B,IAAOnW,EAAQ,eACf,MAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,UAAgBnW,EAAQ,mBACxB,MAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,UAAgBnW,EAAQ,mBACxB,MAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,UAAgBnW,EAAQ,mBACxB,MAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,UAAgBnW,EAAQ,mBACxB,KAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,UAAgBnW,EAAQ,OACxB,MAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,UAAgBnW,EAAQ,OACxB,MAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,UAAgBnW,EAAQ,OACxB,MAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,IAAOnW,EAAQ,iBACf,MAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,IAAOnW,EAAQ,kBACf,MAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,IAAOnW,EAAQ,kBACf,MAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,IAAOnW,EAAQ,kBACf,MAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAAO,IAAOnW,EAAQ,MAAO,MAC/D7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAAO,IAAOnW,EAAQ,MAAO,MAC/D7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,IAAOnW,EAAQ,iBACf,MAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,IAAOnW,EAAQ,iBACf,MAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,IAAOnW,EAAQ,kBACf,MAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,OAAUnW,EAAQ,mBAClB,KAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,OAAUnW,EAAQ,mBAClB,KAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,OAAUnW,EAAQ,mBAClB,KAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,OAAUnW,EAAQ,mBAClB,KAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,OAAUnW,EAAQ,mBAClB,KAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,OAAUnW,EAAQ,mBAClB,KAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,OAAUnW,EAAQ,mBAClB,KAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,IAAOnW,EAAQ,gBACf,MAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,OAAUnW,EAAQ,mBAClB,MAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,OAAUnW,EAAQ,mBAClB,MAGJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAAO,IAAOnW,EAAQ,MAAO,MAC/D7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAAO,IAAOnW,EAAQ,MAAO,MAC/D7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAAO,IAAOnW,EAAQ,MAAO,MAC/D7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAAO,IAAOnW,EAAQ,MAAO,MAC/D7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAAO,IAAOnW,EAAQ,MAAO,MAC/D7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAAO,IAAOnW,EAAQ,MAAO,MAE/D7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAAO,IAAOnW,EAAQ,MAAO,MAC/D7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAAO,IAAOnW,EAAQ,MAAO,MAC/D7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAAO,IAAOnW,EAAQ,MAAO,MAC/D7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAAO,IAAOnW,EAAQ,MAAO,MAE/D7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAAO,OAAOnW,EAAQ,QAAS,MACjE7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAAO,OAAOnW,EAAQ,QAAS,MACjE7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAAO,OAAOnW,EAAQ,QAAS,MAEjE7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,QAAQnW,EAAQ,SAChB,MAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,SAAUnW,EAAQ,SAClB,MAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,QAAQnW,EAAQ,SAChB,MAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,SAAUnW,EAAQ,SAClB,MAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAAO,IAAOnW,EAAQ,MAAO,MAC/D7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,IAAOnW,EAAQ,gBACf,MAEJ7F,GAAGC,cAAc0E,IAAIoK,GAAG,IAAM,IAAIiN,OAC9B,IAAOnW,EAAQ,kBACf,KAER,IAGJ7F,GAAGC,cAAc4gB,WAAa,WAC1B,IAAInF,EAAO1b,GAAGC,cAAcC,OAAO8G,SAC/BiI,GAAM,EACNyM,EAAK+P,MAAM,QACXzrB,GAAGC,cAAc0E,IAAI0D,MAAQrI,GAAGC,cAAc0E,IAAI4jB,OAClDvoB,GAAGC,cAAc0E,IAAIC,kBACjB5E,GAAGC,cAAc0E,IAAI+lB,iBACzB1qB,GAAGC,cAAc6F,UAAUG,KAAOjG,GAAGC,cAAc6F,UAAUyiB,OAC7DtZ,GAAM,GAENyM,EAAK+P,MAAM,QACXzrB,GAAGC,cAAc0E,IAAI0D,MAAQrI,GAAGC,cAAc0E,IAAI6jB,QAClDxoB,GAAGC,cAAc0E,IAAIC,kBACjB5E,GAAGC,cAAc0E,IAAIgmB,kBACzB3qB,GAAGC,cAAc6F,UAAUG,KAAOjG,GAAGC,cAAc6F,UAAU0iB,QAC7DvZ,GAAM,GAENyM,EAAK+P,MAAM,QACXzrB,GAAGC,cAAc0E,IAAI0D,MAAQrI,GAAGC,cAAc0E,IAAI8jB,QAClDzoB,GAAGC,cAAc0E,IAAIC,kBACjB5E,GAAGC,cAAc0E,IAAIimB,kBACzB5qB,GAAGC,cAAc6F,UAAUG,KAAOjG,GAAGC,cAAc6F,UAAU2iB,QAC7DxZ,GAAM,GAENyM,EAAK+P,MAAM,QACXzrB,GAAGC,cAAc0E,IAAI0D,MAAQrI,GAAGC,cAAc0E,IAAI+jB,SAClD1oB,GAAGC,cAAc0E,IAAIC,kBACjB5E,GAAGC,cAAc0E,IAAIkmB,mBACzB7qB,GAAGC,cAAc6F,UAAUG,KAAOjG,GAAGC,cAAc6F,UAAU4iB,SAC7DzZ,GAAM,IAEE,IAARA,IACAjP,GAAGC,cAAc0E,IAAI0D,MAAQrI,GAAGC,cAAc0E,IAAI8jB,QAClDzoB,GAAGC,cAAc0E,IAAIC,kBACjB5E,GAAGC,cAAc0E,IAAIimB,kBACzB5qB,GAAGC,cAAc6F,UAAUG,KAAOjG,GAAGC,cAAc6F,UAAU2iB,QAErE,EAca,QAAAtjB,MAAgB,CAAC,EAE9B,QAAAA,MAAA,SAAiB,SAAUtC,GAKvB,MADa,QAHD,IAAJA,KACCA,GAAK,EAAK,OACVA,GAAK,GAAM,QAGxB,EAEA,QAAAsC,MAAA,UAAkB,QAAAA,MAAM6mB,SAAS,UAEjC,QAAA7mB,MAAA,aAAqB,WACjB,OAAO,QAAAA,MAAM2B,SACjB,EAEA,QAAA3B,MAAA,mBAA2B,SAAU6iB,GAGjC,IAAIiE,EAAajsB,GAAGC,cAAcC,OAAO0pB,aACrC3a,EAAM+Y,EAEV,MAAwB,iBAAXiE,EAAI,GAAyBhd,EACrCgd,EAAI,GAAG1I,eAAe,eAE3B0I,EAAI/c,SAAQ,CAACH,EAAQI,EAAWzK,KAC5B,GAAIqK,EAAE,gBAAkBiZ,EAAK,CACzB,IAAIkE,EAAIzmB,SAASsJ,EAAO,MAAM,EAC1Bod,EAAI1mB,SAASsJ,EAAS,QAAM,EAC5Bqd,EAAI3mB,SAASsJ,EAAQ,OAAM,EAC3BK,EAAIid,WAAWtd,EAAS,QAAM,EAElCE,EAAM,QAAQid,KAAKC,KAAKC,KAAKhd,I,KAI9BH,GAb0CA,CAcrD,EAEA,MAAMqd,cAAwC,CAC1C,GAAI,oBACJ,IAAK,oBACLC,OAAQ,oBACR,IAAK,gBACL,GAAI,gBACJC,QAAS,gBACT,IAAK,kBACL,GAAI,kBACJC,OAAQ,kBACR,KAAM,mBACNC,SAAU,mBACV,IAAK,oBACL,GAAI,oBACJC,UAAW,oBACX,GAAI,sBACJC,OAAQ,sBACR,GAAI,kBACJC,QAAS,kBACT,KAAM,kBACN,GAAI,kBACJC,OAAQ,kBACR,KAAM,sBACNC,SAAU,sBACV,GAAI,kBACJ,GAAI,kBACJC,SAAU,kBACV,IAAK,kBACL,IAAK,kBACLC,OAAQ,kBACR,IAAK,oBACL,IAAK,oBACLC,QAAS,oBACT,IAAK,qBACL,GAAI,qBACJ,IAAK,qBACLC,SAAU,qBACV,IAAK,oBACL,GAAI,oBACJC,SAAU,oBACV,IAAK,kBACL,GAAI,kBACJC,MAAO,kBACP,GAAI,sBACJ,EAAG,sBACHC,SAAU,sBACV,IAAK,oBACLC,OAAQ,oBACR,GAAI,sBACJ,EAAG,sBACHC,QAAS,sBACT,IAAK,oBACL,GAAI,oBACJC,SAAU,qBAGRC,cAAwC,CAC1C,GAAI,oBACJnB,OAAQ,oBACR,GAAI,gBACJC,QAAS,gBACT,GAAI,kBACJC,OAAQ,kBACR,IAAK,mBACLC,SAAU,mBACV,IAAK,oBACLC,UAAW,oBACX,GAAI,sBACJC,OAAQ,sBACR,GAAI,kBACJC,QAAS,kBACT,IAAK,kBACLC,OAAQ,kBACR,IAAK,sBACLC,SAAU,sBACV,GAAI,kBACJC,SAAU,kBACV,IAAK,kBACLC,OAAQ,kBACR,IAAK,oBACLC,QAAS,oBACT,IAAK,qBACLC,SAAU,qBACV,GAAI,oBACJC,SAAU,oBACV,GAAI,kBACJC,MAAO,kBACP,IAAK,sBACLC,SAAU,sBACV,IAAK,oBACLC,OAAQ,oBACR,GAAI,sBACJC,QAAS,sBACT,GAAI,oBACJC,SAAU,qBAGRE,cAAwC,CAC1CC,KAAM,oBACNrB,OAAQ,oBACRsB,MAAO,gBACPrB,QAAS,gBACTsB,KAAM,kBACNrB,OAAQ,kBACRsB,OAAQ,mBACRrB,SAAU,mBACVsB,QAAS,oBACTrB,UAAW,oBACXsB,KAAM,sBACNrB,OAAQ,sBACRsB,MAAO,kBACPrB,QAAS,kBACTsB,KAAM,kBACNrB,OAAQ,kBACRsB,OAAQ,sBACRrB,SAAU,sBACVsB,OAAQ,kBACRrB,SAAU,kBACVsB,KAAM,kBACNrB,OAAQ,kBACRsB,MAAO,oBACPrB,QAAS,oBACTsB,OAAQ,qBACRrB,SAAU,qBACVsB,OAAQ,oBACRrB,SAAU,oBACVsB,IAAK,kBACLrB,MAAO,kBACPsB,OAAQ,sBACRrB,SAAU,sBACVsB,KAAM,oBACNrB,OAAQ,oBACRsB,MAAO,sBACPrB,QAAS,sBACTsB,OAAQ,oBACRrB,SAAU,qBAGRsB,eAAyC,CAC3C,GAAI,oBACJ,KAAM,oBACNxC,OAAQ,oBACR,GAAI,gBACJC,QAAS,gBACT,GAAI,kBACJC,OAAQ,kBACR,KAAM,mBACNC,SAAU,mBACV,IAAK,oBACLC,UAAW,oBACX,GAAI,sBACJC,OAAQ,sBACR,GAAI,kBACJC,QAAS,kBACT,GAAI,kBACJC,OAAQ,kBACR,GAAI,sBACJC,SAAU,sBACV,KAAM,kBACNC,SAAU,kBACV,IAAK,kBACL,KAAM,kBACNC,OAAQ,kBACR,IAAK,oBACL,MAAO,oBACPC,QAAS,oBACT,GAAI,qBACJ,MAAO,qBACPC,SAAU,qBACV,GAAI,oBACJC,SAAU,oBACV,GAAI,kBACJ,IAAK,kBACLC,MAAO,kBACP,GAAI,sBACJC,SAAU,sBACV,KAAM,oBACN,IAAK,oBACLC,OAAQ,oBACR,GAAI,sBACJC,QAAS,sBACT,GAAI,oBACJC,SAAU,qBAGdztB,GAAGC,cAAc+uB,eAAiB,SAAUhH,GAGxC,OAFYsE,cAActE,KAMtB,CAAC,KAAM,MAAO,YAAYznB,SAASynB,GAC5B,QAAA7iB,MAAM8pB,eAGV,QAAA9pB,MAAM+pB,mBAAmBlH,GACpC,EAEAhoB,GAAGC,cAAckvB,gBAAkB,SAAUnH,GAGzC,OAFY0F,cAAc1F,KAMtB,CAAC,KAAM,YAAYznB,SAASynB,GACrB,QAAA7iB,MAAM8pB,eAGV,QAAA9pB,MAAM+pB,mBAAmBlH,GACpC,EAEAhoB,GAAGC,cAAcmvB,gBAAkB,SAAUpH,GAGzC,OAFY2F,cAAc3F,KAMtB,aAAeA,EACR,QAAA7iB,MAAM8pB,eAGV,QAAA9pB,MAAM+pB,mBAAmBlH,GACpC,EAEAhoB,GAAGC,cAAcovB,iBAAmB,SAAUrH,GAG1C,OAFY+G,eAAe/G,KAMvB,CAAC,MAAO,YAAYznB,SAASynB,GACtB,QAAA7iB,MAAM8pB,eAGV,QAAA9pB,MAAM+pB,mBAAmBlH,GACpC,EAEAhoB,GAAGC,cAAcqvB,WAAa,WAE1B,IACIC,EADAC,EAAKvoB,UAAUwoB,UAEfC,EACIF,EAAG/D,MACC,sEACC,GAEb,GAAI,WAAW1P,KAAK2T,EAAE,IAGlB,MAAO,CACHnmB,KAAM,KACNomB,SAJJJ,EAAM,kBAAkB1qB,KAAK2qB,IAAO,IAInB,IAAM,IAI3B,GAAa,WAATE,EAAE,GAAiB,CAEnB,GAAW,OADXH,EAAMC,EAAG/D,MAAM,iBAEX,MAAO,CACHliB,KAAM,QACNomB,QAASJ,EAAI,IAKrB,GAAW,OADXA,EAAMC,EAAG/D,MAAM,kBAEX,MAAO,CACHliB,KAAM,OACNomB,QAASJ,EAAI,G,CAWzB,OANAG,EAAIA,EAAE,GAAK,CAACA,EAAE,GAAIA,EAAE,IAAM,CAACzoB,UAAU2oB,QAAS3oB,UAAU4oB,WAAY,MAEzB,OAAtCN,EAAMC,EAAG/D,MAAM,qBAChBiE,EAAEI,OAAO,EAAG,EAAGP,EAAI,IAGhB,CACHhmB,KAAMmmB,EAAE,GACRC,QAASD,EAAE,GAEnB,EAEA,QAAAvqB,MAAA,QAAgB,SAAU6iB,GACtB,MAAMtM,EAAe1b,GAAGC,cAAcC,OAAO8G,SAC7C,OAAI0U,EAAK+P,MAAM,MACJzrB,GAAGC,cAAc+uB,eAAehH,GAEvCtM,EAAK+P,MAAM,MACJzrB,GAAGC,cAAckvB,gBAAgBnH,GAExCtM,EAAK+P,MAAM,MACJzrB,GAAGC,cAAcmvB,gBAAgBpH,GAExCtM,EAAK+P,MAAM,MACJzrB,GAAGC,cAAcovB,iBAAiBrH,GAEtChoB,GAAGC,cAAcmvB,gBAAgBpH,EAC5C,EAEAjU,OAAO/T,GAAKA,E,2JCtlCZ,kBACA,OACA,SACA,SAEiB,UAAkB+vB,cAI9BtR,IAAI,UAAU,IAAAuR,qBACdvR,IAAI,eAAe,IAAAwR,0BACnBxR,IAAI,QAAQ,IAAAyR,mBAEZ9P,MAAM,UACNA,MAAM,eACNA,MAAM,QAEN0G,Y,GCnBDqJ,yBAA2B,CAAC,EAGhC,SAASC,oBAAoBC,GAE5B,IAAIC,EAAeH,yBAAyBE,GAC5C,QAAqBjtB,IAAjBktB,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,yBAAyBE,GAAY,CAGjDE,QAAS,CAAC,GAOX,OAHAE,oBAAoBJ,GAAU7xB,KAAKgyB,EAAOD,QAASC,EAAQA,EAAOD,QAASH,qBAGpEI,EAAOD,OACf,CCnBA,IAAIG,oBAAsBN,oBAAoB,I","sources":["webpack://message-system-mz/./src/commands/Bitmap.command.ts","webpack://message-system-mz/./src/commands/GameMessage.command.ts","webpack://message-system-mz/./src/commands/Main.command.ts","webpack://message-system-mz/./src/components/BalloonWindowTransformComponent.ts","webpack://message-system-mz/./src/components/BaseComponent.ts","webpack://message-system-mz/./src/components/NameWindowPositionComponent.ts","webpack://message-system-mz/./src/core/Component.ts","webpack://message-system-mz/./src/core/ComponentExecutor.ts","webpack://message-system-mz/./src/core/DependencyInjector.ts","webpack://message-system-mz/./src/core/EventEmitter.ts","webpack://message-system-mz/./src/core/RS.ts","webpack://message-system-mz/./src/index.ts","webpack://message-system-mz/webpack/bootstrap","webpack://message-system-mz/webpack/startup"],"sourcesContent":["/**\n * ? Bitmap\n * @description 텍스트에 그라데이션을 채우는 기능을 추가합니다.\n */\nexport function getBitmapCommand(): Function {\n    return () => {\n        const alias_Bitmap_initialize = Bitmap.prototype.initialize;\n        Bitmap.prototype.initialize = function (width: number, height: number) {\n            alias_Bitmap_initialize.call(this, width, height);\n            this.fontBold = false;\n            this.fontGradient = false;\n            this.highlightTextColor = null;\n        };\n\n        Bitmap.prototype.setGradient = function (\n            text,\n            color1,\n            color2,\n            color3,\n            tx,\n            ty\n        ) {\n            const context = this._context;\n            const tWidth = this.measureTextWidth(text);\n            context.save();\n            const gradient = context.createLinearGradient(\n                tx,\n                0,\n                tx + tWidth,\n                0\n            );\n            gradient.addColorStop(0, color1);\n            gradient.addColorStop(0.6, color2);\n            gradient.addColorStop(1, color3);\n            context.restore();\n\n            this._baseTexture.update();\n\n            return gradient;\n        };\n\n        Bitmap.prototype.setGradientStyle = function (\n            text,\n            color1,\n            color2,\n            color3,\n            tx,\n            ty\n        ) {\n            const context = this._context;\n            const width = this.measureTextWidth(text);\n            const height = RS.MessageSystem.Params.lineHeight;\n            let grd;\n\n            context.save();\n\n            const style = RS.MessageSystem.Params.gradientStyle;\n\n            if (style !== \"radial\") {\n                if (style.contains(\"horizontal\")) {\n                    grd = context.createLinearGradient(tx, 0, tx + width, 0);\n                } else {\n                    grd = context.createLinearGradient(tx, 0, 0, ty + height);\n                }\n            } else {\n                const ws = width * 0.5;\n                const hs = height * 0.5;\n                grd = context.createRadialGradient(ws, hs, 0.0, ws, hs, ws);\n            }\n\n            if (style === \"radial\") {\n                grd.addColorStop(0.0, color1);\n                grd.addColorStop(1.0, color2);\n            } else if (style.contains(\"axial\")) {\n                grd.addColorStop(0.0, color1);\n                grd.addColorStop(0.5, color2);\n                grd.addColorStop(1.0, color3);\n            } else {\n                grd.addColorStop(0.0, color1);\n                grd.addColorStop(1.0, color2);\n            }\n\n            context.restore();\n\n            this._baseTexture.update();\n\n            return grd;\n        };\n\n        Bitmap.prototype._makeFontNameText = function () {\n            return (\n                (this.fontItalic ? \"Italic \" : \"\") +\n                (this.fontBold ? \"bold \" : \"\") +\n                this.fontSize +\n                \"px \" +\n                this.fontFace\n            );\n        };\n\n        Bitmap.prototype._drawTextBody = function (text, tx, ty, maxWidth) {\n            const context = this._context;\n            context.save(); // 드로잉 상태 저장\n            context.imageSmoothingEnabled =\n                RS.MessageSystem.Params.fontSmoothingEnabled;\n\n            if (this.fontGradient) {\n                var gradient = this.setGradientStyle(\n                    text,\n                    RS.MessageSystem.Params.gradientColor1,\n                    RS.MessageSystem.Params.gradientColor2,\n                    RS.MessageSystem.Params.gradientColor3,\n                    tx,\n                    ty\n                );\n                context.fillStyle = gradient;\n            } else {\n                context.fillStyle = this.textColor;\n            }\n            context.fillText(text, tx, ty, maxWidth);\n            context.fillStyle = this.textColor;\n            context.restore();\n        };\n    };\n}\n","export function getGameCommandCommand(): Function {\n    return () => {\n        //============================================================================\n        // Game_Message\n        //============================================================================\n        const alias_Game_Message_clear = Game_Message.prototype.clear;\n        Game_Message.prototype.clear = function () {\n            alias_Game_Message_clear.call(this);\n            this._waitTime = 0;\n            this._gradientText = \"\";\n            this._balloon = -2;\n            this._align = [];\n            this._balloonPatternHeight = 0;\n            this._lastAlign = -1;\n        };\n\n        Game_Message.prototype.setWaitTime = function (time) {\n            this._waitTime = time;\n        };\n\n        Game_Message.prototype.setGradientText = function (text) {\n            this._gradientText = text;\n        };\n\n        Game_Message.prototype.getWaitTime = function () {\n            return this._waitTime || 0;\n        };\n\n        Game_Message.prototype.getGradientText = function () {\n            return this._gradientText;\n        };\n\n        Game_Message.prototype.getMaxLine = function () {\n            return this._maxLine;\n        };\n\n        Game_Message.prototype.setMaxLine = function (maxLine) {\n            this._maxLine = maxLine;\n            RS.MessageSystem.Params.numVisibleRows = maxLine;\n        };\n\n        Game_Message.prototype.setBalloon = function (n) {\n            this._balloon = n;\n        };\n\n        Game_Message.prototype.getBalloon = function (n) {\n            return this._balloon;\n        };\n\n        Game_Message.prototype.setAlign = function (n) {\n            this._align = this._align || [];\n            this._lastAlign = n; // 마지막 정렬 위치 기억\n            this._align.push(n);\n        };\n\n        Game_Message.prototype.getAlign = function (n) {\n            const last = this._align.shift();\n            if (last === undefined) {\n                return this._lastAlign;\n            }\n            return last;\n        };\n\n        Game_Message.prototype.clearAlignLast = function (n) {\n            this._lastAlign = -1;\n        };\n\n        Game_Message.prototype.setBalloonPatternHeight = function (\n            value: number\n        ) {\n            this._balloonPatternHeight = value;\n        };\n\n        Game_Message.prototype.getBalloonPatternHeight = function () {\n            return this._balloonPatternHeight;\n        };\n    };\n}\n","import { Color } from \"../core/RS\";\nimport { DependencyInjector } from \"../core/DependencyInjector\";\nimport { BalloonWindowTransformComponent } from \"../components/BalloonWindowTransformComponent\";\n\n/**\n * ? Main\n * @description\n * 메인 엔트리 포인트입니다.\n */\nexport function getMainCommand(): Function {\n    return () => {\n        //============================================================================\n        // Sprite_Battler\n        //============================================================================\n        Sprite_Battler.prototype.screenX = function () {\n            return this.x || 0;\n        };\n\n        Sprite_Battler.prototype.screenY = function () {\n            return this.y || 0;\n        };\n\n        //============================================================================\n        // MessageDesc\n        //============================================================================\n        class MessageDesc {\n            public fontFace: string;\n            public fontSize: number;\n            public fontBold: boolean;\n            public fontItalic: boolean;\n            public textColor: string;\n            public outlineColor: string;\n            public outlineWidth: number;\n            public fontGradient: boolean;\n            public highlightTextColor: string | null;\n            public textSpeed: number;\n\n            private _isSaved: boolean;\n\n            constructor() {\n                this.fontFace = \"Nanum Gothic\";\n                this.fontSize = 12;\n                this.fontBold = false;\n                this.fontItalic = false;\n                this.textColor = \"#000\";\n                this.outlineColor = \"#fff\";\n                this.outlineWidth = 1;\n                this.fontGradient = false;\n                this.highlightTextColor = null;\n                this.textSpeed = 1;\n\n                this._isSaved = false;\n            }\n\n            save<T extends Window_Base>(messageWindow: T) {\n                this.fontFace = messageWindow.contents.fontFace;\n                this.fontSize = +messageWindow.contents.fontSize;\n                this.fontBold = messageWindow.contents.fontBold;\n                this.fontItalic = messageWindow.contents.fontItalic;\n                this.textColor = messageWindow.contents.textColor;\n                this.outlineColor = messageWindow.contents.outlineColor;\n                this.outlineWidth = messageWindow.contents.outlineWidth;\n                this.fontGradient = messageWindow.contents.fontGradient;\n                this.highlightTextColor =\n                    messageWindow.contents.highlightTextColor;\n\n                if ($gameMessage) {\n                    this.textSpeed = $gameMessage.getWaitTime();\n                }\n\n                this._isSaved = true;\n            }\n\n            restore<T extends Window_Base>(messageWindow: T) {\n                if (!this._isSaved) return;\n                if (!(messageWindow.contents instanceof Bitmap)) return;\n                messageWindow.contents.fontFace = this.fontFace;\n                messageWindow.contents.fontSize = this.fontSize;\n                messageWindow.contents.fontBold = this.fontBold;\n                messageWindow.contents.fontItalic = this.fontItalic;\n                messageWindow.contents.textColor = this.textColor;\n                messageWindow.contents.outlineColor = this.outlineColor;\n                messageWindow.contents.outlineWidth = this.outlineWidth;\n                messageWindow.contents.fontGradient = this.fontGradient;\n                messageWindow.contents.highlightTextColor =\n                    this.highlightTextColor;\n                if ($gameMessage) {\n                    $gameMessage.setWaitTime(this.textSpeed);\n                }\n                this._isSaved = false;\n            }\n        }\n\n        //============================================================================\n        // Window_Base\n        //============================================================================\n        Window_Base.prototype.obtainEscapeCode = function (textState) {\n            const regExp = RS.MessageSystem.Reg.defaultEscapeCode;\n            const arr = regExp.exec(textState.text.slice(textState.index));\n            if (arr) {\n                textState.index += arr[0].length;\n                return arr[0].toUpperCase();\n            } else {\n                return \"\";\n            }\n        };\n\n        /**\n         * 확장된 색상 변경 텍스트 코드 처리\n         * \\색[빨강]과 웹색상 처리를 위한 정규 표현식 처리\n         * @param {}} textState\n         */\n        Window_Base.prototype.obtainNameColor = function (textState) {\n            const arr = /\\[(.+?)\\]/gi.exec(\n                textState.text.slice(textState.index)\n            );\n            if (arr) {\n                textState.index += arr[0].length;\n                return Color.gmColor(arr[1]);\n            } else {\n                return ColorManager.textColor(0);\n            }\n        };\n\n        Window_Base.prototype.changeTextColor = function (color) {\n            const c = parseInt(color);\n            // 색상 코드가 숫자인 경우\n            if (c > 0 && c < 32) {\n                color = ColorManager.textColor(color);\n            }\n            // if (!this._isUsedTextWidthEx) {\n            this.contents.textColor = color;\n            // }\n        };\n\n        const alias_Window_Base_processEscapeCharacter =\n            Window_Base.prototype.processEscapeCharacter;\n        Window_Base.prototype.processEscapeCharacter = function (\n            code,\n            textState\n        ) {\n            const tcGroup = RS.MessageSystem.TextCodes.ENUM;\n            const textCode = RS.MessageSystem.TextCodes.Main;\n            switch (code) {\n                case \"C\":\n                    this.changeTextColor(\n                        this.textColor(\n                            <number>this.obtainEscapeParam(textState)\n                        )\n                    );\n                    break;\n                case textCode[tcGroup.COLOR]:\n                    this.changeTextColor(\n                        this.obtainNameColor(<TextState>textState)\n                    );\n                    break;\n                case \"I\":\n                case textCode[tcGroup.ICON]:\n                    this.processDrawIcon(\n                        <number>this.obtainEscapeParam(textState),\n                        textState\n                    );\n                    break;\n                case \"{\":\n                case textCode[tcGroup.INCREASE]:\n                    this.makeFontBigger();\n                    break;\n                case \"}\":\n                case textCode[tcGroup.DECREASE]:\n                    this.makeFontSmaller();\n                    break;\n                case \"AEND\":\n                    $gameMessage.clearAlignLast();\n                    break;\n                default:\n                    alias_Window_Base_processEscapeCharacter.call(\n                        this,\n                        code,\n                        textState\n                    );\n                    break;\n            }\n        };\n\n        const alias_loadWindowskin = Window_Base.prototype.loadWindowskin;\n        Window_Base.prototype.loadWindowskin = function () {\n            alias_loadWindowskin.call(this);\n            this.windowskin.addLoadListener(() => {\n                Color.baseColor = ColorManager.textColor(0);\n            });\n        };\n\n        Window_Base.prototype.getFontFace = function () {\n            const langCode =\n                RS.MessageSystem.Params.langCode ||\n                navigator.language.slice(0, 2);\n            const fonts = RS.MessageSystem.Params.fonts[langCode];\n            if (fonts) {\n                return fonts;\n            } else {\n                return RS.MessageSystem.Params.fonts.default;\n            }\n        };\n\n        Window_Base.prototype.drawTextEx = function (text, x, y, width) {\n            this.save();\n            this.resetFontSettings();\n            const textState = this.createTextState(text, x, y, width);\n            this.processAllText(textState);\n            this.restore();\n            return textState.outputWidth;\n        };\n\n        // Window_Base.prototype.processAllText = function (textState) {\n        //     this._isUsedTextWidthEx = !textState.drawing;\n        //     while (textState.index < textState.text.length) {\n        //         this.processCharacter(textState);\n        //     }\n        //     this.flushTextState(textState);\n        // };\n        Window_Base.prototype.makeFontSmaller = function () {\n            if (this.contents.fontSize >= RS.MessageSystem.Params.minFontSize) {\n                this.contents.fontSize -= 12;\n            }\n        };\n\n        Window_Base.prototype.resetFontSettings = function () {\n            this.contents.fontFace = this.getFontFace();\n            this.contents.fontSize = RS.MessageSystem.Params.fontSize;\n            this.contents.fontBold = false;\n            this.contents.fontItalic = false;\n            this.contents.outlineWidth =\n                RS.MessageSystem.Params.defaultOutlineWidth;\n            this.contents.outlineColor =\n                RS.MessageSystem.Params.defaultOutlineColor;\n\n            this.contents.fontGradient = false;\n            this.contents.highlightTextColor = null;\n            this.resetTextColor();\n        };\n\n        Window_Base.prototype.makeFontBigger = function () {\n            if (this.contents.fontSize <= RS.MessageSystem.Params.maxFontSize) {\n                this.contents.fontSize += 12;\n            }\n        };\n\n        Window_Base.prototype.save = function () {\n            this._messageDesc = new MessageDesc();\n            this._messageDesc.save(this);\n            console.log(this._messageDesc);\n        };\n\n        Window_Base.prototype.restore = function () {\n            if (!this._messageDesc) return;\n            this._messageDesc.restore(this);\n            this._messageDesc = undefined;\n        };\n\n        const alias_Window_Base_convertEscapeCharacters =\n            Window_Base.prototype.convertEscapeCharacters;\n        Window_Base.prototype.convertEscapeCharacters = function (text) {\n            const regGroup = RS.MessageSystem.Reg.Group;\n            const tcGroup = RS.MessageSystem.TextCodes.ENUM;\n            const textCode = RS.MessageSystem.TextCodes.Main;\n\n            text = alias_Window_Base_convertEscapeCharacters.call(this, text);\n            text = text.replace(\n                regGroup[tcGroup.VAR],\n                function (...args: any[]): string {\n                    return $gameVariables\n                        .value(parseInt(<string>args[1]))\n                        .toString();\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.VAR],\n                function (...args: any[]) {\n                    return $gameVariables.value(parseInt(args[1])).toString();\n                }.bind(this)\n            );\n            text = text.replace(regGroup[tcGroup.PLAYER], (...args: any[]) => {\n                return this.actorName(parseInt(args[1]));\n            });\n            text = text.replace(\n                regGroup[tcGroup.PARTY_MEMBER],\n                (...args: any[]) => {\n                    return this.partyMemberName(parseInt(args[1]));\n                }\n            );\n            text = text.replace(\n                regGroup[tcGroup.NUM],\n                function (...args: any[]) {\n                    return args[1].toComma();\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.GOLD],\n                TextManager.currencyUnit\n            );\n            text = text.replace(\n                regGroup[tcGroup.CLASSES],\n                function (...args: any[]) {\n                    return $dataClasses[parseInt(args[1])].name || \"\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.ITEM],\n                function (...args: any[]) {\n                    return $dataItems[parseInt(args[1])].name || \"\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.WEAPON],\n                function (...args: any[]) {\n                    return $dataWeapons[parseInt(args[1])].name || \"\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.ARMOR],\n                function (...args: any[]) {\n                    return $dataArmors[parseInt(args[1])].name || \"\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.ENEMY],\n                function (...args: any[]) {\n                    return $dataEnemies[parseInt(args[1])].name || \"\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.STATE],\n                function (...args: any[]) {\n                    return $dataStates[parseInt(args[1])].name || \"\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.SKILL],\n                function (...args: any[]) {\n                    return $dataSkills[parseInt(args[1])].name || \"\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.ALIGN_LEFT],\n                function () {\n                    return \"\\x1b\" + textCode[tcGroup.ALIGN] + \"[0]\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.ALIGN_CENTER],\n                function () {\n                    return \"\\x1b\" + textCode[tcGroup.ALIGN] + \"[1]\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.ALIGN_RIGHT],\n                function () {\n                    return \"\\x1b\" + textCode[tcGroup.ALIGN] + \"[2]\";\n                }.bind(this)\n            );\n            text = text.replace(regGroup[tcGroup.ALIGN], (...args: any[]) => {\n                if (!this._isUsedTextWidthEx) {\n                    $gameMessage.setAlign(Number(args[1] || 0));\n                }\n                return \"\";\n            });\n            text = text.replace(\n                /<\\/LEFT>|<\\/CENTER>|<\\/RIGHT>/gi,\n                function () {\n                    return regGroup[tcGroup.ALIGN_CLEAR].source;\n                }.bind(this)\n            );\n            return text;\n        };\n\n        /**\n         * @deprecated\n         */\n        Window_Base.prototype.textPadding = function () {\n            return this.itemPadding();\n        };\n\n        Window_Base.prototype.newLineX = function (textState) {\n            return this.textPadding();\n        };\n\n        Window_Base.prototype.processAlign = function (textState) {\n            textState = textState || this._textState;\n\n            const isArabic = textState.rtl;\n\n            if (isArabic) {\n                return;\n            }\n\n            switch ($gameMessage.getAlign()) {\n                case 0:\n                    this.setAlignLeft(textState);\n                    break;\n                case 1:\n                    this.setAlignCenter(textState);\n                    break;\n                case 2:\n                    this.setAlignRight(textState);\n                    break;\n            }\n        };\n\n        const alias_Window_Base_processNewLine_align =\n            Window_Base.prototype.processNewLine;\n        Window_Base.prototype.processNewLine = function (textState) {\n            alias_Window_Base_processNewLine_align.call(this, textState);\n            this.processAlign(<TextState>textState);\n        };\n\n        Window_Base.prototype.setAlignLeft = function (textState) {\n            textState.x = this.newLineX(textState);\n            textState.startX = textState.x;\n        };\n\n        Window_Base.prototype.setAlignCenter = function (textState) {\n            const padding = this.textPadding();\n            textState.x =\n                (this.newLineX(textState) + this.contentsWidth() + padding) /\n                    2 -\n                textState.outputWidth / 2;\n            textState.startX = textState.x;\n        };\n\n        Window_Base.prototype.setAlignRight = function (textState) {\n            const padding = this.textPadding();\n            textState.x =\n                this.contentsWidth() - padding - textState.outputWidth;\n            textState.startX = textState.x;\n        };\n\n        //============================================================================\n        // Window_Message\n        //============================================================================\n        Window_Message.prototype.obtainTextSpeed = function (textState) {\n            const arr = /\\[(\\d+)\\]/.exec(textState.text.slice(textState.index));\n            if (arr) {\n                textState.index += arr[0].length;\n                return parseInt(arr[1]);\n            } else {\n                return 0;\n            }\n        };\n\n        Window_Message.prototype.obtainGradientText = function (textState) {\n            const arr = /^<(.+?)>/.exec(textState.text.slice(textState.index));\n            if (arr) {\n                textState.index += arr[0].length;\n                return String(arr[1]);\n            } else {\n                return \"Empty Text\";\n            }\n        };\n\n        Window_Message.prototype.obtainSoundName = function (textState) {\n            const arr = /\\<(.+?)\\>/.exec(textState.text.slice(textState.index));\n            if (arr) {\n                textState.index += arr[0].length;\n                return String(arr[1]);\n            } else {\n                return \"\";\n            }\n        };\n\n        const alias_Window_Message_processEscapeCharacter =\n            Window_Message.prototype.processEscapeCharacter;\n        Window_Message.prototype.processEscapeCharacter = function (\n            code,\n            textState: TextState | string\n        ) {\n            const tcGroup = RS.MessageSystem.TextCodes.ENUM;\n            const textCode = RS.MessageSystem.TextCodes.Main;\n            switch (code) {\n                case textCode[tcGroup.TEXT_SPEED]:\n                    $gameMessage.setWaitTime(\n                        <number>this.obtainEscapeParam(textState)\n                    );\n                    break;\n                case textCode[tcGroup.TEXT_SIZE]:\n                    this.setTextSize(<number>this.obtainEscapeParam(textState));\n                    break;\n                case textCode[tcGroup.OUTLINE_COLOR]:\n                    this.setStrokeColor(\n                        this.obtainNameColor(<TextState>textState)\n                    );\n                    break;\n                case textCode[tcGroup.INDENT]:\n                    this.setTextIndent(<TextState>textState);\n                    break;\n                case textCode[tcGroup.OUTLINE_WIDTH]:\n                    this.setStrokeWidth(\n                        <number>this.obtainEscapeParam(<TextState>textState)\n                    );\n                    break;\n                case textCode[tcGroup.BOLD]:\n                    this.setTextBold(!this.contents.fontBold);\n                    break;\n                case textCode[tcGroup.BOLD_START]:\n                    this.setTextBold(true);\n                    break;\n                case textCode[tcGroup.BOLD_END]:\n                    this.setTextBold(false);\n                    break;\n                case textCode[tcGroup.ITALIC]:\n                    this.setTextItalic(!this.contents.fontItalic);\n                    break;\n                case textCode[tcGroup.ITALIC_START]:\n                    this.setTextItalic(true);\n                    break;\n                case textCode[tcGroup.ITALIC_END]:\n                    this.setTextItalic(false);\n                    break;\n                case textCode[tcGroup.GRADIENT]:\n                    this.setTextGradient(<TextState>textState);\n                    break;\n                case textCode[tcGroup.HIGHLIGHT_TEXT_COLOR]:\n                    this.setHighlightTextColor(\n                        this.obtainNameColor(<TextState>textState)\n                    );\n                    break;\n                case textCode[tcGroup.TAB]:\n                    (<TextState>textState).x += Number(\n                        this.textWidth(\"A\") * RS.MessageSystem.Params.TabSize\n                    );\n                    break;\n                case textCode[tcGroup.CARRIAGE_RETURN]:\n                    (<TextState>textState).x = Number(\n                        (textState as TextState).startX || 0\n                    );\n                    if (!this._isUsedTextWidthEx) this.startWait(1);\n                    break;\n                case textCode[tcGroup.PLAY_SE]:\n                    if (!this._isUsedTextWidthEx)\n                        this.playSe(this.obtainSoundName(<TextState>textState));\n                    break;\n                case textCode[tcGroup.SHOW_PICTURE]:\n                    if (this._isUsedTextWidthEx) break;\n                    this.showPicture(\n                        this.obtainSoundName(<TextState>textState)\n                    );\n                    this.startWait(15);\n                case textCode[tcGroup.HIDE_PICTURE]:\n                    if (this._isUsedTextWidthEx) break;\n                    this.erasePicture(\n                        <number>this.obtainEscapeParam(textState)\n                    );\n                    this.startWait(15);\n                case textCode[tcGroup.FACE]:\n                    if (this._isUsedTextWidthEx) break;\n                    var params = this.obtainSoundName(\n                        <TextState>textState\n                    ).split(\",\");\n                    // this.redrawFaceImage(textState, params[0], params[1], 0, 0);\n                    this.startWait(1);\n                    break;\n                default:\n                    alias_Window_Message_processEscapeCharacter.call(\n                        this,\n                        code,\n                        textState\n                    );\n                    break;\n            }\n        };\n\n        Window_Message.prototype.setTextItalic = function (...args) {\n            this.contents.fontItalic = args[0];\n        };\n\n        Window_Message.prototype.setTextBold = function (...args) {\n            this.contents.fontBold = args[0];\n        };\n\n        Window_Message.prototype.setTextSize = function (...args) {\n            this.contents.fontSize = args[0].clamp(\n                RS.MessageSystem.Params.minFontSize,\n                RS.MessageSystem.Params.maxFontSize\n            );\n        };\n\n        Window_Message.prototype.setStrokeWidth = function (...args) {\n            this.contents.outlineWidth = args[0];\n        };\n\n        Window_Message.prototype.setStrokeColor = function (...args) {\n            this.contents.outlineColor = args[0];\n        };\n\n        Window_Message.prototype.setTextIndent = function (textState) {\n            const value = parseInt(<string>this.obtainEscapeParam(textState));\n            textState.x += value;\n        };\n\n        Window_Message.prototype.setHighlightTextColor = function (\n            ...args: any[]\n        ) {\n            let color: any = args[0];\n            if (color === \"null\" || color === \"없음\") {\n                color = null;\n            }\n            this.contents.highlightTextColor = color;\n        };\n\n        Window_Message.prototype.setTextGradient = function (textState) {\n            // TODO: 여기에서는 텍스트를 그리지 않는다.\n            // TODO: 그레디언트 모드임을 명시하고 flush 단계에서 한 번에 그려야 한다 (배경색도 마찬가지이다)\n            this.contents.fontGradient = true;\n        };\n\n        Window_Message.prototype.playSe = function (seName) {\n            const realName = seName.trim();\n            const data = <rm.types.AudioParameters>{\n                name: realName,\n                pan: 0,\n                pitch: 100,\n                volume: (<any>ConfigManager).seVolume,\n            };\n            AudioManager.playSe(data);\n        };\n\n        Window_Message.prototype.showPicture = function (param: string) {\n            const raw = param.split(\",\").map((e) => {\n                return e.trim();\n            });\n\n            let params = [\n                Number(raw[0]),\n                raw[1],\n                Number(raw[2]),\n                Number(raw[3]),\n                Number(raw[4]),\n                100,\n                100,\n                255,\n                0,\n            ];\n            let ret = true;\n\n            // 모든 요소 검증\n            if (params) {\n                params.forEach((e, i, a) => {\n                    if (e === undefined || e === null) {\n                        ret = false;\n                    }\n                });\n            }\n            // 검증 결과가 참이라면 그림 표시\n            if (ret) {\n                $gameScreen.showPicture.apply($gameScreen, <any>params);\n                return true;\n            }\n            return false;\n        };\n\n        Window_Message.prototype.erasePicture = function (picId) {\n            if (typeof picId !== \"number\") return;\n            $gameScreen.erasePicture(picId);\n        };\n\n        // 구조가 변경된 메서드\n        Window_Message.prototype.resetFontSettings = function () {\n            Window_Base.prototype.resetFontSettings.call(this);\n\n            // pause 아이콘 표시 위치 초기화\n            if (this._pauseSignSprite) {\n                this._pauseSignSprite.move(this._width / 2, this._height);\n                this._pauseSignSprite.scale.y = 1;\n            }\n\n            $gameMessage.setWaitTime(RS.MessageSystem.Params.textSpeed);\n        };\n\n        // 새로 추가된 메서드\n        Window_Message.prototype.resetGradient = function (textState) {\n            this.contents.fontGradient = false;\n        };\n\n        // 폰트 사이즈 설정 메서드는 MZ에서 없다\n        Window_Message.prototype.numVisibleRows = function () {\n            return RS.MessageSystem.Params.numVisibleRows;\n        };\n\n        /**\n         * Create text state included px and py values for text word wrapping.\n         */\n        const alias_Window_Message_createTextState =\n            Window_Message.prototype.createTextState;\n        Window_Message.prototype.createTextState = function (\n            text,\n            x,\n            y,\n            width\n        ) {\n            let textState = alias_Window_Message_createTextState.call(\n                this,\n                text,\n                x,\n                y,\n                width\n            );\n\n            const px = textState.x;\n            const py = textState.y;\n\n            // mixin\n            Object.assign(textState, {\n                px,\n                py,\n            });\n\n            return textState;\n        };\n\n        Window_Message.prototype.processWordWrap = function (\n            textState,\n            w,\n            width,\n            isValid\n        ) {\n            const px = <Required<number>>textState.px;\n\n            if (Math.floor(px + w * 2) > width) {\n                if (isValid) {\n                    this.processNewLine(textState);\n                    if (this.needsNewPage(textState)) {\n                        this.startPause();\n                    }\n                }\n            }\n        };\n\n        const alias_Window_Message_processNewLinePW =\n            Window_Message.prototype.processNewLine;\n        Window_Message.prototype.processNewLine = function (textState) {\n            alias_Window_Message_processNewLinePW.call(this, textState);\n            // 내부 버퍼의 위치를 시작 지점으로 초기화한다.\n            (<TextState>textState).px =\n                textState.startX || (<TextState>textState).x;\n\n            // background buffer 초기화\n            if (this._backBuffer && this._backBuffer.isDirty) {\n                const backTextState = this._backBuffer.textState;\n            }\n        };\n\n        /**\n         * ! Override\n         * @param {Object} textState\n         */\n        Window_Message.prototype.processCharacter = function (textState) {\n            const c = textState.text[textState.index++];\n            if (c.charCodeAt(0) < 0x20) {\n                this.flushTextState(textState);\n                this.processControlCharacter(textState, c);\n            } else {\n                textState.buffer += c;\n\n                // 내부 버퍼의 위치를 누적 계산한다.\n                textState.px += this.textWidth(c);\n            }\n        };\n\n        const alias_Window_Message_processCharacter =\n            Window_Message.prototype.processCharacter;\n        Window_Message.prototype.processCharacter = function (textState) {\n            // 이전 텍스트의 길이를 계산한다.\n            let isDirty = false;\n            const preBuffer = textState.buffer || \"\";\n            let preLen = preBuffer.length;\n\n            alias_Window_Message_processCharacter.call(this, textState);\n\n            // 새로운 텍스트가 이후에 있는가?\n            // 그게 문자인지 제어 문자인지는 이 로직에선 알 수 없다.\n            const postBuffer = textState.buffer || \"\";\n            const postLen = postBuffer.length;\n            if (preLen !== postLen) {\n                isDirty = true;\n            }\n\n            if (isDirty) {\n                // 끝에 있는 글자를 가지고 온다.\n                // 하지만 제어 문자인지는 확인하지 않는다.\n                // 제어 문자 여부는 메인 로직에서 판단하게 둔다.\n                const c = textState.buffer.substr(\n                    textState.buffer.length - 1,\n                    1\n                );\n                this.processNormalCharacterProxy(textState, c);\n            }\n        };\n\n        /**\n         * MZ에서는 processNormalCharacter의 구현이 없다.\n         * 하지만, 자동 개행이나 사운드 재생 그리고 배경색 묘화를 위해 위치 계산이 필요하다.\n         * 이 때문에 추가한 메서드이며, 텍스트의 묘화를 하진 않는다.\n         * @param {*} textState\n         * @param {*} c\n         */\n        Window_Message.prototype.processNormalCharacterProxy = function (\n            textState,\n            c\n        ) {\n            // MZ에서는 텍스트 상태(textState)가 다음 제어 문자가 등장해야 flush 처리된다.\n            // 따라서 이곳에서는 텍스트가 그려질 수 없다.\n            const w = this.textWidth(c);\n            let width = this.contentsWidth();\n\n            // 일반 메시지 모드에서만 동작 한다.\n            const isNormalMessageWindow = $gameMessage.getBalloon() === -2;\n            const isRealDrawingMode = textState.drawing;\n            let isValid =\n                isNormalMessageWindow &&\n                isRealDrawingMode &&\n                RS.MessageSystem.Params.isParagraphMinifier;\n\n            // 소수점 자리를 버려야 정확히 계산된다.\n            this.processWordWrap(textState, w, width, isValid);\n\n            const contents = this.contents;\n            const faceName = $gameMessage.faceName();\n\n            // if the faceName is not empty and the face direction is to right?\n            if (faceName !== \"\") {\n                width = contents.width - ImageManager.faceWidth;\n                isValid = RS.MessageSystem.Params.faceDirection === 2;\n                this.processWordWrap(textState, w, width, isValid);\n            }\n\n            // 배경색의 위치를 계산하고 비트맵 인스턴스를 생성한다.\n            const isValidTextBackground = contents.highlightTextColor !== null;\n            if (isValidTextBackground) {\n                const contentW = Math.floor(w * 2) + 1.0;\n                const contentH = this.lineHeight();\n\n                // 내부 버퍼의 텍스트 위치를 받아옵니다 (글자 하나의 버퍼 위치)\n                const { px, py } = <TextState>textState;\n\n                // 배경 버퍼의 생성\n                this._backBuffer = {\n                    buffer: new Bitmap(contentW, contentH),\n                    textState: textState,\n                    isDirty: false,\n                    x: px,\n                    y: py,\n                };\n\n                // 배경 버퍼는 내부 버퍼의 초기 위치로부터 계산된다.\n                this._backBuffer.buffer.fillAll(\n                    <string>contents.highlightTextColor\n                );\n                // 이 플래그가 활성화되어있다면 flushTextState에서 그리기 처리를 해야 한다.\n                this._backBuffer.isDirty = true;\n                this._backBuffer.textState = textState;\n            }\n        };\n\n        const alias_Window_Message_flushTextState =\n            Window_Message.prototype.flushTextState;\n        Window_Message.prototype.flushTextState = function (\n            textState: TextState\n        ) {\n            const isDrawing = textState.drawing; // !this._isUsedTextWidthEx와 같은 효과\n            const isSlowTextMode =\n                !this._showFast && !this.isEndOfText(textState) && isDrawing;\n            const isDrawingTextBackground =\n                isDrawing && this._backBuffer && this._backBuffer.isDirty;\n\n            if (isSlowTextMode) {\n                this.startWait($gameMessage.getWaitTime() || 0);\n            }\n\n            // 텍스트 코드를 만나면, flush가 시작되는데 배경색의 시작 라인이 달라지면,\n            // 다음 라인까지 배경색이 제대로 그려지지 않게 됩니다.\n            // 이는 MZ에서는 버퍼 방식이기 때문에 한 글자씩 배경색이 그려지지 않기 때문입니다.\n            // 따라서 라인이 달라질 때, flushBackground를 해줘야 합니다.\n            if (isDrawingTextBackground && isDrawing) {\n                const backBuffer = this._backBuffer;\n                const bitmap = backBuffer.buffer;\n                const backTextState = backBuffer.textState!;\n\n                if (backTextState.py !== textState.y) {\n                    this._backBuffer.isDirty = false;\n                    alias_Window_Message_flushTextState.call(this, textState);\n                    return;\n                }\n                let tx = backBuffer.x;\n                let ty = backBuffer.y;\n                const x = textState.x;\n                const y = textState.y;\n                const w = Math.min(this.innerWidth, Math.floor(bitmap.width));\n                const h = Math.min(this.innerHeight, Math.floor(bitmap.height));\n\n                // this.contents.blt(\n                //     bitmap,\n                //     0,\n                //     0,\n                //     w,\n                //     h,\n                //     Math.min(tx, y),\n                //     Math.min(ty, y)\n                // );\n                this._backBuffer.isDirty = false;\n            }\n\n            alias_Window_Message_flushTextState.call(this, textState);\n        };\n\n        /**\n         * 새로운 라인이 시작되기 전에 이전 라인에 그려야 할 배경색을 마저 그리는 기능입니다.\n         */\n        Window_Message.prototype.flushTextBackgbround = function (\n            textState: TextState\n        ) {};\n\n        Window_Message.prototype.updateBigFaceOpacity = function () {\n            if (!this._faceContents) {\n                return;\n            }\n            let { faceOpacity } = RS.MessageSystem.Params;\n            if (!faceOpacity) faceOpacity = 255;\n            const value = faceOpacity.clamp(0, 255);\n            this._faceContents.opacity = value;\n        };\n\n        Window_Message.prototype.fadeInOutFaceContents = function () {\n            if (!this._faceContents) {\n                return;\n            }\n\n            const isValid = this.isOpening() || this.isClosing();\n            if (isValid) {\n                const openness = (this.openness || 0).clamp(0, 255);\n                this._faceContents.scale.y = openness / 255;\n                this._faceContents.y =\n                    (this._faceContents.height / 2) * (1 - this.openness / 255);\n            }\n        };\n\n        const alias_Window_Message_checkToNotClose =\n            Window_Message.prototype.checkToNotClose;\n        Window_Message.prototype.checkToNotClose = function () {\n            this.fadeInOutFaceContents();\n            alias_Window_Message_checkToNotClose.call(this);\n        };\n\n        Window_Message.prototype.updateBalloonPosition = function () {\n            // Get the component\n            const component = <BalloonWindowTransformComponent>(\n                DependencyInjector.getComponent(\n                    \"BalloonWindowTransformComponent\"\n                )\n            );\n            if (component) {\n                component.updateBalloonPosition();\n            }\n        };\n\n        Window_Message.prototype.getDefaultSizeOption = function () {\n            const isMobileDevice = Utils.isMobileDevice();\n            const maxSW = isMobileDevice\n                ? window.outerWidth\n                : window.screen.availWidth;\n            const maxSH = isMobileDevice\n                ? window.outerHeight\n                : window.screen.availHeight;\n            const maxWidth = this.width;\n            const maxHeight = this.height;\n\n            return {\n                maxSW,\n                maxSH,\n                maxWidth,\n                maxHeight,\n                maxY: maxSH - maxHeight,\n                maxX: maxSW - maxWidth,\n            };\n        };\n\n        Window_Message.prototype.updatePlacement = function () {\n            const goldWindow = this._goldWindow;\n            const isNormalWindowMode = $gameMessage.getBalloon() === -2;\n            const isValidSceneIsMap = SceneManager._scene instanceof Scene_Map;\n            this._positionType = $gameMessage.positionType();\n\n            // 말풍선 모드가 아니라면 X좌표를 화면 중앙에 맞춘다.\n            if (isNormalWindowMode) {\n                const { maxWidth, maxHeight, maxX, maxY } =\n                    this.getDefaultSizeOption();\n\n                const desiredX =\n                    Graphics.width / 2 -\n                    maxWidth / 2 +\n                    RS.MessageSystem.Params.windowOffset.x;\n                const desiredY =\n                    (this._positionType * (Graphics.height - maxHeight)) / 2 +\n                    RS.MessageSystem.Params.windowOffset.y;\n\n                this.x = Math.min(desiredX, maxX);\n                this.y = Math.min(desiredY, maxY);\n            } else {\n                if (isValidSceneIsMap) {\n                    this.updateBalloonPosition();\n                }\n            }\n\n            // 골드 윈도우의 위치 설정\n            if (goldWindow) {\n                const minGoldY = goldWindow.height;\n                this._goldWindow.y =\n                    this.y > minGoldY ? 0 : Graphics.height - goldWindow.height;\n            }\n\n            // 투명도 업데이트\n            this.updateDefaultOpacity();\n            this.updateContentsOpacity();\n            this.updateBigFaceOpacity();\n\n            // 이름 윈도우 업데이트\n            // if (this._nameBoxWindow.isOpen() || this.areSettingsChanged()) {\n            //     this.updateNameWindow();\n            // }\n            // 얼굴 이미지의 Z-Index 업데이트\n            if ($gameMessage.faceName() !== \"\") {\n                const isBigFace = /^Big_/.exec($gameMessage.faceName());\n                const backIndex = 2;\n\n                if (RS.MessageSystem.Params.faceSide) {\n                    this.setFaceZIndex(isBigFace ? 0 : backIndex);\n                } else {\n                    this.setFaceZIndex(backIndex);\n                }\n            }\n        };\n\n        Window_Message.prototype.isAlreadyDrawnFace = function () {\n            return this._faceContents.bitmap || this.newLineX() > 0;\n        };\n\n        Window_Message.prototype.setFaceZIndex = function (zIndex = 0) {\n            const parent = this.parent;\n            const isFaceSide = RS.MessageSystem.Params.faceSide;\n\n            if (parent && isFaceSide) {\n                this.setChildIndex(this._faceContents, zIndex);\n            }\n        };\n\n        Window_Message.prototype.clearFaceBitmap = function () {\n            if (this._faceContents.bitmap) {\n                // @ts-ignore\n                this._faceContents.bitmap = null;\n            }\n        };\n\n        const alias_Window_Message_convertEscapeCharacters =\n            Window_Message.prototype.convertEscapeCharacters;\n        Window_Message.prototype.convertEscapeCharacters = function (text) {\n            const tcGroup = RS.MessageSystem.TextCodes.ENUM;\n            const textCode = RS.MessageSystem.TextCodes.Main;\n            const regGroup = RS.MessageSystem.Reg.Group;\n            text = alias_Window_Message_convertEscapeCharacters.call(\n                this,\n                text\n            );\n            text = text.replace(\n                regGroup[tcGroup.BOLD_START_CV],\n                function () {\n                    return regGroup[tcGroup.BOLD_START].source;\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.BOLD_END_CV],\n                function () {\n                    return regGroup[tcGroup.BOLD_END].source;\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.ITALIC_START_CV],\n                function () {\n                    return regGroup[tcGroup.ITALIC_START].source;\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.ITALIC_END_CV],\n                function () {\n                    return regGroup[tcGroup.ITALIC_END].source;\n                }.bind(this)\n            );\n            text = text.replace(regGroup[tcGroup.NAME], (...args) => {\n                let retName = args[1];\n\n                if (retName.endsWith(\":left\")) {\n                    retName = retName.replace(\":left\", \"\");\n                    RS.MessageSystem.Params.namePositionTypeAtX = \"left\";\n                }\n                if (retName.endsWith(\":auto\")) {\n                    retName = retName.replace(\":auto\", \"\");\n                    RS.MessageSystem.Params.namePositionTypeAtX = \"auto\";\n                }\n                if (retName.endsWith(\":center\")) {\n                    retName = retName.replace(\":center\", \"\");\n                    RS.MessageSystem.Params.namePositionTypeAtX = \"center\";\n                }\n                if (retName.endsWith(\":opacity0\")) {\n                    retName = retName.replace(\":opacity0\", \"\");\n                    RS.MessageSystem.Params.namePositionTypeAtX = \"opacity0\";\n                }\n                if (retName.endsWith(\":defaultOpacity\")) {\n                    retName = retName.replace(\":defaultOpacity\", \"\");\n                    RS.MessageSystem.Params.namePositionTypeAtX =\n                        \"defaultOpacity\";\n                }\n                if (retName.endsWith(\":right\")) {\n                    retName = retName.replace(\":right\", \"\");\n                    RS.MessageSystem.Params.namePositionTypeAtX = \"right\";\n                }\n                this._nameBoxWindow.setName(retName);\n                return \"\";\n            });\n            text = text.replace(\n                regGroup[tcGroup.BALLOON],\n                function () {\n                    const value = Number(arguments[1] || -2);\n                    if ($gameParty.inBattle()) {\n                        $gameMessage.setBalloon(\n                            // @ts-ignore\n                            value < 0\n                                ? \"ENEMIES : \" + Math.abs(value)\n                                : \"ACTORS : \" + value\n                        );\n                    } else {\n                        $gameMessage.setBalloon(value);\n                    }\n                    return \"\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.FRIENDLY_TROOPS],\n                function () {\n                    const value = Number(arguments[1] || 0);\n                    $gameMessage.setBalloon(\n                        // @ts-ignore\n                        \"ACTORS : \" + value\n                    );\n                    return \"\";\n                }.bind(this)\n            );\n            text = text.replace(\n                regGroup[tcGroup.ENEMY_TROOPS],\n                function () {\n                    const value = Number(arguments[1] || 0);\n                    $gameMessage.setBalloon(\n                        // @ts-ignore\n                        \"ENEMIES : \" + value\n                    );\n                    return \"\";\n                }.bind(this)\n            );\n            text = text.replace(regGroup[tcGroup.FACE_DIRECTION], () => {\n                const value = Number(arguments[1] || 0);\n                if (!this._isUsedTextWidthEx) {\n                    RS.MessageSystem.Params.faceDirection = value;\n                }\n                return \"\";\n            });\n            return text;\n        };\n\n        // Window_Message.prototype.terminateMessage\n        Window_Message.prototype.setHeight = function (n) {\n            this.contents.clear();\n            $gameMessage.setMaxLine(n);\n            this.height = this.fittingHeight(n);\n            this.createContents();\n            this.updatePlacement();\n        };\n\n        const alias_Window_Message_initialize =\n            Window_Message.prototype.initialize;\n        Window_Message.prototype.initialize = function (rect) {\n            alias_Window_Message_initialize.call(this, rect);\n            $gameTemp.setMSHeightFunc(this.setHeight.bind(this));\n            this.setHeight(RS.MessageSystem.Params.numVisibleRows);\n            this.createFaceContents();\n            this.on(\"removed\", this.removeEventHandler, this);\n            this.on(\"onLoadWindowskin\", this.onLoadWindowskin, this);\n        };\n\n        Window_Message.prototype.calcBalloonRect = function (text: string) {\n            const component = <BalloonWindowTransformComponent>(\n                DependencyInjector.getComponent(\n                    \"BalloonWindowTransformComponent\"\n                )\n            );\n            component.calcBalloonRect(text);\n        };\n\n        const alias_Window_Message_newPage = Window_Message.prototype.newPage;\n        Window_Message.prototype.newPage = function (textState) {\n            this.setFaceZIndex();\n            this.clearFaceBitmap();\n            this.loadWindowskin();\n            this.emit(\"onLoadWindowskin\");\n            this.openBalloon($gameMessage.getBalloon());\n            alias_Window_Message_newPage.call(this, textState);\n        };\n\n        Window_Message.prototype.updateBalloonPositionInBattle = function () {\n            const component = <BalloonWindowTransformComponent>(\n                DependencyInjector.getComponent(\n                    \"BalloonWindowTransformComponent\"\n                )\n            );\n            if (component) {\n                component.updateBalloonPositionInBattle();\n            }\n        };\n\n        Window_Message.prototype.openBalloon = function (sign) {\n            // 말풍선 모드가 아니면 빠져나간다.\n            if (sign === -2) {\n                this.resizeMessageSystem();\n                return;\n            }\n\n            this.setupOwner(sign);\n\n            const isBattleScene = SceneManager._scene instanceof Scene_Battle;\n            // 전투 중일 경우\n            if (isBattleScene) {\n                this.updateBalloonPositionInBattle();\n            } else {\n                this.updateBalloonPosition();\n            }\n        };\n\n        /**\n         * 1. start\n         */\n        const alias_Window_Message_startMessage =\n            Window_Message.prototype.startMessage;\n        Window_Message.prototype.startMessage = function () {\n            const text = $gameMessage.allText();\n            const textState = this.createTextState(text, 0, 0, 0);\n            textState.x = this.newLineX(textState);\n            textState.startX = textState.x;\n            this._textState = textState;\n\n            // 말풍선 영역을 계산합니다.\n            let tempText = textState.text.slice(0);\n            if (\n                $gameMessage.getBalloon() === -2 &&\n                RS.MessageSystem.Params.isParagraphMinifier\n            ) {\n                tempText = tempText.replace(/[\\r\\n]+/gm, \" \");\n            }\n            // ! BUG의 원인\n            this.calcBalloonRect(tempText);\n\n            this.newPage(this._textState);\n\n            // width 와 height를 재설정한다.\n            this.resizeMessageSystem(\"no reset\");\n\n            this.updatePlacement();\n            this.updateBackground();\n            this.open();\n            this._nameBoxWindow.start();\n        };\n\n        Window_Message.prototype.getDefaultWindowRect = function () {\n            return Scene_Message.prototype.messageWindowRect();\n        };\n\n        Window_Message.prototype.windowWidth = function () {\n            const rect = this.getDefaultWindowRect();\n            return rect.width;\n        };\n\n        Window_Message.prototype.windowHeight = function () {\n            const rect = this.getDefaultWindowRect();\n            return rect.height;\n        };\n\n        Window_Message.prototype.resizeMessageSystem = function (\n            ...args: any[]\n        ) {\n            const isResetOwner: Boolean = !(args.length > 0);\n\n            const isBattleScene = SceneManager._scene instanceof Scene_Battle;\n            if (!isResetOwner && isBattleScene) {\n                return;\n            }\n\n            const n = $gameMessage.positionType();\n            const ox = RS.MessageSystem.Params.windowOffset.x;\n            const oy = RS.MessageSystem.Params.windowOffset.y;\n\n            const windowRect = {\n                width: this.windowWidth(),\n                height: this.windowHeight(),\n            };\n            const x = Graphics.width / 2 - windowRect.width / 2 + ox;\n            const y = (n * (Graphics.height - windowRect.height)) / 2 + oy;\n            const width = windowRect.width;\n            const height = windowRect.height;\n\n            if (x !== this.x) this.x = x;\n            if (y !== this.y) this.y = y;\n            if (width !== this.width || height !== this.height) {\n                this.width = width;\n                this.height = height;\n            }\n\n            if (isResetOwner) {\n                $gameMap.setMsgOwner($gamePlayer);\n            }\n        };\n\n        Window_Message.prototype.removeEventHandler = function () {\n            this.off(\"onLoadWindowskin\", this.onLoadWindowskin, this);\n        };\n\n        /**\n         * TODO: ColorManager.textColor의 대체 구현.\n         *\n         * @param {Number} n\n         * @returns\n         */\n        Window_Message.prototype.textColor = function (n) {\n            const windowskin = this.windowskin;\n            if (!windowskin.isReady()) {\n                // Set the default text color if the windowskin is not ready.\n                return Color.baseColor;\n            }\n            const px = 96 + (n % 8) * 12 + 6;\n            const py = 144 + Math.floor(n / 8) * 12 + 6;\n            return windowskin.getPixel(px, py);\n        };\n\n        Window_Message.prototype.onLoadWindowskin = function () {\n            Color.baseColor = this.textColor(0);\n            this.changeTextColor(Color.baseColor);\n        };\n\n        Window_Message.prototype.loadWindowskin = function () {\n            const bitmap = ImageManager.loadSystem(\n                RS.MessageSystem.Params.windowskin\n            );\n\n            // if the windowskin is changed?\n            if (bitmap !== this.windowskin) {\n                this.windowskin = bitmap;\n                this._isDirtyWindowskin = false;\n                this.windowskin.addLoadListener(() => {\n                    this._isDirtyWindowskin = true;\n                });\n                if (!this.contents) {\n                    this.createContents();\n                }\n                // Set the default text color if the windowskin didn't load yet.\n                this.changeTextColor(Color.baseColor);\n\n                if (!this.windowskin.isReady()) {\n                    return setTimeout(() => this.loadWindowskin(), 10);\n                }\n            }\n        };\n\n        const _Window_Message_updateLoading =\n            Window_Message.prototype.updateLoading;\n        Window_Message.prototype.updateLoading = function () {\n            let ret = true;\n\n            if (this._isDirtyWindowskin) {\n                Color.baseColor = ColorManager.textColor(0);\n                this.changeTextColor(Color.baseColor);\n                this._isDirtyWindowskin = false;\n                ret = true;\n            }\n            return _Window_Message_updateLoading.call(this) && ret;\n        };\n\n        Window_Message.prototype.needsNewPage = function (textState) {\n            return (\n                !this.isEndOfText(textState) &&\n                textState.y + textState.height > this.contentsHeight()\n            );\n        };\n\n        Window_Message.prototype.createFaceContents = function () {\n            this._faceContents = new Sprite();\n            this._faceContents.x = 0;\n            this._faceContents.y = 0;\n\n            this.addChildAt(this._faceContents, 2);\n            return this._faceContents;\n        };\n\n        Window_Message.prototype.removeFaceContents = function () {\n            if (this._faceContents) this.removeChild(this._faceContents);\n        };\n\n        /**\n         * 큰 얼굴 이미지가 설정되었을 때 텍스트 시작 위치\n         */\n        Window_Message.prototype.newLineX = function () {\n            const reg = /^Big_/i;\n            const faceName = $gameMessage.faceName();\n            const faceIndex = $gameMessage.faceIndex();\n            if (reg.exec(faceName)) {\n                var faceStartX = RS.MessageSystem.Params.faceSide\n                    ? 0\n                    : RS.MessageSystem.Params.textStartX;\n                return faceIndex > 0 ? 0 : faceStartX;\n            } else {\n                const isRightDirection =\n                    RS.MessageSystem.Params.faceDirection === 2;\n                if (isRightDirection) {\n                    return 0;\n                }\n                return faceName ? RS.MessageSystem.Params.faceStartOriginX : 0;\n            }\n        };\n\n        // TODO: 큰 얼굴 이미지 구현 필요\n        /**\n         * @param {String} faceName\n         */\n        Window_Message.prototype.isValidBigFace = function (faceName) {\n            const reg = /^Big_/i;\n            return reg.exec(faceName);\n        };\n\n        /**\n         * TODO: deprecated\n         */\n        Window_Message.prototype.updateNameWindow = function () {};\n\n        /**\n         * Window 구성 스프라이트 _windowBackSprite의 투명도를 조절합니다.\n         * TODO: deprecated\n         * @method standardBackOpacity\n         */\n        Window_Message.prototype.standardBackOpacity = function () {\n            return RS.MessageSystem.Params.backOpacity;\n        };\n\n        /**\n         * Bitmap의 context.globalAlpha 값을 변경합니다.\n         * @method translucentOpacity\n         */\n        Window_Message.prototype.translucentOpacity = function () {\n            return RS.MessageSystem.Params.translucentOpacity;\n        };\n\n        /**\n         * 윈도우를 구성하는 모든 객체의 투명도를 변경합니다.\n         * @method updateDefaultOpacity\n         */\n        Window_Message.prototype.updateDefaultOpacity = function () {\n            this.opacity = RS.MessageSystem.Params.defaultOpacity;\n        };\n\n        /**\n         * Window 구성 스프라이트 _windowContentsSprite의 투명도를 변경합니다.\n         * @method updateContentsOpacity\n         */\n        Window_Message.prototype.updateContentsOpacity = function () {\n            this.contentsOpacity = RS.MessageSystem.Params.contentsOpacity;\n        };\n\n        Window_Message.prototype.getSpriteActors = function (\n            sign: number\n        ): IBalloonSpriteTarget | null {\n            if (!$gameParty.members()) return null;\n            const max = $gameParty.members().length;\n            sign = sign.clamp(0, max);\n\n            return {\n                type: \"actor\",\n                id: sign - 1,\n            };\n        };\n\n        Window_Message.prototype.getSpriteEnemies = function (\n            sign: number\n        ): IBalloonSpriteTarget | null {\n            if (!$gameTroop.members()) return null;\n            const max = $gameTroop.members().length;\n            sign = sign.clamp(0, max);\n\n            return {\n                type: \"enemy\",\n                id: sign - 1,\n            };\n        };\n\n        Window_Message.prototype.setupOwner = function (sign) {\n            switch (sign) {\n                case -1: // 플레이어\n                    $gameMap.setMsgOwner($gamePlayer);\n                    break;\n                case 0: // 이 이벤트\n                    $gameMap.setMsgOwner(<Game_Event>$gameMap.getMsgEvent());\n                    break;\n                default:\n                    if (SceneManager._scene instanceof Scene_Battle) {\n                        // 전투 중인가?\n                        if (/(?:ENEMIES)[ ]*:(.*)/.test(sign.toString())) {\n                            // 적\n                            $gameMap.setMsgOwner(\n                                this.getSpriteEnemies(parseInt(RegExp.$1))\n                            );\n                        }\n                        if (/(?:ACTORS)[ ]*:(.*)/.test(sign.toString())) {\n                            // 아군\n                            $gameMap.setMsgOwner(\n                                this.getSpriteActors(parseInt(RegExp.$1))\n                            );\n                        }\n                    } else {\n                        // 맵 이벤트\n                        $gameMap.setMsgOwner($gameMap.event(sign));\n                    }\n                    break;\n            }\n        };\n\n        const alias_Window_Message_shouldBreakHere =\n            Window_Message.prototype.shouldBreakHere;\n        Window_Message.prototype.shouldBreakHere = function (text) {\n            const isBreakCharacter = alias_Window_Message_shouldBreakHere.call(\n                this,\n                text\n            );\n\n            if (isBreakCharacter) {\n                if (RS.MessageSystem.Params.isPlayTextSound) {\n                    const interval = RS.MessageSystem.Params.textSoundInterval;\n\n                    if (this._textSoundInterval-- <= 0) {\n                        AudioManager.playStaticSe(<rm.types.AudioParameters>{\n                            name: RS.MessageSystem.popParameter(\n                                \"Text Sound\",\n                                \"텍스트 효과음\"\n                            ),\n                            pan: 0,\n                            pitch: 100,\n                            volume: 90,\n                        });\n                        this._textSoundInterval = interval;\n                    }\n                }\n            }\n\n            return isBreakCharacter;\n        };\n\n        //============================================================================\n        // Game_Interpreter\n        //============================================================================\n        Game_Interpreter.prototype.processMessageParams = function (\n            eventId: number,\n            index: number\n        ) {\n            const meta = <EventCommand.CommentMeta>(\n                RS.MessageSystem.getEventComments(eventId, index - 1)\n            );\n            if (meta[\"윈도우 스킨\"]) {\n                RS.MessageSystem.Params.windowskin =\n                    meta[\"윈도우 스킨\"].trim() || \"Window\";\n                ImageManager.loadSystem(RS.MessageSystem.Params.windowskin);\n            }\n            if (meta[\"이름 윈도우 스킨\"]) {\n                RS.MessageSystem.Params.windowskinForNameWindow =\n                    meta[\"이름 윈도우 스킨\"].trim() || \"Window\";\n                ImageManager.loadSystem(\n                    RS.MessageSystem.Params.windowskinForNameWindow\n                );\n            }\n            if (meta[\"라인 높이\"]) {\n                RS.MessageSystem.Params.lineHeight = parseInt(\n                    meta[\"라인 높이\"]\n                );\n            }\n            if (meta[\"폰트 크기\"]) {\n                RS.MessageSystem.Params.fontSize = parseInt(meta[\"폰트 크기\"]);\n            }\n            if (meta[\"라인\"]) {\n                RS.MessageSystem.Params.numVisibleRows = parseInt(meta[\"라인\"]);\n            }\n            if (meta[\"텍스트 시작 X\"]) {\n                RS.MessageSystem.Params.textStartX = parseInt(\n                    meta[\"텍스트 시작 X\"]\n                );\n            }\n            if (meta[\"큰 페이스칩 OX\"]) {\n                RS.MessageSystem.Params.faceOX = Number(meta[\"큰 페이스칩 OX\"]);\n            }\n            if (meta[\"큰 페이스칩 OY\"]) {\n                RS.MessageSystem.Params.faceOY = Number(meta[\"큰 페이스칩 OY\"]);\n            }\n            if (meta[\"대화창 뒤에 얼굴 표시\"]) {\n                RS.MessageSystem.Params.faceSide = Boolean(\n                    meta[\"대화창 뒤에 얼굴 표시\"] === \"true\"\n                );\n            }\n            if (meta[\"대화창 투명도\"]) {\n                RS.MessageSystem.Params.defaultOpacity = parseInt(\n                    meta[\"대화창 투명도\"]\n                );\n            }\n            if (meta[\"텍스트 효과음 재생 여부\"]) {\n                RS.MessageSystem.Params.isPlayTextSound = Boolean(\n                    meta[\"텍스트 효과음 재생 여부\"] === \"true\"\n                );\n            }\n            if (meta[\"기본 텍스트 출력 속도\"]) {\n                RS.MessageSystem.Params.textSpeed = Number(\n                    meta[\"기본 텍스트 출력 속도\"]\n                );\n            }\n        };\n\n        Game_Interpreter.prototype.isValidMultiLine = function () {\n            const codes = [];\n            let prevCode = 401;\n            let lineCount = 0;\n            for (let i = 1; i < 8; i++) {\n                const currentCommand = this._list[this._index + i];\n                if (currentCommand) {\n                    const code = currentCommand.code;\n                    codes.push(code);\n                    prevCode = code;\n                    if ([101, 401].contains(code)) {\n                        lineCount++;\n                    }\n                }\n            }\n            if (codes.contains(102)) {\n                return false;\n            } else if (codes.contains(103)) {\n                return false;\n            } else if ($gameMessage.getMaxLine() <= 4) {\n                return false;\n            } else if (lineCount <= 4) {\n                return false;\n            } else if (RS.MessageSystem.Params.choiceWindowStyle == \"RMXP\") {\n                return false;\n            } else {\n                return true;\n            }\n        };\n\n        Game_Interpreter.prototype.command101 = function (params) {\n            if ($gameMessage.isBusy()) {\n                return false;\n            }\n\n            $gameMap.setMsgEvent(this.character(this._eventId > 0 ? 0 : -1));\n            $gameMessage.setFaceImage(params[0], params[1]);\n            $gameMessage.setBackground(params[2]);\n            $gameMessage.setPositionType(params[3]);\n            $gameMessage.setSpeakerName(params[4]);\n\n            this.processMessageParams(this._eventId, this._index);\n\n            if (this.isMultiLine()) {\n                this.multiLineAddMessage();\n            } else {\n                while (this.nextEventCode() === 401) {\n                    // Text data\n                    this._index++;\n                    $gameMessage.add(this.currentCommand().parameters[0]);\n                }\n            }\n\n            switch (this.nextEventCode()) {\n                case 102: // Show Choices\n                    this._index++;\n                    this.setupChoices(this.currentCommand().parameters);\n                    break;\n                case 103: // Input Number\n                    this._index++;\n                    this.setupNumInput(this.currentCommand().parameters);\n                    break;\n                case 104: // Select Item\n                    this._index++;\n                    this.setupItemChoice(this.currentCommand().parameters);\n                    break;\n            }\n            this.setWaitMode(\"message\");\n            return true;\n        };\n\n        Game_Interpreter.prototype.multiLineAddMessage = function () {\n            this.initLineHeight();\n\n            while ($gameMessage._texts.length < $gameMessage.getMaxLine()) {\n                while (this.nextEventCode() === 401) {\n                    this._index++;\n                    $gameMessage.add(this.currentCommand().parameters[0]);\n                    this.addLineHeight();\n                    if (this._lineHeight >= $gameMessage.getMaxLine()) {\n                        break;\n                    }\n                }\n                if (this.nextEventCode() !== 101) {\n                    break;\n                }\n            }\n\n            // 커맨드 코드 401번이 아직 남아있는 상황이라면,\n            // 다음 인덱스로 넘겨야 선택지가 제대로 동작한다.\n            while (this.nextEventCode() === 401) {\n                this._index++;\n            }\n        };\n\n        Game_Interpreter.prototype.initLineHeight = function () {\n            this._lineHeight = 0;\n        };\n\n        Game_Interpreter.prototype.isMultiLine = function () {\n            return this.isValidMultiLine();\n        };\n\n        Game_Interpreter.prototype.addLineHeight = function () {\n            this._lineHeight++;\n            if (this.nextEventCode() === 101) {\n                this._index++;\n            }\n        };\n\n        //============================================================================\n        // Window_NameBox\n        //============================================================================\n        Window_NameBox.prototype.updatePlacement = function () {\n            this.width = this.windowWidth();\n            this.height = this.windowHeight();\n            const messageWindow = this._messageWindow;\n            if ($gameMessage.isRTL()) {\n                this.x = messageWindow.x + messageWindow.width - this.width;\n            } else {\n                this.x = messageWindow.x;\n            }\n            if (messageWindow.y > 0) {\n                this.y = messageWindow.y - this.height;\n            } else {\n                this.y = messageWindow.y + messageWindow.height;\n            }\n        };\n\n        //============================================================================\n        // Game_Temp\n        //============================================================================\n        Game_Temp.prototype.setMSHeightFunc = function (func) {\n            this._callMSHeightFunc = func;\n        };\n\n        Game_Temp.prototype.setMaxLine = function (n) {\n            if (this._callMSHeightFunc) this._callMSHeightFunc(n);\n        };\n\n        //============================================================================\n        // Game_Map\n        //============================================================================\n        const alias_Game_Map_initialize = Game_Map.prototype.initialize;\n        Game_Map.prototype.initialize = function () {\n            alias_Game_Map_initialize.call(this);\n            this._msgOwner = $gamePlayer;\n            this._msgEvent = 0;\n        };\n\n        Game_Map.prototype.getMsgOwner = function () {\n            return this._msgOwner;\n        };\n\n        /**\n         * @method setMsgOwner\n         * @param o {Game_Event | Game_Player}\n         */\n        Game_Map.prototype.setMsgOwner = function (o) {\n            this._msgOwner = o;\n            $gameMessage.setBalloonPatternHeight(this.tileHeight());\n        };\n\n        Game_Map.prototype.getMsgEvent = function () {\n            return this._msgEvent;\n        };\n\n        Game_Map.prototype.setMsgEvent = function (ev) {\n            this._msgEvent = ev;\n        };\n\n        /// ======================================================================\n        /// DI\n        /// ======================================================================\n        const alias_Scene_Message_associateWindows__enrtyPoint =\n            Scene_Message.prototype.associateWindows;\n        Scene_Message.prototype.associateWindows = function () {\n            alias_Scene_Message_associateWindows__enrtyPoint.call(this);\n            const messageWindow = this._messageWindow;\n            DependencyInjector.injectMessageWindow(messageWindow);\n            DependencyInjector.ready();\n        };\n\n        Scene_Message.prototype.messageWindowRect = function () {\n            const ww = Graphics.width;\n            const wh = this.calcWindowHeight(4, false) + 8;\n            const wx = (Graphics.height - ww) / 2;\n            const wy = 0;\n            return new Rectangle(wx, wy, ww, wh);\n        };\n\n        const alias_Scene_Message_terminate = Scene_Message.prototype.terminate;\n        Scene_Message.prototype.terminate = function () {\n            alias_Scene_Message_terminate.call(this);\n            DependencyInjector.ejectMessageWindow();\n        };\n\n        RS.MessageSystem.initSystem();\n\n        // ! [DEBUG]\n        if (RS.MessageSystem.Params.DEBUG) {\n            SceneManager.showDevTools();\n            const win = nw.Window.get();\n            win.moveTo(window.outerWidth / 3, 153);\n        }\n    };\n}\n","import { BaseComponent } from \"./BaseComponent\";\nimport { ComponentProp } from \"../core/Component\";\n\nexport type BalloonRectData = {\n    /**\n     *\n     */\n    mx: number;\n    /**\n     *\n     */\n    my: number;\n    /**\n     *\n     */\n    tx: number;\n    /**\n     *\n     */\n    ty: number;\n    /**\n     *\n     */\n    tileHeight: number;\n    /**\n     * Sets or gets `dx` that means the destination x coordinate.\n     */\n    dx: number;\n    /**\n     * Sets or gets `dy` that means the destination y coordinate.\n     */\n    dy: number;\n    /**\n     * Gets or sets the value related for the name window.\n     */\n    ny: number;\n    /**\n     *\n     */\n    scaleY: number;\n    /**\n     * Gets or sets the padding value (like value named `padding-bottom`)\n     * `screenX`와 `screenY`는 `right-bottom`에 위치하므로 `height` 만큼 빼야 합니다.\n     */\n    padY: number;\n};\n\n/**\n * @class BalloonWindowTransformComponent\n * @description\n * 말풍선 윈도우의 위치를 조정하기 위한 컴포넌트입니다.\n */\nexport class BalloonWindowTransformComponent extends BaseComponent {\n    private _bWidth: number = 0;\n    private _bHeight: number = 0;\n    public transform!: PIXI.Transform;\n\n    onReady(props: ComponentProp) {\n        super.onReady(props);\n        this._bWidth = this.width;\n        this._bHeight = this.height;\n    }\n\n    /**\n     * 말풍선 영역의 크기를 계산합니다.\n     *\n     * @param {String} text\n     * @returns {Number}\n     */\n    calcBalloonRect(text: string) {\n        // {\n        //     let temp: string,\n        //         baseWidth: number,\n        //         tempText: string[],\n        //         height: number,\n        //         min: number,\n        //         pad: number,\n        //         numOfLines: number;\n        //     // drawTextEx를 사용하기 전에 현재 상태를 저장한다.\n        //     this.save();\n\n        //     temp = text;\n\n        //     // 라인 갯수를 구하기 위해 텍스트를 줄바꿈 문자를 기준으로 나눈다.\n        //     const copyText = text.slice(0);\n        //     tempText = copyText.split(/[\\r\\n]+/);\n        //     numOfLines = tempText.length;\n\n        //     pad = this.standardPadding() * 2;\n\n        //     // 높이를 구한다.\n        //     height = 0;\n        //     tempText.forEach((i) => (height += this.calcBalloonRectHeight(i)));\n\n        //     if (height <= 0) {\n        //         // 높이를 구할 수 없었다면,\n        //         height = this.fittingHeight(numOfLines);\n        //     } else {\n        //         // 높이를 구했다면\n        //         height = height + pad;\n        //     }\n\n        //     const textPadding = this.textPadding();\n\n        //     // 폭을 계산한다.\n        //     let pw = 0;\n        //     for (var i = 0; i < numOfLines; i++) {\n        //         this._isUsedTextWidthEx = true;\n        //         const x = this.drawTextEx(tempText[i]);\n        //         this._isUsedTextWidthEx = false;\n        //         if (x >= pw) {\n        //             pw = x;\n        //         }\n        //     }\n\n        //     baseWidth = pw;\n        //     this._bWidth =\n        //         baseWidth + pad + textPadding || RS.MessageSystem.Params.WIDTH;\n\n        //     // 얼굴 이미지가 설정되어있다면 ?\n        //     if ($gameMessage.faceName() !== \"\") {\n        //         // 최소 높이를 설정한다.\n        //         min = this.fittingHeight(4);\n        //         // 기존 폭 값에 얼굴 이미지의 폭을 더한다.\n        //         this._bWidth += this.newLineX() + pad;\n        //         if (RS.MessageSystem.Params.faceDirection === 2) {\n        //             this._bWidth += ImageManager.faceWidth;\n        //         }\n        //         // 높이 값이 최소 높이보다 작으면, 최소 높이 값으로 설정한다.\n        //         if (height < min)\n        //             height = height.clamp(min, height + (min - height));\n        //     }\n\n        //     const type = RS.MessageSystem.Params.choiceWindowStyle;\n\n        //     // 선택지가 있고, XP 스타일로 설정했을 때\n        //     if (type === \"RMXP\" && $gameMessage.isChoice()) {\n        //         const maxLines = tempText.length;\n        //         const maxChoices = $gameMessage.choices().length;\n        //         const lineHeight = this.lineHeight();\n        //         // 선택지 갯수를 확장했을 수도 있지만, 4개로 가정한다.\n        //         height = height + maxChoices * lineHeight;\n        //         // 선택지 윈도우의 폭이 말풍선보다 크면 제한을 둔다.\n        //         if (this._choiceWindow.windowWidth() > this._bWidth) {\n        //             this._bWidth = this._choiceWindow.windowWidth();\n        //         }\n        //     }\n\n        //     this.restore();\n        // }\n        this.save();\n\n        {\n            // TODO: 얼굴 이미지 설정 체크\n            // TODO: 인라인 선택지 모드인지 체크\n\n            const rect = this.textSizeEx(text);\n            const padding = this.standardPadding();\n            this._bWidth = rect.width + padding * 2;\n            this._bHeight = Math.max(\n                rect.height + padding * 2,\n                this.fittingHeight(1)\n            );\n            // this.drawTextEx() 사용하기 이전 상태로 복구한다.\n        }\n        this.restore();\n    }\n\n    textSizeEx(text: string): TextSizeRect {\n        this.messageWindow._isUsedTextWidthEx = true;\n        const rect = this.messageWindow.textSizeEx(text);\n        this.messageWindow._isUsedTextWidthEx = false;\n\n        return rect;\n    }\n\n    /**\n     * @override\n     */\n    updatePlacement() {\n        this.messageWindow.updatePlacement();\n    }\n\n    isActiveInBalloon() {\n        const isInValidBalloon = $gameMessage.getBalloon() === -2;\n        if (isInValidBalloon) {\n            this.updatePlacement();\n            return false;\n        }\n        return true;\n    }\n\n    setBalloonRect(data: BalloonRectData) {\n        const faceName = $gameMessage.faceName();\n        const faceDirection = RS.MessageSystem.Params.faceDirection;\n\n        const ox = RS.MessageSystem.Params.windowOffset.x;\n        const oy = RS.MessageSystem.Params.windowOffset.y;\n        this.x = data.dx + ox;\n        this.y = data.dy + oy;\n        this.width = this._bWidth;\n        this.height = this._bHeight;\n\n        if (faceName && faceDirection === 2) {\n            this.drawMessageFace();\n        }\n    }\n\n    setBalloonPlacement(data: BalloonRectData): BalloonRectData | void {\n        const gw = Graphics.width;\n        const gh = Graphics.height;\n        const bw = Graphics.boxWidth;\n        const bh = Graphics.boxHeight;\n\n        console.log(\"setBalloonPlacement() + \" + JSON.stringify(data));\n        // 화면 좌측\n        if (!data) return;\n        if (data.mx - this._bWidth / 2 < 0) {\n            data.dx = 0;\n            data.tx = this.canvasToLocalX(data.mx);\n        }\n\n        // 화면 우측\n        if (data.mx - this._bWidth / 2 > bw - this._bWidth) {\n            data.dx = bw - this._bWidth;\n            data.tx = this.canvasToLocalX(data.mx);\n        }\n\n        // 화면 상단\n        if (data.my - this._bHeight - data.tileHeight / 2 < 0) {\n            data.dy = data.my + data.tileHeight / 2;\n            data.scaleY = -1;\n            data.ty = this._height * data.scaleY + this._height;\n            data.ny =\n                this.y + this._bHeight + RS.MessageSystem.Params.nameWindowY;\n        }\n\n        // 화면 하단\n        if (data.my - this._bHeight > bh - this._bHeight) {\n            data.dy = bh - this._bHeight;\n            data.ty = this._height;\n        }\n\n        return data;\n    }\n\n    /**\n     * Updates position of the pause sprite and the name window.\n     *\n     * @param data\n     */\n    updateSubBalloonElements(data: BalloonRectData) {\n        const _pauseSignSprite = this.messageWindow._pauseSignSprite;\n        if (_pauseSignSprite) {\n            _pauseSignSprite.move(data.tx, data.ty);\n            _pauseSignSprite.scale.y = data.scaleY;\n        }\n        this._nameWindow.y = data.ny;\n    }\n\n    getNameWindowY(): number {\n        const ny =\n            this.y -\n            this._nameWindow.height -\n            RS.MessageSystem.Params.nameWindowY;\n\n        return ny ? ny : 0;\n    }\n\n    // canvasToLocalX(x: number) {\n    //     let node: any = this.messageWindow;\n    //     while (node) {\n    //         x -= node.x;\n    //         node = <Sprite>node.parent;\n    //     }\n    //     return x;\n    // }\n\n    // canvasToLocalY(y: number) {\n    //     let node: any = this.messageWindow;\n    //     while (node) {\n    //         y -= node.y;\n    //         node = node.parent;\n    //     }\n    //     return y;\n    // }\n\n    updateBalloonPosition(): never | void {\n        console.log(\n            \"============ DEBUG updateBalloonPosition() ====================\"\n        );\n\n        let data = <BalloonRectData>{};\n\n        if (!this.isActiveInBalloon()) return;\n\n        // 말풍선 소유자의 화면 좌표\n        const owner = <Game_Character>$gameMap.getMsgOwner();\n\n        if (!owner) {\n            console.warn($gameMap.getMsgOwner());\n            throw new Error(\"말풍선 소유자가 없습니다.\");\n        }\n\n        data.mx = owner.screenX();\n        data.my = owner.screenY();\n\n        console.log(\"%d %d\", data.mx, data.my);\n\n        data.tx = this._bWidth / 2;\n        data.ty = this._bHeight;\n        data.scaleY = 1;\n        data.tileHeight = $gameMessage.getBalloonPatternHeight();\n        data.dx = data.mx - this._bWidth / 2;\n        data.dy = data.my - this._bHeight - data.tileHeight;\n        data.ny = this.getNameWindowY();\n\n        console.log(JSON.stringify(data));\n\n        data = <BalloonRectData>this.setBalloonPlacement(data);\n\n        if (\n            data.dx + RS.MessageSystem.Params.windowOffset.x !== this.x ||\n            data.dy + RS.MessageSystem.Params.windowOffset.y !== this.y ||\n            this._bWidth !== this.width ||\n            this._bHeight !== this.height\n        ) {\n            // 말풍선 위치 및 크기 설정\n            this.setBalloonRect(data);\n\n            // 멈춤 표시 스프라이트 위치 조정\n            this.updateSubBalloonElements(data);\n        }\n    }\n\n    updateBalloonPositionInBattle() {\n        if (!$gameParty.inBattle()) {\n            // 전투 씬인지 확인\n            console.warn(\"전투가 아닙니다\");\n            return;\n        }\n        if (!$gameSystem.isSideView()) {\n            // 사이드뷰 전투인지 확인\n            console.warn(\"사이드뷰 전투가 아닙니다.\");\n            return;\n        }\n\n        let data = <BalloonRectData>{};\n\n        // 타겟의 화면 좌표 설정\n        let owner = $gameMap.getMsgOwner();\n        if (!owner) {\n            console.warn(\"owner 변수가 없습니다\");\n            return;\n        }\n        if (!owner.hasOwnProperty(\"type\")) {\n            console.warn(\"type 속성이 없습니다 : \" + owner);\n            return;\n        }\n        if (!owner.hasOwnProperty(\"id\")) {\n            console.warn(\"id 속성이 없습니다 : \" + owner);\n            return;\n        }\n\n        // 현재 씬이 전투 씬이 아닌 경우를 확인한다.\n        let scene = SceneManager._scene;\n        if (!(scene instanceof Scene_Battle)) {\n            console.warn(\"전투 장면이 아닙니다\");\n            return false;\n        }\n\n        let parent;\n\n        // 액터인가?\n        if (owner.type === \"actor\") {\n            parent = scene._spriteset._actorSprites; // 액터 스프라이트 군을 반환\n        } else {\n            parent = scene._spriteset._enemySprites; // 적 스프라이트 군을 반환\n        }\n\n        // 타겟 스프라이트를 id 값으로 찾는다.\n        let tempBattlers = [];\n        tempBattlers = parent;\n        let target = tempBattlers[owner.id];\n        if (!target) {\n            console.warn(\"타겟이 없습니다\");\n            return;\n        }\n\n        // 이미 죽어있다면 메시지를 일반 메시지로 표시한다.\n        if (\n            (owner.type === \"actor\" &&\n                !(<Sprite_Actor>target)._actor.isAlive()) ||\n            (owner.type === \"enemy\" && !(<Sprite_Enemy>target)._enemy.isAlive())\n        ) {\n            return;\n        }\n\n        data.mx = target.x;\n        data.my = target.y;\n\n        data.padY =\n            owner.type === \"actor\"\n                ? (target as Sprite_Actor)._mainSprite.bitmap.height / 6\n                : target.bitmap.height;\n\n        data.tx = this._width / 2;\n        data.ty = this._height;\n\n        data.scaleY = 1;\n        data.tileHeight = $gameMessage.getBalloonPatternHeight();\n\n        data.dx = data.mx - this._bWidth / 2;\n        data.dy = data.my - this._bHeight - data.tileHeight - data.padY;\n\n        data.ny =\n            this.y -\n            this._nameWindow.height -\n            RS.MessageSystem.Params.nameWindowY;\n\n        data = <BalloonRectData>this.setBalloonPlacement(data);\n\n        // 말풍선 위치 및 크기 설정\n        this.setBalloonRect(data);\n\n        // 멈춤 표시 스프라이트 위치 조정\n        this.updateSubBalloonElements(data);\n\n        if (this.transform) this.updateTransform();\n    }\n\n    updateTransform(): void {\n        this.messageWindow.updateTransform();\n    }\n\n    calcBalloonRectHeight(text: string) {\n        // 상태 저장\n        this.save();\n\n        const messageWindow = this.messageWindow;\n        const tempFontSize = this.contents.fontSize;\n\n        const textState = messageWindow.createTextState(text, 0, 0, 0);\n        textState.text = messageWindow.convertEscapeCharacters(text);\n        textState.height = messageWindow.calcTextHeight(textState, false);\n\n        // 상태 복구\n        this.restore();\n\n        messageWindow.setTextSize(tempFontSize);\n        return textState.height;\n    }\n}\n","import { Component, ComponentProp } from \"../core/Component\";\n\n/**\n * @class BaseComponent\n * @description\n * 샌드박스 환경에서 MV 메소드를 호출하여 이전 버전에 대한 안전성을 제공합니다.\n */\nexport class BaseComponent extends Component {\n    private _messageWindow!: Window_Message;\n\n    constructor(props: ComponentProp) {\n        super(props);\n    }\n\n    onReady(props: ComponentProp) {\n        // if the message window is valid from passed props.\n        if (!(\"messageWindow\" in props)) {\n            console.error(\"messageWindow is not defined\");\n            return;\n        }\n\n        console.log(\"On Ready 이벤트가 실행되었습니다.\");\n\n        /**\n         * @type {Window_Message}\n         */\n        this._messageWindow = props.messageWindow;\n    }\n\n    // Getters\n    get messageWindow() {\n        return this._messageWindow;\n    }\n\n    get contents() {\n        return this._messageWindow.contents;\n    }\n\n    /**\n     * @returns {Window_NameBox}\n     */\n    get _nameWindow(): never | Window_NameBox {\n        const isNameWindowOK = this._messageWindow._nameBoxWindow;\n        if (!isNameWindowOK) {\n            throw new Error(\n                \"이름 윈도우가 아직 정의되지 않았습니다. DI를 제대로된 시점에 하시기 바랍니다.\"\n            );\n        }\n\n        return this._messageWindow._nameBoxWindow;\n    }\n\n    get _choiceWindow() {\n        return this._messageWindow._choiceListWindow\n            ? this._messageWindow._choiceListWindow\n            : {\n                  windowWidth: () => 0,\n                  windowHeight: () => 0,\n              };\n    }\n\n    save(): void {\n        this._messageWindow.save();\n    }\n\n    restore(): void {\n        this._messageWindow.restore();\n    }\n\n    standardPadding() {\n        // 패딩을 업데이트해야 합니다 (MZ에서 달라진 부분입니다)\n        // 꼭 체크할 필요는 없지만...\n        this._messageWindow.updatePadding();\n        const padding = this._messageWindow.padding || 12;\n\n        return padding;\n    }\n\n    textPadding() {\n        // textPadding()의 구현입니다.\n        return this._messageWindow.itemPadding() || 6;\n    }\n\n    newLineX() {\n        return this._messageWindow.newLineX();\n    }\n\n    fittingHeight(numLines: number) {\n        return this._messageWindow.fittingHeight(numLines);\n    }\n\n    drawTextEx(text: string) {\n        const box = this._messageWindow.textSizeEx(text);\n        return box.width;\n    }\n\n    lineHeight() {\n        return this._messageWindow.lineHeight();\n    }\n\n    /**\n     * TODO: 상속 시, 이 메소드를 오버라이드 하세요.\n     */\n    updatePlacement() {}\n\n    drawMessageFace() {\n        this._messageWindow.drawMessageFace();\n    }\n\n    set x(value: number) {\n        this._messageWindow.x = value;\n    }\n\n    set y(value: number) {\n        this._messageWindow.y = value;\n    }\n\n    set width(value: number) {\n        this._messageWindow.width = value;\n    }\n\n    set height(value: number) {\n        this._messageWindow.height = value;\n    }\n\n    get width() {\n        return this._messageWindow.width;\n    }\n\n    get _width() {\n        return this._messageWindow.width;\n    }\n\n    get height() {\n        return this._messageWindow.height;\n    }\n\n    get _height() {\n        return this._messageWindow.height;\n    }\n\n    canvasToLocalX(x: number) {\n        return x;\n    }\n\n    canvasToLocalY(y: number) {\n        return y;\n    }\n}\n","import { BaseComponent } from \"./BaseComponent\";\n\n/**\n * @class NamwWindowPositionComponent\n * @description\n * 이름 윈도우의 X좌표를 재설정합니다.\n */\nexport class NameWindowPositionComponent extends BaseComponent {\n    setOpacity(value: number) {\n        let opacity = value;\n        if (typeof opacity !== \"number\") {\n            opacity = Number(opacity);\n        }\n        if (isNaN(opacity)) {\n            opacity = 255;\n        }\n        this._nameWindow.opacity = value;\n    }\n\n    updatePositionX() {\n        // 이름 윈도우가 없다면\n        if (!this._nameWindow) {\n            return;\n        }\n\n        const mx = this.x;\n        const w = this.width;\n        const nw = this._nameWindow.width;\n\n        const position = <NameWindowPositon>(\n            RS.MessageSystem.Params.namePositionTypeAtX\n        );\n\n        const nx = RS.MessageSystem.Params.nameWindowX;\n\n        let newX = mx + nx;\n\n        switch (position) {\n            case \"right\":\n                newX = mx + w - nw - nx;\n                break;\n            case \"center\":\n                newX = mx + w / 2 - nw / 2 - nx;\n                break;\n            case \"left\":\n                newX = mx + nx;\n                break;\n            case \"opacity0\":\n                this.setOpacity(0);\n                break;\n            case \"defaultOpacity\":\n                this.setOpacity(RS.MessageSystem.Params.defaultOpacity);\n                break;\n            case \"auto\":\n                newX = this.x + this.newLineX() + nx;\n                break;\n        }\n\n        this._nameWindow.x = newX;\n    }\n\n    updatePositionY() {\n        const ox = RS.MessageSystem.Params.windowOffset.x;\n        const oy = RS.MessageSystem.Params.windowOffset.y;\n        const positionType = $gameMessage.positionType();\n        const ballonOwnerType = $gameMessage.getBalloon();\n\n        this.updatePositionX();\n\n        // 메시지 윈도우가 상단이고, 말풍선 모드가 아니라면\n        if (positionType === 0 && ballonOwnerType === -2) {\n            // 최상단의 위치\n            const topY = 0;\n\n            this._nameWindow.y = topY + oy;\n\n            // 이름 윈도우가 열렸는 지 여부에 따라 메시지 윈도우의 Y 좌표를 설정합니다.\n            this.y = this._nameWindow.isOpen()\n                ? topY +\n                  this._nameWindow.height +\n                  RS.MessageSystem.Params.nameWindowY +\n                  oy\n                : topY + oy;\n        } else {\n            this._nameWindow.y =\n                this.y -\n                this._nameWindow.height -\n                RS.MessageSystem.Params.nameWindowY;\n        }\n    }\n}\n","import { EventEmitter } from \"./EventEmitter\";\n\nexport type ComponentProp = {\n    messageWindow: Window_Message;\n    [key: string]: any;\n};\n\n/**\n * @class Component\n * @description\n * 컴포넌트를 구현하기 위한 클래스입니다.\n */\nexport class Component extends EventEmitter {\n    public name?: string;\n    private props?: ComponentProp;\n\n    constructor(props: ComponentProp) {\n        super();\n        this.init(props);\n    }\n\n    init(props: ComponentProp) {\n        this.props = props;\n\n        this.on(\"ready\", (props: ComponentProp) => this.onReady(props));\n        this.on(\"mounted\", (props: ComponentProp) => this.mounted(props));\n        this.on(\"destroy\", (props: ComponentProp) => this.onDestroy());\n    }\n\n    ready() {\n        this.emit(\"ready\", this.props);\n    }\n\n    destroy() {\n        this.emit(\"destroy\", this.props);\n    }\n\n    execute() {\n        this.emit(\"mounted\", this.props);\n    }\n\n    onReady(props: ComponentProp) {}\n    onDestroy() {}\n    mounted(props: ComponentProp) {}\n}\n","interface DataLinkSet {\n    callbackFunction: Function;\n    active: boolean;\n}\n\n/**\n * @class ComponentExecutor\n * @author biud436\n * @description\n * ComponentExecutor는 컴포넌트를 샌드박스 환경에서 안전하게 실행합니다.\n * 샌드박스 환경이라는 것은 주요 메서드가 외부와 차단되어, 예외 처리를 통하여 각종 오류를 캐치할 수 있게 합니다.\n */\nexport default class ComponentExecutor {\n    public static INSTANCE: ComponentExecutor;\n    private _components: Record<string, DataLinkSet> = {};\n\n    public static getInstance(): ComponentExecutor {\n        if (!ComponentExecutor.INSTANCE) {\n            ComponentExecutor.INSTANCE = new ComponentExecutor();\n        }\n        return ComponentExecutor.INSTANCE;\n    }\n\n    public constructor() {}\n\n    public add(name: string, func: Function): ComponentExecutor {\n        if (name === \"\") {\n            let startChar = 97; // a\n            let endChar = 122; // z\n            let len = 7; // length of random string\n\n            for (let i = 0; i < len; i++) {\n                name += String.fromCharCode(\n                    Math.floor(Math.random() * (endChar - startChar)) +\n                        startChar\n                );\n            }\n        }\n\n        this._components[name] = <DataLinkSet>{\n            callbackFunction: func,\n            active: false,\n        };\n\n        return this;\n    }\n\n    public wrap(name: string, func: Function): ComponentExecutor {\n        return this.add(name, func);\n    }\n\n    public get(name: string): Function {\n        const prop = this._components[name];\n\n        return prop.callbackFunction;\n    }\n\n    public active(name: string): ComponentExecutor {\n        const prop = this._components[name];\n\n        prop.active = true;\n\n        return this;\n    }\n\n    public deactive(name: string): ComponentExecutor {\n        const prop = this._components[name];\n\n        prop.active = false;\n\n        return this;\n    }\n\n    public ready(name: string): ComponentExecutor {\n        return this.active(name);\n    }\n\n    public executeAll() {\n        try {\n            for (const key in this._components) {\n                const prop = this._components[key];\n\n                if (prop.active) {\n                    const currentCallback = this.get(key);\n\n                    if (currentCallback instanceof Function) {\n                        currentCallback();\n                    }\n                }\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n}\n","import { Rectangle } from \"pixi.js\";\nimport { BalloonWindowTransformComponent } from \"../components/BalloonWindowTransformComponent\";\nimport { BaseComponent } from \"../components/BaseComponent\";\nimport { Component } from \"./Component\";\nimport { NameWindowPositionComponent } from \"../components/NameWindowPositionComponent\";\n\ntype BaseComponentName =\n    | \"NameWindowPositionComponent\"\n    | \"BalloonWindowTransformComponent\";\n\ninterface Class<T> {\n    new (...args: any[]): T;\n}\n\n/**\n *\n */\n// type InjectFunctionWithInfer = <\n//     R = InstanceType<new (rect: Rectangle) => Window_Message>\n// >(\n//     messageWindow: R\n// ) => InstanceType<new (messageWindow: R) => Component>;\ntype InjectFunctionWithInfer = <\n    R = InstanceType<new (rect: Rectangle) => Window_Message>\n>(\n    messageWindow: R\n) => BaseComponent;\n\n/**\n * @function getComponentValue\n * @param item\n * @param key\n * @returns\n */\nfunction getComponentValue<T, K extends keyof T>(item: T, key: K): T[K] {\n    return item[key];\n}\n\n/**\n * @static\n * @class DependencyInjector\n * @description\n * This class allows you to inject components that needs to execute a method that has a certain dependency in the RPG Maker MZ.\n * 또한 해당 컴포넌트를 안전한 샌드박스 환경에서 실행시키기 위해 사용됩니다.\n * 샌드박스 환경이라함은 MZ에서도 오류 없이 안전하게 동작한다는 것을 의미합니다.\n */\nexport class DependencyInjector {\n    public static COMPONENTS?: [\n        BalloonWindowTransformComponent,\n        NameWindowPositionComponent\n    ];\n\n    public static _components: { [key: string]: Component } = {};\n    private static _isDirty: Boolean = false;\n\n    private static _messageWindow?: Window_Message | undefined;\n\n    public static injectMessageWindow(messageWindow: Window_Message) {\n        // 주입할 메시지 윈도우 클래스의 인스턴스를 가져옵니다.\n        DependencyInjector._messageWindow = messageWindow;\n        DependencyInjector.inject(messageWindow);\n    }\n\n    public static ejectMessageWindow() {\n        if (DependencyInjector._isDirty) {\n            DependencyInjector._messageWindow = undefined;\n            DependencyInjector.COMPONENTS = undefined;\n            DependencyInjector._isDirty = false;\n        }\n    }\n\n    /**\n     * inject all components inside the sandbox environment.\n     *\n     * @param messageWindow Specify the message window.\n     * @returns void\n     */\n    private static inject(messageWindow: Window_Message): void {\n        if (DependencyInjector._isDirty) {\n            console.log(\"components are already injected\");\n            return;\n        }\n\n        // 컴포넌트에 메시지 윈도우를 주입합니다.\n        DependencyInjector.COMPONENTS = [\n            new BalloonWindowTransformComponent({ messageWindow }),\n            new NameWindowPositionComponent({ messageWindow }),\n        ];\n\n        DependencyInjector._isDirty = true;\n    }\n\n    /**\n     * get the component by name.\n     *\n     * @param name Specify the component name\n     * @returns Component\n     */\n    public static getComponent<R extends BaseComponentName>(\n        name: R\n    ):\n        | BalloonWindowTransformComponent\n        | NameWindowPositionComponent\n        | undefined {\n        const items = DependencyInjector.COMPONENTS!.filter((e) => {\n            return e instanceof DependencyInjector.getComponentClass(name);\n        });\n\n        return items.pop();\n    }\n\n    static getComponentClass(name: BaseComponentName): typeof BaseComponent {\n        switch (name) {\n            case \"BalloonWindowTransformComponent\":\n                return BalloonWindowTransformComponent;\n            case \"NameWindowPositionComponent\":\n                return NameWindowPositionComponent;\n            default:\n                return BaseComponent;\n        }\n    }\n\n    public static ready() {\n        if (DependencyInjector.COMPONENTS) {\n            DependencyInjector.COMPONENTS.forEach((component) => {\n                component.ready();\n            });\n        }\n    }\n}\n","// 함수 타입\ntype FunctionLike = Function;\n// 이벤트 키 타입\ntype EventKey = string;\n\n/**\n * 이벤트 리스터를 정의합니다.\n */\ntype VMEventListener = { [key: EventKey]: Function[] };\ntype EventNames = \"ready\" | \"mounted\" | \"destroy\";\n\n/**\n * @class EventEmitter\n * @description\n * 이벤트를 전달하기 위한 클래스입니다.\n */\nexport class EventEmitter {\n  constructor(private _listeners: VMEventListener = {}) {\n    this._listeners = {};\n  }\n\n  /**\n   * 호출할 이벤트를 등록합니다.\n   *\n   * @param eventName 호출할 이벤트 명\n   * @param func\n   * @returns\n   */\n  on(eventName: EventNames, func: FunctionLike) {\n    if (!this._listeners[eventName]) {\n      this._listeners[eventName] = [];\n    }\n\n    if (!func) {\n      return;\n    }\n\n    if (func instanceof Function) {\n      this._listeners[eventName].push(func);\n    }\n  }\n\n  /**\n   * 등록된 이벤트를 호출합니다.\n   *\n   * @param eventName 호출할 이벤트 명\n   * @param args\n   * @returns\n   */\n  emit(eventName: EventNames, ...args: any[]) {\n    if (!this._listeners[eventName]) {\n      return;\n    }\n\n    this._listeners[eventName].forEach((func) => {\n      if (!(func instanceof Function)) {\n        console.warn(\"호출된 이벤트 리스너가 함수가 아닙니다.\");\n        return;\n      }\n\n      func(...args);\n    });\n  }\n}\n","/***\n * 이것은 RPG Maker MV 호환성을 위해 존재하며 타입스크립트로 재작성되어야 합니다.\n */\nimport { Types } from \"../../types/parameters\";\n\ntype TextCodeKey =\n    | \"COLOR\"\n    | \"TEXT_SPEED\"\n    | \"OUTLINE_COLOR\"\n    | \"OUTLINE_WIDTH\"\n    | \"INDENT\"\n    | \"BOLD\"\n    | \"ITALIC\"\n    | \"NAME\"\n    | \"GRADIENT\"\n    | \"PARTY_MEMBER\"\n    | \"PLAYER\"\n    | \"VAR\"\n    | \"ICON\"\n    | \"INCREASE\"\n    | \"DECREASE\"\n    | \"GOLD\"\n    | \"BALLOON\"\n    | \"ALIGN\"\n    | \"NUM\"\n    | \"TEXT_SIZE\"\n    | \"TAB\"\n    | \"CARRIAGE_RETURN\"\n    | \"PLAY_SE\"\n    | \"SHOW_PICTURE\"\n    | \"HIDE_PICTURE\"\n    | \"ITEM\"\n    | \"WEAPON\"\n    | \"ARMOR\"\n    | \"CLASSES\"\n    | \"ENEMY\"\n    | \"STATE\"\n    | \"SKILL\"\n    | \"FACE\"\n    | \"FRIENDLY_TROOPS\"\n    | \"ENEMY_TROOPS\"\n    | \"WAIT_SEC_15\"\n    | \"WAIT_SEC_60\"\n    | \"START_PAUSE\"\n    | \"LINE_SHOW_FAST_LT\"\n    | \"LINE_SHOW_FAST_GT\"\n    | \"PAUSE_SKIP\"\n    | \"BOLD_START\"\n    | \"BOLD_END\"\n    | \"ITALIC_START\"\n    | \"ITALIC_END\"\n    | \"ALIGN_LEFT\"\n    | \"ALIGN_CENTER\"\n    | \"ALIGN_RIGHT\"\n    | \"BOLD_START_CV\"\n    | \"BOLD_END_CV\"\n    | \"ITALIC_START_CV\"\n    | \"ITALIC_END_CV\"\n    | \"ALIGN_CLEAR\"\n    | \"HIGHLIGHT_TEXT_COLOR\"\n    | \"FACE_DIRECTION\";\n\ninterface TextCodeEnum {\n    ENUM: Record<TextCodeKey, number>;\n}\n\ntype TextCode = Record<string, any> & TextCodeEnum;\n\nconst pluginParams = $plugins.filter((i) => {\n    return i.description.contains(\"<RS_MessageSystem>\");\n});\n\nconst pluginName = <Types.PluginName>(\n    (pluginParams.length > 0 && pluginParams[0].name)\n);\nconst parameters = <Types.PluginParameters>(\n    (pluginParams.length > 0 && pluginParams[0].parameters)\n);\n\nconst RS = <RS>{\n    MessageSystem: <IMessageSytem>{},\n};\n\nRS.MessageSystem.jsonParse = function (str: string) {\n    const retData = JSON.parse(str, (k, v) => {\n        try {\n            return RS.MessageSystem.jsonParse(v);\n        } catch (e) {\n            return v;\n        }\n    });\n\n    return retData;\n};\n\n/**\n * @method popParameter\n */\nRS.MessageSystem.popParameter = function (...args: any[]) {\n    const k = Object.keys(args);\n    let lastUsed = \"\";\n\n    while (k.length > 0) {\n        lastUsed = args[parseInt(<string>k.pop())];\n\n        // @ts-ignore\n        if (parameters[lastUsed]) return parameters[lastUsed];\n    }\n\n    return \"\";\n};\n\nRS.MessageSystem.Reg = {\n    Default: [],\n    Group: [],\n    Korean: [],\n    Chinese: [],\n    English: [],\n    Japanese: [],\n};\n\nenum MessageParams {\n    FACE_START_ORIGIN_X = 168,\n    NAME_WINDOW_WIDTH = 140,\n    NAME_WINDOW_ROWS = 1,\n    FONT_SIZE = 28,\n    STD_PADDING = 18,\n}\n\nRS.MessageSystem.Params = {\n    faceStartOriginX: MessageParams.FACE_START_ORIGIN_X,\n    nameWindowWidth: MessageParams.NAME_WINDOW_WIDTH,\n    nameWindowRows: MessageParams.NAME_WINDOW_ROWS,\n    FONT_SIZE: MessageParams.FONT_SIZE,\n    STD_PADDING: MessageParams.STD_PADDING,\n    isValidShakingChoice: false,\n    fontSize: Number(\n        RS.MessageSystem.popParameter(\"Font Size\", \"글꼴 크기\") || 28\n    ),\n    textSpeed: Number(\n        RS.MessageSystem.popParameter(\"Text Speed\", \"기본 텍스트 출력 속도\") ||\n            0\n    ),\n    minFontSize: Number(\n        RS.MessageSystem.popParameter(\"Text Min Size\", \"폰트 최소 크기\") || 24\n    ),\n    maxFontSize: Number(\n        RS.MessageSystem.popParameter(\"Text Max Size\", \"폰트 최대 크기\") || 96\n    ),\n    textStartX: Number(\n        RS.MessageSystem.popParameter(\"Text Start X\", \"텍스트 시작 X\")\n    ),\n    numVisibleRows: Number(\n        RS.MessageSystem.popParameter(\"numVisibleRows\", \"라인 갯수\") || 4\n    ),\n    gradientColor1: String(\n        RS.MessageSystem.popParameter(\n            \"gradientColor1\",\n            \"그레디언트 시작 색상\"\n        ) || \"#FFFFFF\"\n    ),\n    gradientColor2: String(\n        RS.MessageSystem.popParameter(\n            \"gradientColor2\",\n            \"그레디언트 중간 색상\"\n        ) || \"#F29661\"\n    ),\n    gradientColor3: String(\n        RS.MessageSystem.popParameter(\"gradientColor3\", \"그레디언트 끝 색상\") ||\n            \"#CC3D3D\"\n    ),\n    nameWindowX: Number(\n        RS.MessageSystem.popParameter(\"Name Window X\", \"이름 윈도우 X\") || 0\n    ),\n    nameWindowY: Number(\n        RS.MessageSystem.popParameter(\"Name Window Y\", \"이름 윈도우 Y\") || 0\n    ),\n    nameWindowStdPadding: Number(\n        RS.MessageSystem.popParameter(\n            \"Name Window Inner Padding\",\n            \"이름 윈도우 안쪽 여백\"\n        ) || 18\n    ),\n    namePositionTypeAtX:\n        RS.MessageSystem.popParameter(\n            \"Name Window Position\",\n            \"이름 윈도우 위치\"\n        ) || \"left\",\n    faceOX: Number(\n        RS.MessageSystem.popParameter(\"Big Face OX\", \"큰 페이스칩 OX\") || 0\n    ),\n    faceOY: Number(\n        RS.MessageSystem.popParameter(\"Big Face OY\", \"큰 페이스칩 OY\") || 0\n    ),\n    faceSide: Boolean(\n        RS.MessageSystem.popParameter(\n            \"Show Big Face Back\",\n            \"대화창 뒤에 얼굴 표시\"\n        ) === \"true\" || false\n    ),\n    WIDTH: MessageParams.FONT_SIZE * 6 + MessageParams.STD_PADDING,\n    HEIGHT: MessageParams.FONT_SIZE + MessageParams.STD_PADDING / 2,\n    TabSize: Number(RS.MessageSystem.popParameter(\"Tab Size\", \"탭 크기\")),\n    backOpacity: Number(\n        RS.MessageSystem.popParameter(\"back Opacity\", \"배경 그림의 투명도\")\n    ),\n    translucentOpacity: Number(\n        RS.MessageSystem.popParameter(\"translucent Opacity\", \"반투명도\")\n    ),\n    defaultOpacity: Number(\n        RS.MessageSystem.popParameter(\"default Opacity\", \"기본 투명도\")\n    ),\n    contentsOpacity: Number(\n        RS.MessageSystem.popParameter(\"contents Opacity\", \"내용의 투명도\")\n    ),\n    defaultOutlineWidth: Number(\n        RS.MessageSystem.popParameter(\"default outline width\", \"테두리 크기\")\n    ),\n    defaultOutlineColor:\n        RS.MessageSystem.popParameter(\"default outline Color\", \"테두리 색상\") ||\n        \"white\",\n    fonts: {\n        default: \"rmmz-mainfont\",\n    },\n    isTempSpriteContainerVisibility: false,\n    lineHeight: 36,\n    windowOffset: new Point(-4, -4),\n    fontSmoothingEnabled: true,\n    customFont: Boolean(\n        RS.MessageSystem.popParameter(\n            \"Using Custom Font\",\n            \"사용자 지정 폰트 사용 여부\"\n        ) === \"true\"\n    ),\n    customFontName: String(\n        RS.MessageSystem.popParameter(\n            \"Custom Font Name\",\n            \"사용자 지정 폰트명\"\n        ) || \"GameFont\"\n    ),\n    customFontSrc: String(\n        RS.MessageSystem.popParameter(\n            \"Custom Font Src\",\n            \"사용자 지정 폰트 경로\"\n        ) || \"fonts/mplus-1m-regular.ttf\"\n    ),\n    windowskin:\n        RS.MessageSystem.popParameter(\n            \"Default Windowskin\",\n            \"기본 윈도우스킨\"\n        ) || \"Window\",\n    windowskinForNameWindow:\n        RS.MessageSystem.popParameter(\"Name Windowskin\", \"이름 윈도우스킨\") ||\n        \"Window\",\n    choiceWindowStyle: String(\n        RS.MessageSystem.popParameter(\"Choice Style\", \"선택지 스타일\") ||\n            \"default\"\n    ),\n    defaultChoicePostion: parameters[\"Default Choice Position\"] || \"right\",\n    exTextColors: RS.MessageSystem.jsonParse(\n        RS.MessageSystem.popParameter(\"Text Color\", \"텍스트 색상\")\n    ),\n    isPlayTextSound: Boolean(\n        RS.MessageSystem.popParameter(\n            \"Text Sound ON/OFF\",\n            \"텍스트 효과음 재생 여부\"\n        ) === \"true\"\n    ),\n    pathTextSound: String(\n        RS.MessageSystem.popParameter(\"Text Sound\", \"텍스트 효과음\") ||\n            \"Cursor1.ogg\"\n    ),\n    textSoundEval1: RS.MessageSystem.jsonParse(\n        RS.MessageSystem.popParameter(\n            \"Text Sound Execution Condition\",\n            \"텍스트 효과음 실행 조건\"\n        ) || \"Math.randomInt(100) < 45\"\n    ),\n    textSoundEval2: RS.MessageSystem.jsonParse(\n        RS.MessageSystem.popParameter(\n            \"Text Sound Volume\",\n            \"텍스트 효과음 볼륨\"\n        ) || \"(0.4 + (RS.MessageSystem.randomNormal(0.8)[0])).clamp(0.0, 0.8)\"\n    ),\n    textSoundInterval: parseInt(\n        RS.MessageSystem.popParameter(\n            \"Text Sound Interval\",\n            \"텍스트 사운드 재생 간격\"\n        )\n    ),\n    textSoundPoolSize: parseInt(\n        RS.MessageSystem.popParameter(\n            \"텍스트 사운드 풀 크기\",\n            \"Text Sound Pool Size\"\n        ) || 6\n    ),\n    langCode:\n        RS.MessageSystem.popParameter(\"언어 코드\", \"Language Code\") || \"ko\",\n    preloadWindowskins: JSON.parse(parameters[\"preload windowskin\"] || \"[]\"),\n    isParagraphMinifier: Boolean(parameters[\"Paragraph Minifier\"] === \"true\"),\n    gradientStyle: parameters[\"Gradient Style\"],\n    faceOpacity: parseInt(parameters[\"face Opacity\"] || 21),\n    faceDirection: parseInt(parameters[\"face Direction\"] || 0),\n    DEBUG: (() => {\n        return Utils.isNwjs() && Utils.isOptionValid(\"test\");\n    })(),\n};\n\n(() => {\n    const systemFonts: Types.SystemFonts = RS.MessageSystem.jsonParse(\n        parameters[\"systemFont\"]\n    );\n    if (!RS.MessageSystem.Params.fonts) return;\n\n    // ! 여기서부터 변환 시작해야함\n    systemFonts.settings.forEach((i) => {\n        const params = <{ [key: string]: any } | any>{};\n        params[i.languageCode] = i.fontName;\n        Object.assign(RS.MessageSystem.Params.fonts as {}, params);\n    });\n})();\n\n//============================================================================\n// Lazy Initialize Parameters (느린 초기화)\n//============================================================================\n\nvar alias_Game_Temp_initialize = Game_Temp.prototype.initialize;\nGame_Temp.prototype.initialize = function () {\n    alias_Game_Temp_initialize.call(this);\n    RS.MessageSystem.Params.windowWidth =\n        eval(parameters[\"Window Width\"]) || Graphics.boxWidth;\n};\n\n//============================================================================\n// Multiple Language supports\n//============================================================================\n\nRS.MessageSystem.Reg.KoreanEscapeCode =\n    /^[\\$\\.\\|\\^!><\\{\\}\\\\]|^[a-zA-Z가-힣]+[!]*/i;\nRS.MessageSystem.Reg.ChineseEscapeCode =\n    /^[\\$\\.\\|\\^!><\\{\\}\\\\]|^[a-zA-Z一-鼣]+[!]*/i;\nRS.MessageSystem.Reg.EnglishEscapeCode = /^[\\$\\.\\|\\^!><\\{\\}\\\\]|^[A-Z]+[!]*/i;\nRS.MessageSystem.Reg.JapaneseEscapeCode =\n    /^[\\$\\.\\|\\^!><\\{\\}\\\\]|^[A-Z\\u3040-\\u309F\\u30A0-\\u30FF\\u3300-\\u33FF\\u4E00-\\u9FFF\\uFF00-\\uFFEF]+[!]*/i;\nRS.MessageSystem.Reg.defaultEscapeCode =\n    /^[\\$\\.\\|\\^!><\\{\\}\\\\]|^[A-Z가-힣]+[!]*/i;\n\nRS.MessageSystem.TextCodes = (function () {\n    const rowData = RS.MessageSystem.popParameter(\"Text Code\", \"텍스트 코드\");\n    const data = JSON.parse(rowData);\n    const retData = <TextCode>{};\n\n    retData.Korean = [undefined].concat(JSON.parse(data.Korean));\n    retData.Chinese = [undefined].concat(JSON.parse(data.Chinese));\n    retData.English = [undefined].concat(JSON.parse(data.English));\n    retData.Japanese = [undefined].concat(JSON.parse(data.Japanese));\n\n    return retData;\n})();\n\nRS.MessageSystem.TextCodes.Main = [];\n\nRS.MessageSystem.TextCodes.ENUM = {\n    COLOR: 1,\n    TEXT_SPEED: 2,\n    OUTLINE_COLOR: 3,\n    OUTLINE_WIDTH: 4,\n    INDENT: 5,\n    BOLD: 6,\n    ITALIC: 7,\n    NAME: 8,\n    GRADIENT: 9,\n    PARTY_MEMBER: 10,\n    PLAYER: 11,\n    VAR: 12,\n    ICON: 13,\n    INCREASE: 14,\n    DECREASE: 15,\n    GOLD: 16,\n    BALLOON: 17,\n    ALIGN: 18,\n    NUM: 19,\n    TEXT_SIZE: 20,\n    TAB: 21,\n    CARRIAGE_RETURN: 22,\n    PLAY_SE: 23,\n    SHOW_PICTURE: 24,\n    HIDE_PICTURE: 25,\n    ITEM: 26,\n    WEAPON: 27,\n    ARMOR: 28,\n    CLASSES: 29,\n    ENEMY: 30,\n    STATE: 31,\n    SKILL: 32,\n    FACE: 33,\n    FRIENDLY_TROOPS: 34, // 여긴 2018.01.14에 추가됨\n    ENEMY_TROOPS: 35,\n    WAIT_SEC_15: 36, // .\n    WAIT_SEC_60: 37, // |\n    START_PAUSE: 38, // !\n    LINE_SHOW_FAST_LT: 39, // <\n    LINE_SHOW_FAST_GT: 40, // >\n    PAUSE_SKIP: 41, // ^\n    BOLD_START: 42, // <B>\n    BOLD_END: 43, // </B>\n    ITALIC_START: 44,\n    ITALIC_END: 45,\n    ALIGN_LEFT: 46,\n    ALIGN_CENTER: 47,\n    ALIGN_RIGHT: 48,\n    BOLD_START_CV: 49,\n    BOLD_END_CV: 50,\n    ITALIC_START_CV: 51,\n    ITALIC_END_CV: 52,\n    ALIGN_CLEAR: 53, // AEND\n    HIGHLIGHT_TEXT_COLOR: 54,\n    FACE_DIRECTION: 55,\n};\n\n/**\n * 주어진 ID 값으로 텍스트 코드를 현지화하여 반환합니다.\n * @param {Number} idx\n */\nRS.MessageSystem.getTextCode = function (idx: number) {\n    const langCode = RS.MessageSystem.Params.langCode;\n\n    if (langCode.match(/ko/)) {\n        return RS.MessageSystem.TextCodes[\"Korean\"][idx];\n    }\n    if (langCode.match(/zh/)) {\n        return RS.MessageSystem.TextCodes[\"Chinese\"][idx];\n    }\n    if (langCode.match(/en/)) {\n        return RS.MessageSystem.TextCodes[\"English\"][idx];\n    }\n    if (langCode.match(/ja/)) {\n        return RS.MessageSystem.TextCodes[\"Japanese\"][idx];\n    }\n    return RS.MessageSystem.TextCodes[\"English\"][idx];\n};\n\n/**\n * 노트 태그를 읽습니다.\n * @memberof RS.MessageSystem\n * @param {Number} eventId\n * @return {Object} meta\n */\nRS.MessageSystem.getEventComments = function (eventId: number, index: number) {\n    let data = <Record<any, any>>{\n        note: \"\",\n        meta: {},\n    };\n    try {\n        // 리스트를 가져옵니다.\n        let list = $gameMap.event(eventId).list();\n\n        // 바로 이전 인덱스에 노트 태그가 있었는 지 확인합니다.\n        if (index < 0) index = 0;\n\n        // 부모 이벤트 없이 호출되는 공통 이벤트가 있는 지 확인합니다.\n        if (eventId <= 0) {\n            var commonEvent = $gameTemp.reservedCommonEvent();\n            if (commonEvent) {\n                list = commonEvent.list;\n                // 공통 이벤트는 한 번 설치된 후 클리어되므로 목록을 두 번 읽을 순 없으므로 예외 처리\n                if (!list) {\n                    return data;\n                }\n            }\n        }\n\n        let param = list[index];\n\n        // 코멘트를 읽어옵니다.\n        while (param && [108, 408].contains(param.code)) {\n            data.note += param.parameters[0] + \"\\r\\n\";\n            index--;\n            param = list[index];\n        }\n\n        if (param && param.code === 108) {\n            data.note += param.parameters[0] + \"\\r\\n\";\n\n            index--;\n            param = list[index];\n\n            while (param.code === 408) {\n                data.note += param.parameters[0] + \"\\r\\n\";\n                index--;\n                param = list[index];\n            }\n\n            if (param.code === 108) {\n                data.note += param.parameters[0] + \"\\r\\n\";\n            }\n        }\n\n        // 노트 태그를 추출합니다 (DataManager.extractMetadata의 변형입니다)\n        const re = /<([^<>:]+)(:?)([^>]*)>/g;\n        data.meta = {};\n        for (;;) {\n            const match = re.exec(data.note);\n            if (match) {\n                if (match[2] === \":\") {\n                    data.meta[match[1].trim()] = match[3];\n                } else {\n                    data.meta[match[1].trim()] = true;\n                }\n            } else {\n                break;\n            }\n        }\n    } catch (e) {\n        // 리스트를 읽지 못할 경우 try-catch 문에 의해 예외 처리가 됩니다.\n        return {\n            note: \"\",\n            meta: {},\n        };\n    }\n    return data.meta;\n};\n\n(() => {\n    \"use strict\";\n    var regData = [\"Korean\", \"English\", \"Chinese\", \"Japanese\"];\n    regData.forEach(function (e, i, a) {\n        var tcGroup = RS.MessageSystem.TextCodes[e];\n        tcGroup = tcGroup.map((e: any, i: number, a: any[]) => {\n            if (e === undefined) return;\n            var data = [];\n            var ret = \"\";\n            for (var str of e) {\n                if (/[a-zA-Z]/i) {\n                    data.push(str);\n                    continue;\n                }\n                var text = str.charCodeAt().toString(16);\n                data.push(\"\\\\u\" + \"{\" + text + \"}\");\n            }\n            ret = data.join(\"\");\n            return ret;\n        });\n        RS.MessageSystem.Reg[e][0] = undefined;\n        RS.MessageSystem.Reg[e][1] = new RegExp(\n            `(?:\\x1bC|\\x1b${tcGroup[1]})\\\\[(.+?)\\\\]`,\n            \"gi\"\n        ); // 색\n        RS.MessageSystem.Reg[e][2] = new RegExp(\n            `\\x1b${tcGroup[2]}\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 속도\n        RS.MessageSystem.Reg[e][3] = new RegExp(\n            `\\x1b${tcGroup[3]}\\\\[(.+?)\\\\]`,\n            \"gi\"\n        ); // 테두리색\n        RS.MessageSystem.Reg[e][4] = new RegExp(\n            `\\x1b${tcGroup[4]}\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 테두리크기\n        RS.MessageSystem.Reg[e][5] = new RegExp(\n            `\\x1b${tcGroup[5]}\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 들여쓰기\n        RS.MessageSystem.Reg[e][6] = new RegExp(`\\x1b${tcGroup[6]}`, \"gi\"); // 굵게!\n        RS.MessageSystem.Reg[e][7] = new RegExp(`\\x1b${tcGroup[7]}`, \"gi\"); // 이탤릭!\n        RS.MessageSystem.Reg[e][8] = new RegExp(\n            `\\x1b${tcGroup[8]}\\\\<(.+?)\\\\>`,\n            \"gi\"\n        ); // 이름\n        RS.MessageSystem.Reg[e][9] = new RegExp(\n            `\\x1b${tcGroup[9]}\\\\<(.+)\\\\>`,\n            \"gi\"\n        ); // 그레디언트\n        RS.MessageSystem.Reg[e][10] = new RegExp(\n            `(?:\\x1bP|\\x1b${tcGroup[10]})\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 파티원\n        RS.MessageSystem.Reg[e][11] = new RegExp(\n            `(?:\\x1bN|\\x1b${tcGroup[11]})\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 주인공\n        RS.MessageSystem.Reg[e][12] = new RegExp(\n            `(?:\\x1bV|\\x1b${tcGroup[12]})\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 변수\n        RS.MessageSystem.Reg[e][13] = new RegExp(\n            `(?:\\x1bI|\\x1b${tcGroup[13]})\\\\[(\\\\d+)\\\\]`,\n            \"g\"\n        ); // 아이콘\n        RS.MessageSystem.Reg[e][14] = new RegExp(\n            `(?:\\x1b{|\\x1b${tcGroup[14]})`,\n            \"gi\"\n        ); // 확대!\n        RS.MessageSystem.Reg[e][15] = new RegExp(\n            `(?:\\x1b}|\\x1b${tcGroup[15]})`,\n            \"gi\"\n        ); // 축소!\n        RS.MessageSystem.Reg[e][16] = new RegExp(\n            `(?:\\x1bG|\\x1b${tcGroup[16]})`,\n            \"gi\"\n        ); // 골드\n        RS.MessageSystem.Reg[e][17] = new RegExp(\n            `\\x1b${tcGroup[17]}\\\\[(.*?)\\\\]`,\n            \"gi\"\n        ); // 말풍선\n        RS.MessageSystem.Reg[e][18] = new RegExp(\n            `\\x1b${tcGroup[18]}\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 정렬자\n        RS.MessageSystem.Reg[e][19] = new RegExp(\n            `\\x1b${tcGroup[19]}\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 숫자\n        RS.MessageSystem.Reg[e][20] = new RegExp(\n            `\\x1b${tcGroup[20]}\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 크기\n        RS.MessageSystem.Reg[e][21] = new RegExp(`\\x1b${tcGroup[21]}`, \"gi\"); // r\n        RS.MessageSystem.Reg[e][22] = new RegExp(`\\x1b${tcGroup[22]}`, \"gi\"); // t\n        RS.MessageSystem.Reg[e][23] = new RegExp(\n            `\\x1b${tcGroup[23]}\\\\<(.+?)\\\\>`,\n            \"gi\"\n        ); // 효과음\n        RS.MessageSystem.Reg[e][24] = new RegExp(\n            `\\x1b${tcGroup[24]}\\\\<(.+?)\\\\>`,\n            \"gi\"\n        ); // 그림 표시\n        RS.MessageSystem.Reg[e][25] = new RegExp(\n            `\\x1b${tcGroup[25]}\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 그림 제거\n        RS.MessageSystem.Reg[e][26] = new RegExp(\n            `(?:\\x1b${tcGroup[26]})\\\\[(\\\\d+)\\\\]`,\n            \"g\"\n        ); // 아이템\n        RS.MessageSystem.Reg[e][27] = new RegExp(\n            `(?:\\x1b${tcGroup[27]})\\\\[(\\\\d+)\\\\]`,\n            \"g\"\n        ); // 무기구\n        RS.MessageSystem.Reg[e][28] = new RegExp(\n            `(?:\\x1b${tcGroup[28]})\\\\[(\\\\d+)\\\\]`,\n            \"g\"\n        ); // 방어구\n        RS.MessageSystem.Reg[e][29] = new RegExp(\n            `(?:\\x1b${tcGroup[29]})\\\\[(\\\\d+)\\\\]`,\n            \"g\"\n        ); // 직업\n        RS.MessageSystem.Reg[e][30] = new RegExp(\n            `(?:\\x1b${tcGroup[30]})\\\\[(\\\\d+)\\\\]`,\n            \"g\"\n        ); // 적군\n        RS.MessageSystem.Reg[e][31] = new RegExp(\n            `(?:\\x1b${tcGroup[31]})\\\\[(\\\\d+)\\\\]`,\n            \"g\"\n        ); // 상태\n        RS.MessageSystem.Reg[e][32] = new RegExp(\n            `(?:\\x1b${tcGroup[32]})\\\\[(\\\\d+)\\\\]`,\n            \"g\"\n        ); // 스킬\n        RS.MessageSystem.Reg[e][33] = new RegExp(\n            `\\x1b${tcGroup[33]}\\\\<(.*)\\\\>`,\n            \"gi\"\n        ); // 얼굴\n        RS.MessageSystem.Reg[e][34] = new RegExp(\n            `(?:\\x1b${tcGroup[34]})\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 아군\n        RS.MessageSystem.Reg[e][35] = new RegExp(\n            `(?:\\x1b${tcGroup[35]})\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // 적군\n\n        RS.MessageSystem.Reg[e][36] = new RegExp(`\\x1b${tcGroup[36]}`, \"gi\"); // [.]\n        RS.MessageSystem.Reg[e][37] = new RegExp(`\\x1b${tcGroup[37]}`, \"gi\"); // [|]\n        RS.MessageSystem.Reg[e][38] = new RegExp(`\\x1b${tcGroup[38]}`, \"gi\"); // [!]\n        RS.MessageSystem.Reg[e][39] = new RegExp(`\\x1b${tcGroup[39]}`, \"gi\"); // [<]\n        RS.MessageSystem.Reg[e][40] = new RegExp(`\\x1b${tcGroup[40]}`, \"gi\"); // [>]\n        RS.MessageSystem.Reg[e][41] = new RegExp(`\\x1b${tcGroup[41]}`, \"gi\"); // [\\^]\n\n        RS.MessageSystem.Reg[e][42] = new RegExp(`\\x1b${tcGroup[42]}`, \"gi\"); // AS굵게!\n        RS.MessageSystem.Reg[e][43] = new RegExp(`\\x1b${tcGroup[43]}`, \"gi\"); // AE굵게!\n        RS.MessageSystem.Reg[e][44] = new RegExp(`\\x1b${tcGroup[44]}`, \"gi\"); // AS이탤릭!\n        RS.MessageSystem.Reg[e][45] = new RegExp(`\\x1b${tcGroup[45]}`, \"gi\"); // AE이탤릭!\n\n        RS.MessageSystem.Reg[e][46] = new RegExp(`(?:<${tcGroup[46]}>)`, \"gi\"); // LEFT\n        RS.MessageSystem.Reg[e][47] = new RegExp(`(?:<${tcGroup[47]}>)`, \"gi\"); // CENTER\n        RS.MessageSystem.Reg[e][48] = new RegExp(`(?:<${tcGroup[48]}>)`, \"gi\"); // RIGHT\n\n        RS.MessageSystem.Reg[e][49] = new RegExp(\n            `(?:<[${tcGroup[49]}]>)`,\n            \"gi\"\n        ); // B\n        RS.MessageSystem.Reg[e][50] = new RegExp(\n            `(?:<\\/[${tcGroup[50]}]>)`,\n            \"gi\"\n        ); // B\n        RS.MessageSystem.Reg[e][51] = new RegExp(\n            `(?:<[${tcGroup[51]}]>)`,\n            \"gi\"\n        ); // I\n        RS.MessageSystem.Reg[e][52] = new RegExp(\n            `(?:<\\/[${tcGroup[52]}]>)`,\n            \"gi\"\n        ); // I\n        RS.MessageSystem.Reg[e][53] = new RegExp(`\\x1b${tcGroup[53]}`, \"gi\"); // AEND : ALIGN_CLEAR\n        RS.MessageSystem.Reg[e][54] = new RegExp(\n            `\\x1b${tcGroup[54]}\\\\[(.*)\\\\]`,\n            \"gi\"\n        ); // \\배경색[색상] \\HC[색상]\n        RS.MessageSystem.Reg[e][55] = new RegExp(\n            `\\x1b${tcGroup[55]}\\\\[(\\\\d+)\\\\]`,\n            \"gi\"\n        ); // \\FD\n    });\n})();\n\nRS.MessageSystem.initSystem = function () {\n    var type = RS.MessageSystem.Params.langCode;\n    var ret = false;\n    if (type.match(/ko/)) {\n        RS.MessageSystem.Reg.Group = RS.MessageSystem.Reg.Korean;\n        RS.MessageSystem.Reg.defaultEscapeCode =\n            RS.MessageSystem.Reg.KoreanEscapeCode;\n        RS.MessageSystem.TextCodes.Main = RS.MessageSystem.TextCodes.Korean;\n        ret = true;\n    }\n    if (type.match(/zh/)) {\n        RS.MessageSystem.Reg.Group = RS.MessageSystem.Reg.Chinese;\n        RS.MessageSystem.Reg.defaultEscapeCode =\n            RS.MessageSystem.Reg.ChineseEscapeCode;\n        RS.MessageSystem.TextCodes.Main = RS.MessageSystem.TextCodes.Chinese;\n        ret = true;\n    }\n    if (type.match(/en/)) {\n        RS.MessageSystem.Reg.Group = RS.MessageSystem.Reg.English;\n        RS.MessageSystem.Reg.defaultEscapeCode =\n            RS.MessageSystem.Reg.EnglishEscapeCode;\n        RS.MessageSystem.TextCodes.Main = RS.MessageSystem.TextCodes.English;\n        ret = true;\n    }\n    if (type.match(/ja/)) {\n        RS.MessageSystem.Reg.Group = RS.MessageSystem.Reg.Japanese;\n        RS.MessageSystem.Reg.defaultEscapeCode =\n            RS.MessageSystem.Reg.JapaneseEscapeCode;\n        RS.MessageSystem.TextCodes.Main = RS.MessageSystem.TextCodes.Japanese;\n        ret = true;\n    }\n    if (ret === false) {\n        RS.MessageSystem.Reg.Group = RS.MessageSystem.Reg.English;\n        RS.MessageSystem.Reg.defaultEscapeCode =\n            RS.MessageSystem.Reg.EnglishEscapeCode;\n        RS.MessageSystem.TextCodes.Main = RS.MessageSystem.TextCodes.English;\n    }\n};\n\n//=============================================================================\n// Color\n//=============================================================================\n\ninterface IColor {\n    getColor(c: number): string;\n    baseColor: string;\n    getBaseColor(): string;\n    getUserCustomColor(str: string): string;\n    gmColor(str: string): string;\n}\n\nexport const Color = <IColor>{};\n\nColor.getColor = function (n: number) {\n    var r = n & 255;\n    var g = (n >> 8) & 255;\n    var b = (n >> 16) & 255;\n    var result = `rgba(${r},${g},${b},1)`;\n    return result;\n};\n\nColor.baseColor = Color.getColor(16777215);\n\nColor.getBaseColor = function () {\n    return Color.baseColor;\n};\n\nColor.getUserCustomColor = function (str) {\n    \"use strict\";\n\n    var obj: any[] = RS.MessageSystem.Params.exTextColors;\n    var ret = str;\n\n    if (!(typeof obj[0] === \"object\")) return ret;\n    if (!obj[0].hasOwnProperty(\"Color Name\")) return ret;\n\n    obj.forEach((e: any, i: number, arr: any[]) => {\n        if (e[\"Color Name\"] === str) {\n            var r = parseInt(e[\"Red\"]) || 0;\n            var g = parseInt(e[\"Green\"]) || 0;\n            var b = parseInt(e[\"Blue\"]) || 0;\n            var a = parseFloat(e[\"Alpha\"]) || 1.0;\n\n            ret = `rgba(${r},${g},${b},${a})`;\n        }\n    });\n\n    return ret;\n};\n\nconst KOREAN_COLORS: Record<string, string> = {\n    청록: \"rgba(0,255,255,1)\",\n    청록색: \"rgba(0,255,255,1)\",\n    c_aqua: \"rgba(0,255,255,1)\",\n    검은색: \"rgba(0,0,0,1)\",\n    검정: \"rgba(0,0,0,1)\",\n    c_black: \"rgba(0,0,0,1)\",\n    파란색: \"rgba(0,0,255,1)\",\n    파랑: \"rgba(0,0,255,1)\",\n    c_blue: \"rgba(0,0,255,1)\",\n    짙은회색: \"rgba(64,64,64,1)\",\n    c_dkgray: \"rgba(64,64,64,1)\",\n    자홍색: \"rgba(255,0,255,1)\",\n    자홍: \"rgba(255,0,255,1)\",\n    c_fuchsia: \"rgba(255,0,255,1)\",\n    회색: \"rgba(128,128,128,1)\",\n    c_gray: \"rgba(128,128,128,1)\",\n    녹색: \"rgba(0,128,0,1)\",\n    c_green: \"rgba(0,128,0,1)\",\n    밝은녹색: \"rgba(0,255,0,1)\",\n    라임: \"rgba(0,255,0,1)\",\n    c_lime: \"rgba(0,255,0,1)\",\n    밝은회색: \"rgba(192,192,192,1)\",\n    c_ltgray: \"rgba(192,192,192,1)\",\n    밤색: \"rgba(128,0,0,1)\",\n    마룬: \"rgba(128,0,0,1)\",\n    c_maroon: \"rgba(128,0,0,1)\",\n    감청색: \"rgba(0,0,128,1)\",\n    네이비: \"rgba(0,0,128,1)\",\n    c_navy: \"rgba(0,0,128,1)\",\n    황록색: \"rgba(128,128,0,1)\",\n    올리브: \"rgba(128,128,0,1)\",\n    c_olive: \"rgba(128,128,0,1)\",\n    주황색: \"rgba(255,160,64,1)\",\n    주황: \"rgba(255,160,64,1)\",\n    오렌지: \"rgba(255,160,64,1)\",\n    c_orange: \"rgba(255,160,64,1)\",\n    보라색: \"rgba(128,0,128,1)\",\n    보라: \"rgba(128,0,128,1)\",\n    c_purple: \"rgba(128,0,128,1)\",\n    빨간색: \"rgba(255,0,0,1)\",\n    빨강: \"rgba(255,0,0,1)\",\n    c_red: \"rgba(255,0,0,1)\",\n    은색: \"rgba(192,192,192,1)\",\n    은: \"rgba(192,192,192,1)\",\n    c_silver: \"rgba(192,192,192,1)\",\n    민트색: \"rgba(0,128,128,1)\",\n    c_teal: \"rgba(0,128,128,1)\",\n    흰색: \"rgba(255,255,255,1)\",\n    흰: \"rgba(255,255,255,1)\",\n    c_white: \"rgba(255,255,255,1)\",\n    노란색: \"rgba(255,255,0,1)\",\n    노랑: \"rgba(255,255,0,1)\",\n    c_yellow: \"rgba(255,255,0,1)\",\n};\n\nconst CHINESE_COLOR: Record<string, string> = {\n    水色: \"rgba(0,255,255,1)\",\n    c_aqua: \"rgba(0,255,255,1)\",\n    黑色: \"rgba(0,0,0,1)\",\n    c_black: \"rgba(0,0,0,1)\",\n    蓝色: \"rgba(0,0,255,1)\",\n    c_blue: \"rgba(0,0,255,1)\",\n    深灰色: \"rgba(64,64,64,1)\",\n    c_dkgray: \"rgba(64,64,64,1)\",\n    紫红色: \"rgba(255,0,255,1)\",\n    c_fuchsia: \"rgba(255,0,255,1)\",\n    灰色: \"rgba(128,128,128,1)\",\n    c_gray: \"rgba(128,128,128,1)\",\n    绿色: \"rgba(0,128,0,1)\",\n    c_green: \"rgba(0,128,0,1)\",\n    浅绿色: \"rgba(0,255,0,1)\",\n    c_lime: \"rgba(0,255,0,1)\",\n    浅灰色: \"rgba(192,192,192,1)\",\n    c_ltgray: \"rgba(192,192,192,1)\",\n    栗色: \"rgba(128,0,0,1)\",\n    c_maroon: \"rgba(128,0,0,1)\",\n    绀青色: \"rgba(0,0,128,1)\",\n    c_navy: \"rgba(0,0,128,1)\",\n    黄绿色: \"rgba(128,128,0,1)\",\n    c_olive: \"rgba(128,128,0,1)\",\n    橙黄色: \"rgba(255,160,64,1)\",\n    c_orange: \"rgba(255,160,64,1)\",\n    紫色: \"rgba(128,0,128,1)\",\n    c_purple: \"rgba(128,0,128,1)\",\n    红色: \"rgba(255,0,0,1)\",\n    c_red: \"rgba(255,0,0,1)\",\n    银白色: \"rgba(192,192,192,1)\",\n    c_silver: \"rgba(192,192,192,1)\",\n    水鸭色: \"rgba(0,128,128,1)\",\n    c_teal: \"rgba(0,128,128,1)\",\n    白色: \"rgba(255,255,255,1)\",\n    c_white: \"rgba(255,255,255,1)\",\n    黄色: \"rgba(255,255,0,1)\",\n    c_yellow: \"rgba(255,255,0,1)\",\n};\n\nconst ENGLISH_COLOR: Record<string, string> = {\n    AQUA: \"rgba(0,255,255,1)\",\n    c_aqua: \"rgba(0,255,255,1)\",\n    BLACK: \"rgba(0,0,0,1)\",\n    c_black: \"rgba(0,0,0,1)\",\n    BLUE: \"rgba(0,0,255,1)\",\n    c_blue: \"rgba(0,0,255,1)\",\n    DKGRAY: \"rgba(64,64,64,1)\",\n    c_dkgray: \"rgba(64,64,64,1)\",\n    FUCHSIA: \"rgba(255,0,255,1)\",\n    c_fuchsia: \"rgba(255,0,255,1)\",\n    GRAY: \"rgba(128,128,128,1)\",\n    c_gray: \"rgba(128,128,128,1)\",\n    GREEN: \"rgba(0,128,0,1)\",\n    c_green: \"rgba(0,128,0,1)\",\n    LIME: \"rgba(0,255,0,1)\",\n    c_lime: \"rgba(0,255,0,1)\",\n    LTGRAY: \"rgba(192,192,192,1)\",\n    c_ltgray: \"rgba(192,192,192,1)\",\n    MAROON: \"rgba(128,0,0,1)\",\n    c_maroon: \"rgba(128,0,0,1)\",\n    NAVY: \"rgba(0,0,128,1)\",\n    c_navy: \"rgba(0,0,128,1)\",\n    OLIVE: \"rgba(128,128,0,1)\",\n    c_olive: \"rgba(128,128,0,1)\",\n    ORANGE: \"rgba(255,160,64,1)\",\n    c_orange: \"rgba(255,160,64,1)\",\n    PURPLE: \"rgba(128,0,128,1)\",\n    c_purple: \"rgba(128,0,128,1)\",\n    RED: \"rgba(255,0,0,1)\",\n    c_red: \"rgba(255,0,0,1)\",\n    SILVER: \"rgba(192,192,192,1)\",\n    c_silver: \"rgba(192,192,192,1)\",\n    TEAL: \"rgba(0,128,128,1)\",\n    c_teal: \"rgba(0,128,128,1)\",\n    WHITE: \"rgba(255,255,255,1)\",\n    c_white: \"rgba(255,255,255,1)\",\n    YELLOW: \"rgba(255,255,0,1)\",\n    c_yellow: \"rgba(255,255,0,1)\",\n};\n\nconst JAPANESE_COLOR: Record<string, string> = {\n    水色: \"rgba(0,255,255,1)\",\n    アクア色: \"rgba(0,255,255,1)\",\n    c_aqua: \"rgba(0,255,255,1)\",\n    黑色: \"rgba(0,0,0,1)\",\n    c_black: \"rgba(0,0,0,1)\",\n    靑色: \"rgba(0,0,255,1)\",\n    c_blue: \"rgba(0,0,255,1)\",\n    ふか灰色: \"rgba(64,64,64,1)\",\n    c_dkgray: \"rgba(64,64,64,1)\",\n    紫紅色: \"rgba(255,0,255,1)\",\n    c_fuchsia: \"rgba(255,0,255,1)\",\n    灰色: \"rgba(128,128,128,1)\",\n    c_gray: \"rgba(128,128,128,1)\",\n    綠色: \"rgba(0,128,0,1)\",\n    c_green: \"rgba(0,128,0,1)\",\n    黃綠: \"rgba(0,255,0,1)\",\n    c_lime: \"rgba(0,255,0,1)\",\n    鼠色: \"rgba(192,192,192,1)\",\n    c_ltgray: \"rgba(192,192,192,1)\",\n    \"―色\": \"rgba(128,0,0,1)\",\n    c_maroon: \"rgba(128,0,0,1)\",\n    群青色: \"rgba(0,0,128,1)\",\n    ネイビー: \"rgba(0,0,128,1)\",\n    c_navy: \"rgba(0,0,128,1)\",\n    黃綠色: \"rgba(128,128,0,1)\",\n    オリーブ色: \"rgba(128,128,0,1)\",\n    c_olive: \"rgba(128,128,0,1)\",\n    橙色: \"rgba(255,160,64,1)\",\n    オレンジ色: \"rgba(255,160,64,1)\",\n    c_orange: \"rgba(255,160,64,1)\",\n    紫色: \"rgba(128,0,128,1)\",\n    c_purple: \"rgba(128,0,128,1)\",\n    赤色: \"rgba(255,0,0,1)\",\n    レッド: \"rgba(255,0,0,1)\",\n    c_red: \"rgba(255,0,0,1)\",\n    銀色: \"rgba(192,192,192,1)\",\n    c_silver: \"rgba(192,192,192,1)\",\n    ミント色: \"rgba(0,128,128,1)\",\n    薄荷色: \"rgba(0,128,128,1)\",\n    c_teal: \"rgba(0,128,128,1)\",\n    白色: \"rgba(255,255,255,1)\",\n    c_white: \"rgba(255,255,255,1)\",\n    黃色: \"rgba(255,255,0,1)\",\n    c_yellow: \"rgba(255,255,0,1)\",\n};\n\nRS.MessageSystem.getKoreanColor = function (str: string) {\n    let color = KOREAN_COLORS[str];\n\n    if (color) {\n        return color;\n    }\n\n    if ([\"기본\", \"기본색\", \"c_normal\"].contains(str)) {\n        return Color.getBaseColor();\n    }\n\n    return Color.getUserCustomColor(str);\n};\n\nRS.MessageSystem.getChineseColor = function (str: string) {\n    let color = CHINESE_COLOR[str];\n\n    if (color) {\n        return color;\n    }\n\n    if ([\"通常\", \"c_normal\"].contains(str)) {\n        return Color.getBaseColor();\n    }\n\n    return Color.getUserCustomColor(str);\n};\n\nRS.MessageSystem.getEnglishColor = function (str: string) {\n    let color = ENGLISH_COLOR[str];\n\n    if (color) {\n        return color;\n    }\n\n    if (\"c_normal\" === str) {\n        return Color.getBaseColor();\n    }\n\n    return Color.getUserCustomColor(str);\n};\n\nRS.MessageSystem.getJapaneseColor = function (str: string) {\n    let color = JAPANESE_COLOR[str];\n\n    if (color) {\n        return color;\n    }\n\n    if ([\"基本色\", \"c_normal\"].contains(str)) {\n        return Color.getBaseColor();\n    }\n\n    return Color.getUserCustomColor(str);\n};\n\nRS.MessageSystem.getBrowser = function () {\n    /* Refer to https://stackoverflow.com/a/16938481 */\n    var ua = navigator.userAgent,\n        tem,\n        M =\n            ua.match(\n                /(opera|chrome|edge|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i\n            ) || [];\n\n    if (/trident/i.test(M[1])) {\n        tem = /\\brv[ :]+(\\d+)/g.exec(ua) || [];\n\n        return {\n            name: \"IE\",\n            version: tem[1] || \"\",\n        };\n    }\n\n    if (M[1] === \"Chrome\") {\n        tem = ua.match(/\\bOPR\\/(\\d+)/);\n        if (tem != null) {\n            return {\n                name: \"Opera\",\n                version: tem[1],\n            };\n        }\n\n        tem = ua.match(/\\bEdge\\/(\\d+)/);\n        if (tem != null) {\n            return {\n                name: \"Edge\",\n                version: tem[1],\n            };\n        }\n    }\n\n    M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, \"-?\"];\n\n    if ((tem = ua.match(/version\\/(\\d+)/i)) != null) {\n        M.splice(1, 1, tem[1]);\n    }\n\n    return {\n        name: M[0],\n        version: M[1],\n    };\n};\n\nColor.gmColor = function (str: string) {\n    const type = <string>RS.MessageSystem.Params.langCode;\n    if (type.match(/ko/)) {\n        return RS.MessageSystem.getKoreanColor(str);\n    }\n    if (type.match(/zh/)) {\n        return RS.MessageSystem.getChineseColor(str);\n    }\n    if (type.match(/en/)) {\n        return RS.MessageSystem.getEnglishColor(str);\n    }\n    if (type.match(/ja/)) {\n        return RS.MessageSystem.getJapaneseColor(str);\n    }\n    return RS.MessageSystem.getEnglishColor(str);\n};\n\nwindow.RS = RS;\n","/// <reference types=\"../types/my-types\" />\n/// <reference types=\"../types/lunalite-pixi-mz\" />\nimport { NameWindowPositionComponent } from \"./components/NameWindowPositionComponent\";\nimport ComponentExecutor from \"./core/ComponentExecutor\";\nimport { getBitmapCommand } from \"./commands/Bitmap.command\";\nimport { getMainCommand } from \"./commands/Main.command\";\nimport { getGameCommandCommand } from \"./commands/GameMessage.command\";\n\nconst executor = ComponentExecutor.getInstance();\n\nexecutor\n    // commands\n    .add(\"bitmap\", getBitmapCommand())\n    .add(\"gameMessage\", getGameCommandCommand())\n    .add(\"main\", getMainCommand())\n    // active commands\n    .ready(\"bitmap\")\n    .ready(\"gameMessage\")\n    .ready(\"main\")\n    // execute commands\n    .executeAll();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(607);\n"],"names":["alias_Bitmap_initialize","Bitmap","prototype","initialize","width","height","call","this","fontBold","fontGradient","highlightTextColor","setGradient","text","color1","color2","color3","tx","ty","context","_context","tWidth","measureTextWidth","save","gradient","createLinearGradient","addColorStop","restore","_baseTexture","update","setGradientStyle","RS","MessageSystem","Params","lineHeight","grd","style","gradientStyle","contains","ws","hs","createRadialGradient","_makeFontNameText","fontItalic","fontSize","fontFace","_drawTextBody","maxWidth","imageSmoothingEnabled","fontSmoothingEnabled","gradientColor1","gradientColor2","gradientColor3","fillStyle","textColor","fillText","alias_Game_Message_clear","Game_Message","clear","_waitTime","_gradientText","_balloon","_align","_balloonPatternHeight","_lastAlign","setWaitTime","time","setGradientText","getWaitTime","getGradientText","getMaxLine","_maxLine","setMaxLine","maxLine","numVisibleRows","setBalloon","n","getBalloon","setAlign","push","getAlign","last","shift","undefined","clearAlignLast","setBalloonPatternHeight","value","getBalloonPatternHeight","Sprite_Battler","screenX","x","screenY","y","MessageDesc","constructor","outlineColor","outlineWidth","textSpeed","_isSaved","messageWindow","contents","$gameMessage","Window_Base","obtainEscapeCode","textState","arr","Reg","defaultEscapeCode","exec","slice","index","length","toUpperCase","obtainNameColor","Color","gmColor","ColorManager","changeTextColor","color","c","parseInt","alias_Window_Base_processEscapeCharacter","processEscapeCharacter","code","tcGroup","TextCodes","ENUM","textCode","Main","obtainEscapeParam","COLOR","ICON","processDrawIcon","INCREASE","makeFontBigger","DECREASE","makeFontSmaller","alias_loadWindowskin","loadWindowskin","windowskin","addLoadListener","baseColor","getFontFace","langCode","navigator","language","fonts","default","drawTextEx","resetFontSettings","createTextState","processAllText","outputWidth","minFontSize","defaultOutlineWidth","defaultOutlineColor","resetTextColor","maxFontSize","_messageDesc","console","log","alias_Window_Base_convertEscapeCharacters","convertEscapeCharacters","regGroup","Group","replace","VAR","args","$gameVariables","toString","bind","PLAYER","actorName","PARTY_MEMBER","partyMemberName","NUM","toComma","GOLD","TextManager","currencyUnit","CLASSES","$dataClasses","name","ITEM","$dataItems","WEAPON","$dataWeapons","ARMOR","$dataArmors","ENEMY","$dataEnemies","STATE","$dataStates","SKILL","$dataSkills","ALIGN_LEFT","ALIGN","ALIGN_CENTER","ALIGN_RIGHT","_isUsedTextWidthEx","Number","ALIGN_CLEAR","source","textPadding","itemPadding","newLineX","processAlign","_textState","rtl","setAlignLeft","setAlignCenter","setAlignRight","alias_Window_Base_processNewLine_align","processNewLine","startX","padding","contentsWidth","Window_Message","obtainTextSpeed","obtainGradientText","String","obtainSoundName","alias_Window_Message_processEscapeCharacter","TEXT_SPEED","TEXT_SIZE","setTextSize","OUTLINE_COLOR","setStrokeColor","INDENT","setTextIndent","OUTLINE_WIDTH","setStrokeWidth","BOLD","setTextBold","BOLD_START","BOLD_END","ITALIC","setTextItalic","ITALIC_START","ITALIC_END","GRADIENT","setTextGradient","HIGHLIGHT_TEXT_COLOR","setHighlightTextColor","TAB","textWidth","TabSize","CARRIAGE_RETURN","startWait","PLAY_SE","playSe","SHOW_PICTURE","showPicture","HIDE_PICTURE","erasePicture","FACE","split","clamp","seName","data","trim","pan","pitch","volume","ConfigManager","seVolume","AudioManager","param","raw","map","e","params","ret","forEach","i","a","$gameScreen","apply","picId","_pauseSignSprite","move","_width","_height","scale","resetGradient","alias_Window_Message_createTextState","px","py","Object","assign","processWordWrap","w","isValid","Math","floor","needsNewPage","startPause","alias_Window_Message_processNewLinePW","_backBuffer","isDirty","processCharacter","charCodeAt","flushTextState","processControlCharacter","buffer","alias_Window_Message_processCharacter","preLen","substr","processNormalCharacterProxy","isNormalMessageWindow","isRealDrawingMode","drawing","isParagraphMinifier","faceName","ImageManager","faceWidth","faceDirection","contentW","contentH","fillAll","alias_Window_Message_flushTextState","isDrawing","isSlowTextMode","_showFast","isEndOfText","isDrawingTextBackground","backBuffer","bitmap","min","innerWidth","innerHeight","flushTextBackgbround","updateBigFaceOpacity","_faceContents","faceOpacity","opacity","fadeInOutFaceContents","isOpening","isClosing","openness","alias_Window_Message_checkToNotClose","checkToNotClose","updateBalloonPosition","component","DependencyInjector","getComponent","getDefaultSizeOption","isMobileDevice","Utils","maxSW","window","outerWidth","screen","availWidth","maxSH","outerHeight","availHeight","maxHeight","maxY","maxX","updatePlacement","goldWindow","_goldWindow","isNormalWindowMode","isValidSceneIsMap","SceneManager","_scene","Scene_Map","_positionType","positionType","desiredX","Graphics","windowOffset","desiredY","minGoldY","updateDefaultOpacity","updateContentsOpacity","isBigFace","backIndex","faceSide","setFaceZIndex","isAlreadyDrawnFace","zIndex","parent","isFaceSide","setChildIndex","clearFaceBitmap","alias_Window_Message_convertEscapeCharacters","BOLD_START_CV","BOLD_END_CV","ITALIC_START_CV","ITALIC_END_CV","NAME","retName","endsWith","namePositionTypeAtX","_nameBoxWindow","setName","BALLOON","arguments","$gameParty","inBattle","abs","FRIENDLY_TROOPS","ENEMY_TROOPS","FACE_DIRECTION","setHeight","fittingHeight","createContents","alias_Window_Message_initialize","rect","$gameTemp","setMSHeightFunc","createFaceContents","on","removeEventHandler","onLoadWindowskin","calcBalloonRect","alias_Window_Message_newPage","newPage","emit","openBalloon","updateBalloonPositionInBattle","sign","setupOwner","Scene_Battle","resizeMessageSystem","startMessage","allText","tempText","updateBackground","open","start","getDefaultWindowRect","Scene_Message","messageWindowRect","windowWidth","windowHeight","isResetOwner","isBattleScene","ox","oy","windowRect","$gameMap","setMsgOwner","$gamePlayer","off","isReady","getPixel","loadSystem","_isDirtyWindowskin","setTimeout","_Window_Message_updateLoading","updateLoading","contentsHeight","Sprite","addChildAt","removeFaceContents","removeChild","faceIndex","faceStartX","textStartX","faceStartOriginX","isValidBigFace","updateNameWindow","standardBackOpacity","backOpacity","translucentOpacity","defaultOpacity","contentsOpacity","getSpriteActors","members","max","type","id","getSpriteEnemies","$gameTroop","getMsgEvent","test","RegExp","$1","event","alias_Window_Message_shouldBreakHere","shouldBreakHere","isBreakCharacter","isPlayTextSound","interval","textSoundInterval","_textSoundInterval","playStaticSe","popParameter","Game_Interpreter","processMessageParams","eventId","meta","getEventComments","windowskinForNameWindow","faceOX","faceOY","Boolean","isValidMultiLine","codes","prevCode","lineCount","currentCommand","_list","_index","choiceWindowStyle","command101","isBusy","setMsgEvent","character","_eventId","setFaceImage","setBackground","setPositionType","setSpeakerName","isMultiLine","multiLineAddMessage","nextEventCode","add","parameters","setupChoices","setupNumInput","setupItemChoice","setWaitMode","initLineHeight","_texts","addLineHeight","_lineHeight","Window_NameBox","_messageWindow","isRTL","Game_Temp","func","_callMSHeightFunc","alias_Game_Map_initialize","Game_Map","_msgOwner","_msgEvent","getMsgOwner","o","tileHeight","ev","alias_Scene_Message_associateWindows__enrtyPoint","associateWindows","injectMessageWindow","ready","ww","wh","calcWindowHeight","wx","Rectangle","alias_Scene_Message_terminate","terminate","ejectMessageWindow","initSystem","DEBUG","showDevTools","nw","Window","get","moveTo","BalloonWindowTransformComponent","BaseComponent","_bWidth","_bHeight","onReady","props","super","textSizeEx","standardPadding","isActiveInBalloon","setBalloonRect","dx","dy","drawMessageFace","setBalloonPlacement","bw","boxWidth","bh","boxHeight","JSON","stringify","mx","canvasToLocalX","my","scaleY","ny","nameWindowY","updateSubBalloonElements","_nameWindow","getNameWindowY","owner","warn","Error","$gameSystem","isSideView","hasOwnProperty","scene","_spriteset","_actorSprites","_enemySprites","tempBattlers","target","_actor","isAlive","_enemy","padY","_mainSprite","transform","updateTransform","calcBalloonRectHeight","tempFontSize","calcTextHeight","Component","error","_choiceWindow","_choiceListWindow","updatePadding","numLines","canvasToLocalY","NameWindowPositionComponent","setOpacity","isNaN","updatePositionX","position","nx","nameWindowX","newX","updatePositionY","ballonOwnerType","topY","isOpen","EventEmitter","init","mounted","onDestroy","destroy","execute","ComponentExecutor","static","INSTANCE","_components","startChar","endChar","len","fromCharCode","random","callbackFunction","active","wrap","deactive","executeAll","key","currentCallback","Function","inject","_isDirty","COMPONENTS","filter","getComponentClass","pop","_listeners","eventName","pluginParams","$plugins","description","pluginName","MessageParams","jsonParse","str","parse","k","v","keys","lastUsed","Default","Korean","Chinese","English","Japanese","FACE_START_ORIGIN_X","nameWindowWidth","NAME_WINDOW_WIDTH","nameWindowRows","NAME_WINDOW_ROWS","FONT_SIZE","STD_PADDING","isValidShakingChoice","nameWindowStdPadding","WIDTH","HEIGHT","isTempSpriteContainerVisibility","Point","customFont","customFontName","customFontSrc","defaultChoicePostion","exTextColors","pathTextSound","textSoundEval1","textSoundEval2","textSoundPoolSize","preloadWindowskins","isNwjs","isOptionValid","systemFonts","settings","languageCode","fontName","alias_Game_Temp_initialize","eval","KoreanEscapeCode","ChineseEscapeCode","EnglishEscapeCode","JapaneseEscapeCode","rowData","retData","concat","WAIT_SEC_15","WAIT_SEC_60","START_PAUSE","LINE_SHOW_FAST_LT","LINE_SHOW_FAST_GT","PAUSE_SKIP","getTextCode","idx","match","note","list","commonEvent","reservedCommonEvent","re","join","getColor","obj","r","g","b","parseFloat","KOREAN_COLORS","c_aqua","c_black","c_blue","c_dkgray","c_fuchsia","c_gray","c_green","c_lime","c_ltgray","c_maroon","c_navy","c_olive","c_orange","c_purple","c_red","c_silver","c_teal","c_white","c_yellow","CHINESE_COLOR","ENGLISH_COLOR","AQUA","BLACK","BLUE","DKGRAY","FUCHSIA","GRAY","GREEN","LIME","LTGRAY","MAROON","NAVY","OLIVE","ORANGE","PURPLE","RED","SILVER","TEAL","WHITE","YELLOW","JAPANESE_COLOR","getKoreanColor","getBaseColor","getUserCustomColor","getChineseColor","getEnglishColor","getJapaneseColor","getBrowser","tem","ua","userAgent","M","version","appName","appVersion","splice","getInstance","getBitmapCommand","getGameCommandCommand","getMainCommand","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","__webpack_exports__"],"sourceRoot":""}